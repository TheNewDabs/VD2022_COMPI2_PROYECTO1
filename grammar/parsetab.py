
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALQUENIGUALQUEleftMAYQUEMENQUEMAYIGUALQUEMENIGUALQUEleftMASMENOSleftPORDIVIDIDOMODULOleftPOTENCIArightUMENOSAND ARRAY BOOL BREAK CADENA CARACTER CHAR COMA CONTINUE CORCHETEDER CORCHETEIZQ COS DECIMAL DIVIDIDO DOSP ELSE ELSEIF END ENTERO FALSE FLOAT FOR FUNCTION ID IF IGUAL IGUALQUE IN INT LEN LOCAL LOG LOG10 LOWERCASE MAS MAYIGUALQUE MAYQUE MENIGUALQUE MENOS MENQUE MODULO NIGUALQUE NOT NOTHING OR PARDER PARIZQ PARSE POP POR POTENCIA PRINT PRINTLN PTCOMA PUNTO PUSH RANGE RETURN SIN SQRT STR STRING STRUCT TAN TRUE TRUNC TYPEOF UPPERCASE WHILE newlineinit            : instruccionesinstrucciones    : instrucciones instruccion\n                        | instruccioninstruccion      : print_instr newline\n                        | println_instr newline\n                        | definicion_instr newline\n                        | asignacion_instr newline\n                        | asignacion_arreglo_instr newline\n                        | definicion_asignacion_instr newline\n                        | call_function newline\n                        | declare_function newline\n                        | return_state newline\n                        | break_state newline\n                        | continue_state newline\n                        | if_state newline\n                        | while_state newline\n                        | for_state newline\n                        | nativas newline\n                        | create_struct newline\n                        | declare_struct newline\n                        | assign_access newlineexpression       : MENOS expression %prec UMENOS\n                        | NOT expression %prec UMENOS\n                        | expression MAS expression\n                        | expression MENOS expression\n                        | expression POR expression\n                        | expression DIVIDIDO expression\n                        | expression POTENCIA expression\n                        | expression MODULO expression\n                        | expression MAYQUE expression\n                        | expression MENQUE expression\n                        | expression MENIGUALQUE expression\n                        | expression MAYIGUALQUE expression\n                        | expression IGUALQUE expression\n                        | expression NIGUALQUE expression\n                        | expression OR expression\n                        | expression AND expression\n                        | final_expressionfinal_expression     : PARIZQ expression PARDER\n                            | CORCHETEIZQ exp_list CORCHETEDER\n                            | DECIMAL\n                            | ENTERO\n                            | CADENA\n                            | CARACTER\n                            | ID\n                            | ID index_list\n                            | TRUE\n                            | FALSE\n                            | call_function\n                            | access_struct\n                            | nativasnativas          : LOG PARIZQ ENTERO COMA expression PARDER\n                        | LOG10 PARIZQ expression PARDER\n                        | COS PARIZQ expression PARDER\n                        | SIN PARIZQ expression PARDER\n                        | TAN PARIZQ expression PARDER\n                        | SQRT PARIZQ expression PARDER\n                        | UPPERCASE PARIZQ expression PARDER\n                        | LOWERCASE PARIZQ expression PARDER\n                        | STR PARIZQ expression PARDER\n                        | RANGE PARIZQ expression PARDER\n                        | FLOAT PARIZQ expression PARDER\n                        | BOOL PARIZQ expression PARDER\n                        | INT PARIZQ expression PARDER\n                        | TRUNC PARIZQ INT COMA expression PARDER\n                        | TRUNC PARIZQ expression PARDER\n                        | TYPEOF PARIZQ expression PARDER\n                        | PARSE PARIZQ tipo COMA expression PARDER\n                        | LEN PARIZQ expression PARDER\n                        | PUSH PARIZQ expression COMA expression PARDER\n                        | POP PARIZQ expression PARDER\n                        print_instr    : PRINT PARIZQ exp_list PARDERprintln_instr  : PRINTLN PARIZQ exp_list PARDERtipo     : INT\n                | FLOAT\n                | BOOL\n                | CHAR\n                | STRING\n                | ARRAY\n                | NOTHING\n    definicion_instr   :  LOCAL IDasignacion_instr     : ID IGUAL expression\n                            | LOCAL ID IGUAL expressiondefinicion_asignacion_instr  : ID IGUAL expression DOSP tipo\n                                    | LOCAL ID IGUAL expression DOSP tipoasignacion_arreglo_instr     : ID index_list IGUAL expressioncall_function    : ID PARIZQ PARDER\n                        | ID PARIZQ exp_list PARDERexp_list         : exp_list COMA expression\n                        | expressionindex_list       : index_list CORCHETEIZQ expression CORCHETEDER\n                        | CORCHETEIZQ expression CORCHETEDERstatement        : instruccionesdeclare_function     : FUNCTION ID PARIZQ dec_params PARDER DOSP newline statement END\n                            | FUNCTION ID PARIZQ PARDER DOSP newline statement ENDdec_params :    dec_params COMA ID DOSP DOSP tipo\n                    | dec_params COMA ID DOSP DOSP ID\n                    | dec_params COMA ID\n                    | ID DOSP DOSP tipo\n                    | ID DOSP DOSP ID\n                    | IDif_state     : IF expression DOSP newline statement END\n                    | IF expression DOSP newline statement ELSE DOSP newline statement END\n                    | IF expression DOSP newline statement else_if_list ENDelse_if_list     : ELSEIF expression DOSP newline statement\n                        | ELSEIF expression DOSP newline statement ELSE DOSP newline statement\n                        | ELSEIF expression DOSP newline statement else_if_listwhile_state      : WHILE expression DOSP newline statement ENDfor_state        : FOR ID IN expression DOSP expression DOSP newline statement END\n                        | FOR ID IN expression DOSP newline statement ENDbreak_state      : BREAKcontinue_state      : CONTINUEreturn_state     : RETURN\n                        | RETURN expressioncreate_struct : STRUCT ID DOSP newline attList ENDattList :  attList ID DOSP tipo PTCOMA newline\n                | ID DOSP tipo PTCOMA newlinedeclare_struct : ID DOSP DOSP IDassign_access : ID PUNTO ID IGUAL expressionaccess_struct : ID PUNTO ID'
    
_lr_action_items = {'PRINT':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[22,22,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,22,22,22,22,22,22,22,22,22,22,]),'PRINTLN':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,23,23,23,23,23,23,23,23,23,23,]),'LOCAL':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[24,24,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,24,24,24,24,24,24,24,24,24,24,]),'ID':([0,2,3,24,26,27,30,31,32,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,153,156,186,194,216,217,219,232,235,237,239,247,250,252,258,260,263,267,270,280,291,293,295,303,305,310,314,],[25,25,-3,74,81,92,92,92,100,120,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,92,92,92,92,131,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,192,196,92,92,92,92,92,92,92,92,92,92,92,92,92,92,215,92,92,92,25,25,92,92,92,92,257,262,25,92,276,278,25,92,25,25,300,25,25,25,-117,-116,25,]),'FUNCTION':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[26,26,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,26,26,26,26,26,26,26,26,26,26,]),'RETURN':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[27,27,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,27,27,27,27,27,27,27,27,27,27,]),'BREAK':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[28,28,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,28,28,28,28,28,28,28,28,28,28,]),'CONTINUE':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[29,29,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,29,29,29,29,29,29,29,29,29,29,]),'IF':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[30,30,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,30,30,30,30,30,30,30,30,30,30,]),'WHILE':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[31,31,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,31,31,31,31,31,31,31,31,]),'FOR':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[32,32,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,32,32,32,32,32,32,32,32,32,32,]),'LOG':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[33,33,-3,33,33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LOG10':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[34,34,-3,34,34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'COS':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[35,35,-3,35,35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'SIN':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[36,36,-3,36,36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TAN':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[37,37,-3,37,37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'SQRT':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[38,38,-3,38,38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'UPPERCASE':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[39,39,-3,39,39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LOWERCASE':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[40,40,-3,40,40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'STR':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[41,41,-3,41,41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'RANGE':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[42,42,-3,42,42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'FLOAT':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,189,194,216,217,219,232,235,237,241,250,252,260,263,267,270,275,280,289,291,293,295,303,314,],[43,43,-3,43,43,43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,175,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,175,43,43,43,43,43,43,43,175,43,43,175,43,43,43,175,43,175,175,43,43,43,43,]),'BOOL':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,189,194,216,217,219,232,235,237,241,250,252,260,263,267,270,275,280,289,291,293,295,303,314,],[44,44,-3,44,44,44,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,176,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,176,44,44,44,44,44,44,44,176,44,44,176,44,44,44,176,44,176,176,44,44,44,44,]),'INT':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,189,194,216,217,219,232,235,237,241,250,252,260,263,267,270,275,280,289,291,293,295,303,314,],[45,45,-3,45,45,45,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,170,45,174,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,174,45,45,45,45,45,45,45,174,45,45,174,45,45,45,174,45,174,174,45,45,45,45,]),'TRUNC':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[46,46,-3,46,46,46,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TYPEOF':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[47,47,-3,47,47,47,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'PARSE':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[48,48,-3,48,48,48,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'LEN':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[49,49,-3,49,49,49,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'PUSH':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[50,50,-3,50,50,50,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'POP':([0,2,3,27,30,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[51,51,-3,51,51,51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STRUCT':([0,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,216,217,250,263,270,280,293,295,303,314,],[52,52,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,52,52,52,52,52,52,52,52,52,]),'$end':([1,2,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'END':([3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,249,250,251,258,266,282,287,290,302,304,305,308,310,312,315,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,264,-93,268,277,284,292,296,299,307,309,-117,-105,-116,-107,-106,]),'ELSE':([3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,249,250,308,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,265,-93,311,]),'ELSEIF':([3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,249,250,308,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,267,-93,267,]),'newline':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,27,28,29,74,82,85,88,89,90,91,92,93,94,95,96,97,125,129,148,149,152,154,155,174,175,176,177,178,179,180,184,185,187,188,190,192,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,242,243,244,248,252,259,261,264,268,271,272,273,274,277,283,284,286,292,294,296,297,299,306,307,309,313,],[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,-113,-111,-112,-81,-114,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-82,-87,-22,-23,-46,216,217,-74,-75,-76,-77,-78,-79,-80,239,-72,-73,-83,-86,-118,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-39,-40,-120,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,-84,-91,-119,263,270,-85,280,-102,-108,-52,-65,-68,-70,-115,293,-104,295,-95,303,-110,305,-94,310,-103,-109,314,]),'PARIZQ':([22,23,25,27,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,75,78,80,81,83,84,86,87,92,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,170,186,194,219,232,235,237,252,267,],[72,73,78,86,86,86,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,86,86,86,86,86,133,86,86,86,86,78,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,113,86,86,86,86,86,86,86,86,]),'IGUAL':([25,74,76,131,195,243,],[75,124,126,194,-92,-91,]),'DOSP':([25,77,85,88,89,90,91,92,93,94,95,96,97,98,99,120,125,129,148,149,152,188,193,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,243,245,246,257,262,265,269,271,272,273,274,276,281,285,311,],[77,128,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,154,155,184,189,-87,-22,-23,-46,241,-88,-92,245,248,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-39,-40,-120,252,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,-91,260,261,275,281,283,286,-52,-65,-68,-70,289,291,294,313,]),'PUNTO':([25,92,],[79,153,]),'CORCHETEIZQ':([25,27,30,31,72,73,75,76,78,80,83,84,86,87,92,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,156,186,194,195,219,232,235,237,243,252,267,],[80,87,87,87,87,87,87,127,87,87,87,87,87,87,80,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,127,87,87,87,-92,87,87,87,87,-91,87,87,]),'MENOS':([27,30,31,72,73,75,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,122,124,125,126,127,129,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,186,188,190,191,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,243,244,252,253,254,255,256,267,269,271,272,273,274,285,],[83,83,83,83,83,83,83,83,135,83,83,-38,83,83,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,135,135,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,135,83,135,83,83,-87,135,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-22,-23,135,-46,83,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,83,135,135,135,-88,83,-92,-24,-25,-26,-27,-28,-29,135,135,135,135,135,135,135,135,-39,-40,-120,135,83,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,83,-66,-67,83,-69,83,-71,135,-91,135,83,135,135,135,135,83,135,-52,-65,-68,-70,135,]),'NOT':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'DECIMAL':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'ENTERO':([27,30,31,72,73,75,78,80,83,84,86,87,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[89,89,89,89,89,89,89,89,89,89,89,89,157,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'CADENA':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'CARACTER':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'TRUE':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'FALSE':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'PARDER':([78,85,88,89,90,91,92,93,94,95,96,97,121,122,123,129,130,133,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,177,178,179,180,181,183,193,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,253,254,255,256,262,271,272,273,274,278,279,300,301,],[129,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,185,-90,187,-87,193,198,-22,-23,213,-46,220,221,222,223,224,225,226,227,228,229,230,231,233,234,-74,-75,-76,-77,-78,-79,-80,236,238,-88,-92,-101,246,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-39,-40,-120,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,-89,-91,271,272,273,274,-98,-52,-65,-68,-70,-100,-99,-97,-96,]),'MAS':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[134,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,134,134,134,134,-87,134,-22,-23,134,-46,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-88,-92,-24,-25,-26,-27,-28,-29,134,134,134,134,134,134,134,134,-39,-40,-120,134,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,134,-91,134,134,134,134,134,134,-52,-65,-68,-70,134,]),'POR':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[136,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,136,136,136,136,-87,136,-22,-23,136,-46,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-88,-92,136,136,-26,-27,-28,-29,136,136,136,136,136,136,136,136,-39,-40,-120,136,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,136,-91,136,136,136,136,136,136,-52,-65,-68,-70,136,]),'DIVIDIDO':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[137,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,137,137,137,137,-87,137,-22,-23,137,-46,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-88,-92,137,137,-26,-27,-28,-29,137,137,137,137,137,137,137,137,-39,-40,-120,137,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,137,-91,137,137,137,137,137,137,-52,-65,-68,-70,137,]),'POTENCIA':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[138,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,138,138,138,138,-87,138,-22,-23,138,-46,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-88,-92,138,138,138,138,-28,138,138,138,138,138,138,138,138,138,-39,-40,-120,138,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,138,-91,138,138,138,138,138,138,-52,-65,-68,-70,138,]),'MODULO':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[139,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,139,139,139,139,-87,139,-22,-23,139,-46,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-88,-92,139,139,-26,-27,-28,-29,139,139,139,139,139,139,139,139,-39,-40,-120,139,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,139,-91,139,139,139,139,139,139,-52,-65,-68,-70,139,]),'MAYQUE':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[140,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,140,140,140,140,-87,140,-22,-23,140,-46,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,140,140,140,140,-39,-40,-120,140,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,140,-91,140,140,140,140,140,140,-52,-65,-68,-70,140,]),'MENQUE':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[141,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,141,141,141,141,-87,141,-22,-23,141,-46,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,141,141,141,141,-39,-40,-120,141,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,141,-91,141,141,141,141,141,141,-52,-65,-68,-70,141,]),'MENIGUALQUE':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[142,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,142,142,142,142,-87,142,-22,-23,142,-46,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,142,142,142,142,-39,-40,-120,142,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,142,-91,142,142,142,142,142,142,-52,-65,-68,-70,142,]),'MAYIGUALQUE':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[143,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,143,143,143,143,-87,143,-22,-23,143,-46,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,143,143,143,143,-39,-40,-120,143,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,143,-91,143,143,143,143,143,143,-52,-65,-68,-70,143,]),'IGUALQUE':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[144,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,144,144,144,144,-87,144,-22,-23,144,-46,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,144,144,-39,-40,-120,144,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,144,-91,144,144,144,144,144,144,-52,-65,-68,-70,144,]),'NIGUALQUE':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[145,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,145,145,145,145,-87,145,-22,-23,145,-46,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,145,145,-39,-40,-120,145,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,145,-91,145,145,145,145,145,145,-52,-65,-68,-70,145,]),'OR':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[146,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,146,146,146,146,-87,146,-22,-23,146,-46,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-39,-40,-120,146,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,146,-91,146,146,146,146,146,146,-52,-65,-68,-70,146,]),'AND':([82,85,88,89,90,91,92,93,94,95,96,97,98,99,122,125,129,132,148,149,150,152,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,244,253,254,255,256,269,271,272,273,274,285,],[147,-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,147,147,147,147,-87,147,-22,-23,147,-46,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,147,-37,-39,-40,-120,147,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,147,-91,147,147,147,147,147,147,-52,-65,-68,-70,147,]),'COMA':([85,88,89,90,91,92,93,94,95,96,97,121,122,123,129,130,148,149,151,152,157,170,173,174,175,176,177,178,179,180,182,193,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,262,271,272,273,274,278,279,300,301,],[-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,186,-90,186,-87,186,-22,-23,186,-46,219,232,235,-74,-75,-76,-77,-78,-79,-80,237,-88,-92,-101,247,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-39,-40,-120,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,-89,-91,-98,-52,-65,-68,-70,-100,-99,-97,-96,]),'CORCHETEDER':([85,88,89,90,91,92,93,94,95,96,97,122,129,132,148,149,151,152,191,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,220,221,222,223,224,225,226,227,228,229,230,231,233,234,236,238,240,243,271,272,273,274,],[-38,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-90,-87,195,-22,-23,214,-46,243,-88,-92,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-39,-40,-120,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-69,-71,-89,-91,-52,-65,-68,-70,]),'IN':([100,],[156,]),'CHAR':([116,189,241,260,275,289,291,],[177,177,177,177,177,177,177,]),'STRING':([116,189,241,260,275,289,291,],[178,178,178,178,178,178,178,]),'ARRAY':([116,189,241,260,275,289,291,],[179,179,179,179,179,179,179,]),'NOTHING':([116,189,241,260,275,289,291,],[180,180,180,180,180,180,180,]),'PTCOMA':([174,175,176,177,178,179,180,288,298,],[-74,-75,-76,-77,-78,-79,-80,297,306,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,216,217,263,270,280,293,295,303,314,],[2,250,250,250,250,250,250,250,250,250,]),'instruccion':([0,2,216,217,250,263,270,280,293,295,303,314,],[3,53,3,3,53,3,3,3,3,3,3,3,]),'print_instr':([0,2,216,217,250,263,270,280,293,295,303,314,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'println_instr':([0,2,216,217,250,263,270,280,293,295,303,314,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'definicion_instr':([0,2,216,217,250,263,270,280,293,295,303,314,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion_instr':([0,2,216,217,250,263,270,280,293,295,303,314,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'asignacion_arreglo_instr':([0,2,216,217,250,263,270,280,293,295,303,314,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'definicion_asignacion_instr':([0,2,216,217,250,263,270,280,293,295,303,314,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'call_function':([0,2,27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[10,10,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,10,10,95,95,95,95,10,95,10,95,10,10,10,10,10,10,]),'declare_function':([0,2,216,217,250,263,270,280,293,295,303,314,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'return_state':([0,2,216,217,250,263,270,280,293,295,303,314,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'break_state':([0,2,216,217,250,263,270,280,293,295,303,314,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'continue_state':([0,2,216,217,250,263,270,280,293,295,303,314,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'if_state':([0,2,216,217,250,263,270,280,293,295,303,314,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'while_state':([0,2,216,217,250,263,270,280,293,295,303,314,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'for_state':([0,2,216,217,250,263,270,280,293,295,303,314,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'nativas':([0,2,27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,216,217,219,232,235,237,250,252,263,267,270,280,293,295,303,314,],[18,18,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,18,18,97,97,97,97,18,97,18,97,18,18,18,18,18,18,]),'create_struct':([0,2,216,217,250,263,270,280,293,295,303,314,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'declare_struct':([0,2,216,217,250,263,270,280,293,295,303,314,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'assign_access':([0,2,216,217,250,263,270,280,293,295,303,314,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'index_list':([25,92,],[76,152,]),'expression':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[82,98,99,122,122,125,122,132,148,149,150,122,158,159,160,161,162,163,164,165,166,167,168,169,171,172,181,182,183,188,190,191,199,200,201,202,203,204,205,206,207,208,209,210,211,212,218,240,244,253,254,255,256,269,285,]),'final_expression':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'access_struct':([27,30,31,72,73,75,78,80,83,84,86,87,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,124,126,127,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,186,194,219,232,235,237,252,267,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'exp_list':([72,73,78,87,],[121,123,130,151,]),'tipo':([116,189,241,260,275,289,291,],[173,242,259,279,288,298,301,]),'dec_params':([133,],[197,]),'statement':([216,217,263,270,280,293,295,303,314,],[249,251,282,287,290,302,304,308,315,]),'attList':([239,],[258,]),'else_if_list':([249,308,],[266,312,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',246),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',251),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','grammar.py',252),
  ('instruccion -> print_instr newline','instruccion',2,'p_instruccion','grammar.py',261),
  ('instruccion -> println_instr newline','instruccion',2,'p_instruccion','grammar.py',262),
  ('instruccion -> definicion_instr newline','instruccion',2,'p_instruccion','grammar.py',263),
  ('instruccion -> asignacion_instr newline','instruccion',2,'p_instruccion','grammar.py',264),
  ('instruccion -> asignacion_arreglo_instr newline','instruccion',2,'p_instruccion','grammar.py',265),
  ('instruccion -> definicion_asignacion_instr newline','instruccion',2,'p_instruccion','grammar.py',266),
  ('instruccion -> call_function newline','instruccion',2,'p_instruccion','grammar.py',267),
  ('instruccion -> declare_function newline','instruccion',2,'p_instruccion','grammar.py',268),
  ('instruccion -> return_state newline','instruccion',2,'p_instruccion','grammar.py',269),
  ('instruccion -> break_state newline','instruccion',2,'p_instruccion','grammar.py',270),
  ('instruccion -> continue_state newline','instruccion',2,'p_instruccion','grammar.py',271),
  ('instruccion -> if_state newline','instruccion',2,'p_instruccion','grammar.py',272),
  ('instruccion -> while_state newline','instruccion',2,'p_instruccion','grammar.py',273),
  ('instruccion -> for_state newline','instruccion',2,'p_instruccion','grammar.py',274),
  ('instruccion -> nativas newline','instruccion',2,'p_instruccion','grammar.py',275),
  ('instruccion -> create_struct newline','instruccion',2,'p_instruccion','grammar.py',276),
  ('instruccion -> declare_struct newline','instruccion',2,'p_instruccion','grammar.py',277),
  ('instruccion -> assign_access newline','instruccion',2,'p_instruccion','grammar.py',278),
  ('expression -> MENOS expression','expression',2,'p_expression','grammar.py',283),
  ('expression -> NOT expression','expression',2,'p_expression','grammar.py',284),
  ('expression -> expression MAS expression','expression',3,'p_expression','grammar.py',285),
  ('expression -> expression MENOS expression','expression',3,'p_expression','grammar.py',286),
  ('expression -> expression POR expression','expression',3,'p_expression','grammar.py',287),
  ('expression -> expression DIVIDIDO expression','expression',3,'p_expression','grammar.py',288),
  ('expression -> expression POTENCIA expression','expression',3,'p_expression','grammar.py',289),
  ('expression -> expression MODULO expression','expression',3,'p_expression','grammar.py',290),
  ('expression -> expression MAYQUE expression','expression',3,'p_expression','grammar.py',291),
  ('expression -> expression MENQUE expression','expression',3,'p_expression','grammar.py',292),
  ('expression -> expression MENIGUALQUE expression','expression',3,'p_expression','grammar.py',293),
  ('expression -> expression MAYIGUALQUE expression','expression',3,'p_expression','grammar.py',294),
  ('expression -> expression IGUALQUE expression','expression',3,'p_expression','grammar.py',295),
  ('expression -> expression NIGUALQUE expression','expression',3,'p_expression','grammar.py',296),
  ('expression -> expression OR expression','expression',3,'p_expression','grammar.py',297),
  ('expression -> expression AND expression','expression',3,'p_expression','grammar.py',298),
  ('expression -> final_expression','expression',1,'p_expression','grammar.py',299),
  ('final_expression -> PARIZQ expression PARDER','final_expression',3,'p_final_expression','grammar.py',356),
  ('final_expression -> CORCHETEIZQ exp_list CORCHETEDER','final_expression',3,'p_final_expression','grammar.py',357),
  ('final_expression -> DECIMAL','final_expression',1,'p_final_expression','grammar.py',358),
  ('final_expression -> ENTERO','final_expression',1,'p_final_expression','grammar.py',359),
  ('final_expression -> CADENA','final_expression',1,'p_final_expression','grammar.py',360),
  ('final_expression -> CARACTER','final_expression',1,'p_final_expression','grammar.py',361),
  ('final_expression -> ID','final_expression',1,'p_final_expression','grammar.py',362),
  ('final_expression -> ID index_list','final_expression',2,'p_final_expression','grammar.py',363),
  ('final_expression -> TRUE','final_expression',1,'p_final_expression','grammar.py',364),
  ('final_expression -> FALSE','final_expression',1,'p_final_expression','grammar.py',365),
  ('final_expression -> call_function','final_expression',1,'p_final_expression','grammar.py',366),
  ('final_expression -> access_struct','final_expression',1,'p_final_expression','grammar.py',367),
  ('final_expression -> nativas','final_expression',1,'p_final_expression','grammar.py',368),
  ('nativas -> LOG PARIZQ ENTERO COMA expression PARDER','nativas',6,'p_nativas','grammar.py',399),
  ('nativas -> LOG10 PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',400),
  ('nativas -> COS PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',401),
  ('nativas -> SIN PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',402),
  ('nativas -> TAN PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',403),
  ('nativas -> SQRT PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',404),
  ('nativas -> UPPERCASE PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',405),
  ('nativas -> LOWERCASE PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',406),
  ('nativas -> STR PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',407),
  ('nativas -> RANGE PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',408),
  ('nativas -> FLOAT PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',409),
  ('nativas -> BOOL PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',410),
  ('nativas -> INT PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',411),
  ('nativas -> TRUNC PARIZQ INT COMA expression PARDER','nativas',6,'p_nativas','grammar.py',412),
  ('nativas -> TRUNC PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',413),
  ('nativas -> TYPEOF PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',414),
  ('nativas -> PARSE PARIZQ tipo COMA expression PARDER','nativas',6,'p_nativas','grammar.py',415),
  ('nativas -> LEN PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',416),
  ('nativas -> PUSH PARIZQ expression COMA expression PARDER','nativas',6,'p_nativas','grammar.py',417),
  ('nativas -> POP PARIZQ expression PARDER','nativas',4,'p_nativas','grammar.py',418),
  ('print_instr -> PRINT PARIZQ exp_list PARDER','print_instr',4,'p_print_instr','grammar.py',464),
  ('println_instr -> PRINTLN PARIZQ exp_list PARDER','println_instr',4,'p_println_instr','grammar.py',469),
  ('tipo -> INT','tipo',1,'p_tipo','grammar.py',474),
  ('tipo -> FLOAT','tipo',1,'p_tipo','grammar.py',475),
  ('tipo -> BOOL','tipo',1,'p_tipo','grammar.py',476),
  ('tipo -> CHAR','tipo',1,'p_tipo','grammar.py',477),
  ('tipo -> STRING','tipo',1,'p_tipo','grammar.py',478),
  ('tipo -> ARRAY','tipo',1,'p_tipo','grammar.py',479),
  ('tipo -> NOTHING','tipo',1,'p_tipo','grammar.py',480),
  ('definicion_instr -> LOCAL ID','definicion_instr',2,'p_definicion_instr','grammar.py',499),
  ('asignacion_instr -> ID IGUAL expression','asignacion_instr',3,'p_asignacion_instr','grammar.py',505),
  ('asignacion_instr -> LOCAL ID IGUAL expression','asignacion_instr',4,'p_asignacion_instr','grammar.py',506),
  ('definicion_asignacion_instr -> ID IGUAL expression DOSP tipo','definicion_asignacion_instr',5,'p_definicion_asignacion_instr','grammar.py',515),
  ('definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP tipo','definicion_asignacion_instr',6,'p_definicion_asignacion_instr','grammar.py',516),
  ('asignacion_arreglo_instr -> ID index_list IGUAL expression','asignacion_arreglo_instr',4,'p_asignacion_arreglo_instr','grammar.py',525),
  ('call_function -> ID PARIZQ PARDER','call_function',3,'p_call_function_instr','grammar.py',532),
  ('call_function -> ID PARIZQ exp_list PARDER','call_function',4,'p_call_function_instr','grammar.py',533),
  ('exp_list -> exp_list COMA expression','exp_list',3,'p_exp_list_instr','grammar.py',541),
  ('exp_list -> expression','exp_list',1,'p_exp_list_instr','grammar.py',542),
  ('index_list -> index_list CORCHETEIZQ expression CORCHETEDER','index_list',4,'p_index_list_instr','grammar.py',551),
  ('index_list -> CORCHETEIZQ expression CORCHETEDER','index_list',3,'p_index_list_instr','grammar.py',552),
  ('statement -> instrucciones','statement',1,'p_statement','grammar.py',561),
  ('declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP newline statement END','declare_function',9,'p_declare_function','grammar.py',566),
  ('declare_function -> FUNCTION ID PARIZQ PARDER DOSP newline statement END','declare_function',8,'p_declare_function','grammar.py',567),
  ('dec_params -> dec_params COMA ID DOSP DOSP tipo','dec_params',6,'p_dec_params','grammar.py',575),
  ('dec_params -> dec_params COMA ID DOSP DOSP ID','dec_params',6,'p_dec_params','grammar.py',576),
  ('dec_params -> dec_params COMA ID','dec_params',3,'p_dec_params','grammar.py',577),
  ('dec_params -> ID DOSP DOSP tipo','dec_params',4,'p_dec_params','grammar.py',578),
  ('dec_params -> ID DOSP DOSP ID','dec_params',4,'p_dec_params','grammar.py',579),
  ('dec_params -> ID','dec_params',1,'p_dec_params','grammar.py',580),
  ('if_state -> IF expression DOSP newline statement END','if_state',6,'p_if_state','grammar.py',602),
  ('if_state -> IF expression DOSP newline statement ELSE DOSP newline statement END','if_state',10,'p_if_state','grammar.py',603),
  ('if_state -> IF expression DOSP newline statement else_if_list END','if_state',7,'p_if_state','grammar.py',604),
  ('else_if_list -> ELSEIF expression DOSP newline statement','else_if_list',5,'p_else_if_list','grammar.py',614),
  ('else_if_list -> ELSEIF expression DOSP newline statement ELSE DOSP newline statement','else_if_list',9,'p_else_if_list','grammar.py',615),
  ('else_if_list -> ELSEIF expression DOSP newline statement else_if_list','else_if_list',6,'p_else_if_list','grammar.py',616),
  ('while_state -> WHILE expression DOSP newline statement END','while_state',6,'p_while_state','grammar.py',626),
  ('for_state -> FOR ID IN expression DOSP expression DOSP newline statement END','for_state',10,'p_for_state','grammar.py',631),
  ('for_state -> FOR ID IN expression DOSP newline statement END','for_state',8,'p_for_state','grammar.py',632),
  ('break_state -> BREAK','break_state',1,'p_break','grammar.py',640),
  ('continue_state -> CONTINUE','continue_state',1,'p_continue','grammar.py',645),
  ('return_state -> RETURN','return_state',1,'p_return','grammar.py',650),
  ('return_state -> RETURN expression','return_state',2,'p_return','grammar.py',651),
  ('create_struct -> STRUCT ID DOSP newline attList END','create_struct',6,'p_createStruct','grammar.py',659),
  ('attList -> attList ID DOSP tipo PTCOMA newline','attList',6,'p_attList','grammar.py',664),
  ('attList -> ID DOSP tipo PTCOMA newline','attList',5,'p_attList','grammar.py',665),
  ('declare_struct -> ID DOSP DOSP ID','declare_struct',4,'p_declareStruct','grammar.py',674),
  ('assign_access -> ID PUNTO ID IGUAL expression','assign_access',5,'p_assignAccess','grammar.py',679),
  ('access_struct -> ID PUNTO ID','access_struct',3,'p_access_struct','grammar.py',684),
]

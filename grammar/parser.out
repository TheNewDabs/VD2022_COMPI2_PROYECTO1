Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print_instr PTCOMA
Rule 5     instruccion -> println_instr PTCOMA
Rule 6     instruccion -> definicion_instr PTCOMA
Rule 7     instruccion -> asignacion_instr PTCOMA
Rule 8     instruccion -> asignacion_arreglo_instr PTCOMA
Rule 9     instruccion -> definicion_asignacion_instr PTCOMA
Rule 10    instruccion -> call_function PTCOMA
Rule 11    instruccion -> declare_function PTCOMA
Rule 12    instruccion -> return_state PTCOMA
Rule 13    instruccion -> break_state PTCOMA
Rule 14    instruccion -> continue_state PTCOMA
Rule 15    instruccion -> if_state PTCOMA
Rule 16    instruccion -> while_state PTCOMA
Rule 17    instruccion -> for_state PTCOMA
Rule 18    instruccion -> nativas PTCOMA
Rule 19    instruccion -> create_struct PTCOMA
Rule 20    instruccion -> declare_struct PTCOMA
Rule 21    instruccion -> assign_access PTCOMA
Rule 22    expression -> MENOS expression
Rule 23    expression -> NOT expression
Rule 24    expression -> expression MAS expression
Rule 25    expression -> expression MENOS expression
Rule 26    expression -> expression POR expression
Rule 27    expression -> expression DIVIDIDO expression
Rule 28    expression -> expression POTENCIA expression
Rule 29    expression -> expression MODULO expression
Rule 30    expression -> expression MAYQUE expression
Rule 31    expression -> expression MENQUE expression
Rule 32    expression -> expression MENIGUALQUE expression
Rule 33    expression -> expression MAYIGUALQUE expression
Rule 34    expression -> expression IGUALQUE expression
Rule 35    expression -> expression NIGUALQUE expression
Rule 36    expression -> expression OR expression
Rule 37    expression -> expression AND expression
Rule 38    expression -> final_expression
Rule 39    final_expression -> PARIZQ expression PARDER
Rule 40    final_expression -> CORCHETEIZQ exp_list CORCHETEDER
Rule 41    final_expression -> DECIMAL
Rule 42    final_expression -> ENTERO
Rule 43    final_expression -> CADENA
Rule 44    final_expression -> CARACTER
Rule 45    final_expression -> ID
Rule 46    final_expression -> ID index_list
Rule 47    final_expression -> TRUE
Rule 48    final_expression -> FALSE
Rule 49    final_expression -> call_function
Rule 50    final_expression -> access_struct
Rule 51    final_expression -> nativas
Rule 52    nativas -> LOG PARIZQ ENTERO COMA expression PARDER
Rule 53    nativas -> LOG10 PARIZQ expression PARDER
Rule 54    nativas -> COS PARIZQ expression PARDER
Rule 55    nativas -> SIN PARIZQ expression PARDER
Rule 56    nativas -> TAN PARIZQ expression PARDER
Rule 57    nativas -> SQRT PARIZQ expression PARDER
Rule 58    nativas -> UPPERCASE PARIZQ expression PARDER
Rule 59    nativas -> LOWERCASE PARIZQ expression PARDER
Rule 60    nativas -> TOSTRING PARIZQ expression PARDER
Rule 61    nativas -> TOFLOAT PARIZQ expression PARDER
Rule 62    nativas -> TRUNC PARIZQ INT COMA expression PARDER
Rule 63    nativas -> TRUNC PARIZQ expression PARDER
Rule 64    nativas -> TYPEOF PARIZQ expression PARDER
Rule 65    nativas -> PARSE PARIZQ tipo COMA expression PARDER
Rule 66    nativas -> LENGTH PARIZQ expression PARDER
Rule 67    nativas -> PUSH PARIZQ expression COMA expression PARDER
Rule 68    nativas -> POP PARIZQ expression PARDER
Rule 69    print_instr -> PRINT PARIZQ exp_list PARDER
Rule 70    println_instr -> PRINTLN PARIZQ exp_list PARDER
Rule 71    tipo -> INT
Rule 72    tipo -> FLOAT
Rule 73    tipo -> BOOL
Rule 74    tipo -> CHAR
Rule 75    tipo -> STRING
Rule 76    tipo -> ARRAY
Rule 77    tipo -> NOTHING
Rule 78    definicion_instr -> LOCAL ID
Rule 79    definicion_instr -> GLOBAL ID
Rule 80    asignacion_instr -> ID IGUAL expression
Rule 81    asignacion_instr -> LOCAL ID IGUAL expression
Rule 82    asignacion_instr -> GLOBAL ID IGUAL expression
Rule 83    definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo
Rule 84    definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo
Rule 85    definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo
Rule 86    asignacion_arreglo_instr -> ID index_list IGUAL expression
Rule 87    call_function -> ID PARIZQ PARDER
Rule 88    call_function -> ID PARIZQ exp_list PARDER
Rule 89    exp_list -> exp_list COMA expression
Rule 90    exp_list -> expression
Rule 91    index_list -> index_list CORCHETEIZQ expression CORCHETEDER
Rule 92    index_list -> CORCHETEIZQ expression CORCHETEDER
Rule 93    statement -> instrucciones
Rule 94    declare_function -> FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
Rule 95    declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
Rule 96    declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END
Rule 97    declare_function -> FUNCTION ID PARIZQ PARDER statement END
Rule 98    dec_params -> dec_params COMA ID DOSP DOSP tipo
Rule 99    dec_params -> dec_params COMA ID DOSP DOSP ID
Rule 100   dec_params -> dec_params COMA ID
Rule 101   dec_params -> ID DOSP DOSP tipo
Rule 102   dec_params -> ID DOSP DOSP ID
Rule 103   dec_params -> ID
Rule 104   if_state -> IF expression statement END
Rule 105   if_state -> IF expression statement ELSE statement END
Rule 106   if_state -> IF expression statement else_if_list END
Rule 107   else_if_list -> ELSEIF expression statement
Rule 108   else_if_list -> ELSEIF expression statement ELSE statement
Rule 109   else_if_list -> ELSEIF expression statement else_if_list
Rule 110   while_state -> WHILE expression statement END
Rule 111   for_state -> FOR ID IN expression DOSP expression statement END
Rule 112   for_state -> FOR ID IN expression statement END
Rule 113   break_state -> BREAK
Rule 114   continue_state -> CONTINUE
Rule 115   return_state -> RETURN
Rule 116   return_state -> RETURN expression
Rule 117   create_struct -> STRUCT ID attList END
Rule 118   attList -> attList ID DOSP DOSP tipo PTCOMA
Rule 119   attList -> ID DOSP DOSP tipo PTCOMA
Rule 120   declare_struct -> ID DOSP DOSP ID
Rule 121   assign_access -> ID PUNTO ID IGUAL expression
Rule 122   access_struct -> ID PUNTO ID

Terminals, with rules where they appear

AND                  : 37
ARRAY                : 76
BOOL                 : 73
BREAK                : 113
CADENA               : 43
CARACTER             : 44
CHAR                 : 74
COMA                 : 52 62 65 67 89 98 99 100
CONTINUE             : 114
CORCHETEDER          : 40 91 92
CORCHETEIZQ          : 40 91 92
COS                  : 54
DECIMAL              : 41
DIVIDIDO             : 27
DOSP                 : 83 83 84 84 85 85 94 94 95 95 98 98 99 99 101 101 102 102 111 118 118 119 119 120 120
ELSE                 : 105 108
ELSEIF               : 107 108 109
END                  : 94 95 96 97 104 105 106 110 111 112 117
ENTERO               : 42 52
FALSE                : 48
FLOAT                : 72
FOR                  : 111 112
FUNCTION             : 94 95 96 97
GLOBAL               : 79 82 85
ID                   : 45 46 78 79 80 81 82 83 84 85 86 87 88 94 95 96 97 98 99 99 100 101 102 102 103 111 112 117 118 119 120 120 121 121 122 122
IF                   : 104 105 106
IGUAL                : 80 81 82 83 84 85 86 121
IGUALQUE             : 34
IN                   : 111 112
INT                  : 62 71
LENGTH               : 66
LOCAL                : 78 81 84
LOG                  : 52
LOG10                : 53
LOWERCASE            : 59
MAS                  : 24
MAYIGUALQUE          : 33
MAYQUE               : 30
MENIGUALQUE          : 32
MENOS                : 22 25
MENQUE               : 31
MODULO               : 29
NIGUALQUE            : 35
NOT                  : 23
NOTHING              : 77
OR                   : 36
PARDER               : 39 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 87 88 94 95 96 97
PARIZQ               : 39 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 87 88 94 95 96 97
PARSE                : 65
POP                  : 68
POR                  : 26
POTENCIA             : 28
PRINT                : 69
PRINTLN              : 70
PTCOMA               : 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 118 119
PUNTO                : 121 122
PUSH                 : 67
RETURN               : 115 116
SIN                  : 55
SQRT                 : 57
STRING               : 75
STRUCT               : 117
TAN                  : 56
TOFLOAT              : 61
TOSTRING             : 60
TRUE                 : 47
TRUNC                : 62 63
TYPEOF               : 64
UPPERCASE            : 58
WHILE                : 110
error                : 

Nonterminals, with rules where they appear

access_struct        : 50
asignacion_arreglo_instr : 8
asignacion_instr     : 7
assign_access        : 21
attList              : 117 118
break_state          : 13
call_function        : 10 49
continue_state       : 14
create_struct        : 19
dec_params           : 95 96 98 99 100
declare_function     : 11
declare_struct       : 20
definicion_asignacion_instr : 9
definicion_instr     : 6
else_if_list         : 106 109
exp_list             : 40 69 70 88 89
expression           : 22 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 39 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 67 68 80 81 82 83 84 85 86 89 90 91 92 104 105 106 107 108 109 110 111 111 112 116 121
final_expression     : 38
for_state            : 17
if_state             : 15
index_list           : 46 86 91
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 93
nativas              : 18 51
print_instr          : 4
println_instr        : 5
return_state         : 12
statement            : 94 95 96 97 104 105 105 106 107 108 108 109 110 111 112
tipo                 : 65 83 84 85 94 95 98 101 118 119
while_state          : 16

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    instruccion                    shift and go to state 51
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 3 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    LOG             reduce using rule 3 (instrucciones -> instruccion .)
    LOG10           reduce using rule 3 (instrucciones -> instruccion .)
    COS             reduce using rule 3 (instrucciones -> instruccion .)
    SIN             reduce using rule 3 (instrucciones -> instruccion .)
    TAN             reduce using rule 3 (instrucciones -> instruccion .)
    SQRT            reduce using rule 3 (instrucciones -> instruccion .)
    UPPERCASE       reduce using rule 3 (instrucciones -> instruccion .)
    LOWERCASE       reduce using rule 3 (instrucciones -> instruccion .)
    TOSTRING        reduce using rule 3 (instrucciones -> instruccion .)
    TOFLOAT         reduce using rule 3 (instrucciones -> instruccion .)
    TRUNC           reduce using rule 3 (instrucciones -> instruccion .)
    TYPEOF          reduce using rule 3 (instrucciones -> instruccion .)
    PARSE           reduce using rule 3 (instrucciones -> instruccion .)
    LENGTH          reduce using rule 3 (instrucciones -> instruccion .)
    PUSH            reduce using rule 3 (instrucciones -> instruccion .)
    POP             reduce using rule 3 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    END             reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print_instr . PTCOMA

    PTCOMA          shift and go to state 52


state 5

    (5) instruccion -> println_instr . PTCOMA

    PTCOMA          shift and go to state 53


state 6

    (6) instruccion -> definicion_instr . PTCOMA

    PTCOMA          shift and go to state 54


state 7

    (7) instruccion -> asignacion_instr . PTCOMA

    PTCOMA          shift and go to state 55


state 8

    (8) instruccion -> asignacion_arreglo_instr . PTCOMA

    PTCOMA          shift and go to state 56


state 9

    (9) instruccion -> definicion_asignacion_instr . PTCOMA

    PTCOMA          shift and go to state 57


state 10

    (10) instruccion -> call_function . PTCOMA

    PTCOMA          shift and go to state 58


state 11

    (11) instruccion -> declare_function . PTCOMA

    PTCOMA          shift and go to state 59


state 12

    (12) instruccion -> return_state . PTCOMA

    PTCOMA          shift and go to state 60


state 13

    (13) instruccion -> break_state . PTCOMA

    PTCOMA          shift and go to state 61


state 14

    (14) instruccion -> continue_state . PTCOMA

    PTCOMA          shift and go to state 62


state 15

    (15) instruccion -> if_state . PTCOMA

    PTCOMA          shift and go to state 63


state 16

    (16) instruccion -> while_state . PTCOMA

    PTCOMA          shift and go to state 64


state 17

    (17) instruccion -> for_state . PTCOMA

    PTCOMA          shift and go to state 65


state 18

    (18) instruccion -> nativas . PTCOMA

    PTCOMA          shift and go to state 66


state 19

    (19) instruccion -> create_struct . PTCOMA

    PTCOMA          shift and go to state 67


state 20

    (20) instruccion -> declare_struct . PTCOMA

    PTCOMA          shift and go to state 68


state 21

    (21) instruccion -> assign_access . PTCOMA

    PTCOMA          shift and go to state 69


state 22

    (69) print_instr -> PRINT . PARIZQ exp_list PARDER

    PARIZQ          shift and go to state 70


state 23

    (70) println_instr -> PRINTLN . PARIZQ exp_list PARDER

    PARIZQ          shift and go to state 71


state 24

    (78) definicion_instr -> LOCAL . ID
    (81) asignacion_instr -> LOCAL . ID IGUAL expression
    (84) definicion_asignacion_instr -> LOCAL . ID IGUAL expression DOSP DOSP tipo

    ID              shift and go to state 72


state 25

    (80) asignacion_instr -> ID . IGUAL expression
    (86) asignacion_arreglo_instr -> ID . index_list IGUAL expression
    (83) definicion_asignacion_instr -> ID . IGUAL expression DOSP DOSP tipo
    (87) call_function -> ID . PARIZQ PARDER
    (88) call_function -> ID . PARIZQ exp_list PARDER
    (120) declare_struct -> ID . DOSP DOSP ID
    (121) assign_access -> ID . PUNTO ID IGUAL expression
    (91) index_list -> . index_list CORCHETEIZQ expression CORCHETEDER
    (92) index_list -> . CORCHETEIZQ expression CORCHETEDER

    IGUAL           shift and go to state 73
    PARIZQ          shift and go to state 76
    DOSP            shift and go to state 75
    PUNTO           shift and go to state 77
    CORCHETEIZQ     shift and go to state 78

    index_list                     shift and go to state 74

state 26

    (79) definicion_instr -> GLOBAL . ID
    (82) asignacion_instr -> GLOBAL . ID IGUAL expression
    (85) definicion_asignacion_instr -> GLOBAL . ID IGUAL expression DOSP DOSP tipo

    ID              shift and go to state 79


state 27

    (94) declare_function -> FUNCTION . ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> FUNCTION . ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> FUNCTION . ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> FUNCTION . ID PARIZQ PARDER statement END

    ID              shift and go to state 80


state 28

    (115) return_state -> RETURN .
    (116) return_state -> RETURN . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    PTCOMA          reduce using rule 115 (return_state -> RETURN .)
    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 81
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 29

    (113) break_state -> BREAK .

    PTCOMA          reduce using rule 113 (break_state -> BREAK .)


state 30

    (114) continue_state -> CONTINUE .

    PTCOMA          reduce using rule 114 (continue_state -> CONTINUE .)


state 31

    (104) if_state -> IF . expression statement END
    (105) if_state -> IF . expression statement ELSE statement END
    (106) if_state -> IF . expression statement else_if_list END
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 97
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 32

    (110) while_state -> WHILE . expression statement END
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 98
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 33

    (111) for_state -> FOR . ID IN expression DOSP expression statement END
    (112) for_state -> FOR . ID IN expression statement END

    ID              shift and go to state 99


state 34

    (52) nativas -> LOG . PARIZQ ENTERO COMA expression PARDER

    PARIZQ          shift and go to state 100


state 35

    (53) nativas -> LOG10 . PARIZQ expression PARDER

    PARIZQ          shift and go to state 101


state 36

    (54) nativas -> COS . PARIZQ expression PARDER

    PARIZQ          shift and go to state 102


state 37

    (55) nativas -> SIN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 103


state 38

    (56) nativas -> TAN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 104


state 39

    (57) nativas -> SQRT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 105


state 40

    (58) nativas -> UPPERCASE . PARIZQ expression PARDER

    PARIZQ          shift and go to state 106


state 41

    (59) nativas -> LOWERCASE . PARIZQ expression PARDER

    PARIZQ          shift and go to state 107


state 42

    (60) nativas -> TOSTRING . PARIZQ expression PARDER

    PARIZQ          shift and go to state 108


state 43

    (61) nativas -> TOFLOAT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 109


state 44

    (62) nativas -> TRUNC . PARIZQ INT COMA expression PARDER
    (63) nativas -> TRUNC . PARIZQ expression PARDER

    PARIZQ          shift and go to state 110


state 45

    (64) nativas -> TYPEOF . PARIZQ expression PARDER

    PARIZQ          shift and go to state 111


state 46

    (65) nativas -> PARSE . PARIZQ tipo COMA expression PARDER

    PARIZQ          shift and go to state 112


state 47

    (66) nativas -> LENGTH . PARIZQ expression PARDER

    PARIZQ          shift and go to state 113


state 48

    (67) nativas -> PUSH . PARIZQ expression COMA expression PARDER

    PARIZQ          shift and go to state 114


state 49

    (68) nativas -> POP . PARIZQ expression PARDER

    PARIZQ          shift and go to state 115


state 50

    (117) create_struct -> STRUCT . ID attList END

    ID              shift and go to state 116


state 51

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOG             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOG10           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    COS             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SIN             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TAN             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SQRT            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UPPERCASE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOWERCASE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TOSTRING        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TOFLOAT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUNC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TYPEOF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LENGTH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PUSH            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    POP             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 52

    (4) instruccion -> print_instr PTCOMA .

    PRINT           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    PRINTLN         reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LOCAL           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    GLOBAL          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ID              reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    FUNCTION        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    RETURN          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    BREAK           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    IF              reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    WHILE           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    FOR             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LOG             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LOG10           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    COS             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    SIN             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    TAN             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    SQRT            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    UPPERCASE       reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LOWERCASE       reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    TOSTRING        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    TOFLOAT         reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    TRUNC           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    TYPEOF          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    PARSE           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LENGTH          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    PUSH            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    POP             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    STRUCT          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    $end            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    END             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ELSE            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ELSEIF          reduce using rule 4 (instruccion -> print_instr PTCOMA .)


state 53

    (5) instruccion -> println_instr PTCOMA .

    PRINT           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    PRINTLN         reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LOCAL           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    GLOBAL          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ID              reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    FUNCTION        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    RETURN          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    BREAK           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    IF              reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    WHILE           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    FOR             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LOG             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LOG10           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    COS             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    SIN             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    TAN             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    SQRT            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    UPPERCASE       reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LOWERCASE       reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    TOSTRING        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    TOFLOAT         reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    TRUNC           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    TYPEOF          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    PARSE           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LENGTH          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    PUSH            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    POP             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    STRUCT          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    $end            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    END             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ELSE            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ELSEIF          reduce using rule 5 (instruccion -> println_instr PTCOMA .)


state 54

    (6) instruccion -> definicion_instr PTCOMA .

    PRINT           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    PRINTLN         reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LOCAL           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    GLOBAL          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ID              reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    FUNCTION        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    RETURN          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    BREAK           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    IF              reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    WHILE           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    FOR             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LOG             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LOG10           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    COS             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    SIN             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    TAN             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    SQRT            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    UPPERCASE       reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LOWERCASE       reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    TOSTRING        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    TOFLOAT         reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    TRUNC           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    TYPEOF          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    PARSE           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LENGTH          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    PUSH            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    POP             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    STRUCT          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    $end            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    END             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ELSE            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ELSEIF          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)


state 55

    (7) instruccion -> asignacion_instr PTCOMA .

    PRINT           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    PRINTLN         reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LOCAL           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    GLOBAL          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ID              reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    FUNCTION        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    RETURN          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    BREAK           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    CONTINUE        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    IF              reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    WHILE           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    FOR             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LOG             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LOG10           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    COS             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    SIN             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    TAN             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    SQRT            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    UPPERCASE       reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LOWERCASE       reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    TOSTRING        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    TOFLOAT         reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    TRUNC           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    TYPEOF          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    PARSE           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LENGTH          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    PUSH            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    POP             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    STRUCT          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    $end            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    END             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ELSE            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ELSEIF          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)


state 56

    (8) instruccion -> asignacion_arreglo_instr PTCOMA .

    PRINT           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    LOCAL           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    GLOBAL          reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    ID              reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    FUNCTION        reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    RETURN          reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    BREAK           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    CONTINUE        reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    IF              reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    WHILE           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    FOR             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    LOG             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    LOG10           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    COS             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    SIN             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    TAN             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    SQRT            reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    UPPERCASE       reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    LOWERCASE       reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    TOSTRING        reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    TOFLOAT         reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    TRUNC           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    TYPEOF          reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    PARSE           reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    LENGTH          reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    PUSH            reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    POP             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    STRUCT          reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    $end            reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    END             reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    ELSE            reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)
    ELSEIF          reduce using rule 8 (instruccion -> asignacion_arreglo_instr PTCOMA .)


state 57

    (9) instruccion -> definicion_asignacion_instr PTCOMA .

    PRINT           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    PRINTLN         reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LOCAL           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    GLOBAL          reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ID              reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    FUNCTION        reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    RETURN          reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    BREAK           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    IF              reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    WHILE           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    FOR             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LOG             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LOG10           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    COS             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    SIN             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    TAN             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    SQRT            reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    UPPERCASE       reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LOWERCASE       reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    TOSTRING        reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    TOFLOAT         reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    TRUNC           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    TYPEOF          reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    PARSE           reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LENGTH          reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    PUSH            reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    POP             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    STRUCT          reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    $end            reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    END             reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ELSE            reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ELSEIF          reduce using rule 9 (instruccion -> definicion_asignacion_instr PTCOMA .)


state 58

    (10) instruccion -> call_function PTCOMA .

    PRINT           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    PRINTLN         reduce using rule 10 (instruccion -> call_function PTCOMA .)
    LOCAL           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    GLOBAL          reduce using rule 10 (instruccion -> call_function PTCOMA .)
    ID              reduce using rule 10 (instruccion -> call_function PTCOMA .)
    FUNCTION        reduce using rule 10 (instruccion -> call_function PTCOMA .)
    RETURN          reduce using rule 10 (instruccion -> call_function PTCOMA .)
    BREAK           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> call_function PTCOMA .)
    IF              reduce using rule 10 (instruccion -> call_function PTCOMA .)
    WHILE           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    FOR             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    LOG             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    LOG10           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    COS             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    SIN             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    TAN             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    SQRT            reduce using rule 10 (instruccion -> call_function PTCOMA .)
    UPPERCASE       reduce using rule 10 (instruccion -> call_function PTCOMA .)
    LOWERCASE       reduce using rule 10 (instruccion -> call_function PTCOMA .)
    TOSTRING        reduce using rule 10 (instruccion -> call_function PTCOMA .)
    TOFLOAT         reduce using rule 10 (instruccion -> call_function PTCOMA .)
    TRUNC           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    TYPEOF          reduce using rule 10 (instruccion -> call_function PTCOMA .)
    PARSE           reduce using rule 10 (instruccion -> call_function PTCOMA .)
    LENGTH          reduce using rule 10 (instruccion -> call_function PTCOMA .)
    PUSH            reduce using rule 10 (instruccion -> call_function PTCOMA .)
    POP             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    STRUCT          reduce using rule 10 (instruccion -> call_function PTCOMA .)
    $end            reduce using rule 10 (instruccion -> call_function PTCOMA .)
    END             reduce using rule 10 (instruccion -> call_function PTCOMA .)
    ELSE            reduce using rule 10 (instruccion -> call_function PTCOMA .)
    ELSEIF          reduce using rule 10 (instruccion -> call_function PTCOMA .)


state 59

    (11) instruccion -> declare_function PTCOMA .

    PRINT           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    PRINTLN         reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    LOCAL           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    GLOBAL          reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    ID              reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    FUNCTION        reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    RETURN          reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    BREAK           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    CONTINUE        reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    IF              reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    WHILE           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    FOR             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    LOG             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    LOG10           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    COS             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    SIN             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    TAN             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    SQRT            reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    UPPERCASE       reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    LOWERCASE       reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    TOSTRING        reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    TOFLOAT         reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    TRUNC           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    TYPEOF          reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    PARSE           reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    LENGTH          reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    PUSH            reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    POP             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    STRUCT          reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    $end            reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    END             reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    ELSE            reduce using rule 11 (instruccion -> declare_function PTCOMA .)
    ELSEIF          reduce using rule 11 (instruccion -> declare_function PTCOMA .)


state 60

    (12) instruccion -> return_state PTCOMA .

    PRINT           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    PRINTLN         reduce using rule 12 (instruccion -> return_state PTCOMA .)
    LOCAL           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    GLOBAL          reduce using rule 12 (instruccion -> return_state PTCOMA .)
    ID              reduce using rule 12 (instruccion -> return_state PTCOMA .)
    FUNCTION        reduce using rule 12 (instruccion -> return_state PTCOMA .)
    RETURN          reduce using rule 12 (instruccion -> return_state PTCOMA .)
    BREAK           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> return_state PTCOMA .)
    IF              reduce using rule 12 (instruccion -> return_state PTCOMA .)
    WHILE           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    FOR             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    LOG             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    LOG10           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    COS             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    SIN             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    TAN             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    SQRT            reduce using rule 12 (instruccion -> return_state PTCOMA .)
    UPPERCASE       reduce using rule 12 (instruccion -> return_state PTCOMA .)
    LOWERCASE       reduce using rule 12 (instruccion -> return_state PTCOMA .)
    TOSTRING        reduce using rule 12 (instruccion -> return_state PTCOMA .)
    TOFLOAT         reduce using rule 12 (instruccion -> return_state PTCOMA .)
    TRUNC           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    TYPEOF          reduce using rule 12 (instruccion -> return_state PTCOMA .)
    PARSE           reduce using rule 12 (instruccion -> return_state PTCOMA .)
    LENGTH          reduce using rule 12 (instruccion -> return_state PTCOMA .)
    PUSH            reduce using rule 12 (instruccion -> return_state PTCOMA .)
    POP             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    STRUCT          reduce using rule 12 (instruccion -> return_state PTCOMA .)
    $end            reduce using rule 12 (instruccion -> return_state PTCOMA .)
    END             reduce using rule 12 (instruccion -> return_state PTCOMA .)
    ELSE            reduce using rule 12 (instruccion -> return_state PTCOMA .)
    ELSEIF          reduce using rule 12 (instruccion -> return_state PTCOMA .)


state 61

    (13) instruccion -> break_state PTCOMA .

    PRINT           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    PRINTLN         reduce using rule 13 (instruccion -> break_state PTCOMA .)
    LOCAL           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    GLOBAL          reduce using rule 13 (instruccion -> break_state PTCOMA .)
    ID              reduce using rule 13 (instruccion -> break_state PTCOMA .)
    FUNCTION        reduce using rule 13 (instruccion -> break_state PTCOMA .)
    RETURN          reduce using rule 13 (instruccion -> break_state PTCOMA .)
    BREAK           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> break_state PTCOMA .)
    IF              reduce using rule 13 (instruccion -> break_state PTCOMA .)
    WHILE           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    FOR             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    LOG             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    LOG10           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    COS             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    SIN             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    TAN             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    SQRT            reduce using rule 13 (instruccion -> break_state PTCOMA .)
    UPPERCASE       reduce using rule 13 (instruccion -> break_state PTCOMA .)
    LOWERCASE       reduce using rule 13 (instruccion -> break_state PTCOMA .)
    TOSTRING        reduce using rule 13 (instruccion -> break_state PTCOMA .)
    TOFLOAT         reduce using rule 13 (instruccion -> break_state PTCOMA .)
    TRUNC           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    TYPEOF          reduce using rule 13 (instruccion -> break_state PTCOMA .)
    PARSE           reduce using rule 13 (instruccion -> break_state PTCOMA .)
    LENGTH          reduce using rule 13 (instruccion -> break_state PTCOMA .)
    PUSH            reduce using rule 13 (instruccion -> break_state PTCOMA .)
    POP             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    STRUCT          reduce using rule 13 (instruccion -> break_state PTCOMA .)
    $end            reduce using rule 13 (instruccion -> break_state PTCOMA .)
    END             reduce using rule 13 (instruccion -> break_state PTCOMA .)
    ELSE            reduce using rule 13 (instruccion -> break_state PTCOMA .)
    ELSEIF          reduce using rule 13 (instruccion -> break_state PTCOMA .)


state 62

    (14) instruccion -> continue_state PTCOMA .

    PRINT           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    PRINTLN         reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    LOCAL           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    GLOBAL          reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    ID              reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    FUNCTION        reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    RETURN          reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    BREAK           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    IF              reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    WHILE           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    FOR             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    LOG             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    LOG10           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    COS             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    SIN             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    TAN             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    SQRT            reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    UPPERCASE       reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    LOWERCASE       reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    TOSTRING        reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    TOFLOAT         reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    TRUNC           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    TYPEOF          reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    PARSE           reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    LENGTH          reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    PUSH            reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    POP             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    STRUCT          reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    $end            reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    END             reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    ELSE            reduce using rule 14 (instruccion -> continue_state PTCOMA .)
    ELSEIF          reduce using rule 14 (instruccion -> continue_state PTCOMA .)


state 63

    (15) instruccion -> if_state PTCOMA .

    PRINT           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    PRINTLN         reduce using rule 15 (instruccion -> if_state PTCOMA .)
    LOCAL           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    GLOBAL          reduce using rule 15 (instruccion -> if_state PTCOMA .)
    ID              reduce using rule 15 (instruccion -> if_state PTCOMA .)
    FUNCTION        reduce using rule 15 (instruccion -> if_state PTCOMA .)
    RETURN          reduce using rule 15 (instruccion -> if_state PTCOMA .)
    BREAK           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> if_state PTCOMA .)
    IF              reduce using rule 15 (instruccion -> if_state PTCOMA .)
    WHILE           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    FOR             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    LOG             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    LOG10           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    COS             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    SIN             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    TAN             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    SQRT            reduce using rule 15 (instruccion -> if_state PTCOMA .)
    UPPERCASE       reduce using rule 15 (instruccion -> if_state PTCOMA .)
    LOWERCASE       reduce using rule 15 (instruccion -> if_state PTCOMA .)
    TOSTRING        reduce using rule 15 (instruccion -> if_state PTCOMA .)
    TOFLOAT         reduce using rule 15 (instruccion -> if_state PTCOMA .)
    TRUNC           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    TYPEOF          reduce using rule 15 (instruccion -> if_state PTCOMA .)
    PARSE           reduce using rule 15 (instruccion -> if_state PTCOMA .)
    LENGTH          reduce using rule 15 (instruccion -> if_state PTCOMA .)
    PUSH            reduce using rule 15 (instruccion -> if_state PTCOMA .)
    POP             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    STRUCT          reduce using rule 15 (instruccion -> if_state PTCOMA .)
    $end            reduce using rule 15 (instruccion -> if_state PTCOMA .)
    END             reduce using rule 15 (instruccion -> if_state PTCOMA .)
    ELSE            reduce using rule 15 (instruccion -> if_state PTCOMA .)
    ELSEIF          reduce using rule 15 (instruccion -> if_state PTCOMA .)


state 64

    (16) instruccion -> while_state PTCOMA .

    PRINT           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    PRINTLN         reduce using rule 16 (instruccion -> while_state PTCOMA .)
    LOCAL           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    GLOBAL          reduce using rule 16 (instruccion -> while_state PTCOMA .)
    ID              reduce using rule 16 (instruccion -> while_state PTCOMA .)
    FUNCTION        reduce using rule 16 (instruccion -> while_state PTCOMA .)
    RETURN          reduce using rule 16 (instruccion -> while_state PTCOMA .)
    BREAK           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    CONTINUE        reduce using rule 16 (instruccion -> while_state PTCOMA .)
    IF              reduce using rule 16 (instruccion -> while_state PTCOMA .)
    WHILE           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    FOR             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    LOG             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    LOG10           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    COS             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    SIN             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    TAN             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    SQRT            reduce using rule 16 (instruccion -> while_state PTCOMA .)
    UPPERCASE       reduce using rule 16 (instruccion -> while_state PTCOMA .)
    LOWERCASE       reduce using rule 16 (instruccion -> while_state PTCOMA .)
    TOSTRING        reduce using rule 16 (instruccion -> while_state PTCOMA .)
    TOFLOAT         reduce using rule 16 (instruccion -> while_state PTCOMA .)
    TRUNC           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    TYPEOF          reduce using rule 16 (instruccion -> while_state PTCOMA .)
    PARSE           reduce using rule 16 (instruccion -> while_state PTCOMA .)
    LENGTH          reduce using rule 16 (instruccion -> while_state PTCOMA .)
    PUSH            reduce using rule 16 (instruccion -> while_state PTCOMA .)
    POP             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    STRUCT          reduce using rule 16 (instruccion -> while_state PTCOMA .)
    $end            reduce using rule 16 (instruccion -> while_state PTCOMA .)
    END             reduce using rule 16 (instruccion -> while_state PTCOMA .)
    ELSE            reduce using rule 16 (instruccion -> while_state PTCOMA .)
    ELSEIF          reduce using rule 16 (instruccion -> while_state PTCOMA .)


state 65

    (17) instruccion -> for_state PTCOMA .

    PRINT           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    PRINTLN         reduce using rule 17 (instruccion -> for_state PTCOMA .)
    LOCAL           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    GLOBAL          reduce using rule 17 (instruccion -> for_state PTCOMA .)
    ID              reduce using rule 17 (instruccion -> for_state PTCOMA .)
    FUNCTION        reduce using rule 17 (instruccion -> for_state PTCOMA .)
    RETURN          reduce using rule 17 (instruccion -> for_state PTCOMA .)
    BREAK           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    CONTINUE        reduce using rule 17 (instruccion -> for_state PTCOMA .)
    IF              reduce using rule 17 (instruccion -> for_state PTCOMA .)
    WHILE           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    FOR             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    LOG             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    LOG10           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    COS             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    SIN             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    TAN             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    SQRT            reduce using rule 17 (instruccion -> for_state PTCOMA .)
    UPPERCASE       reduce using rule 17 (instruccion -> for_state PTCOMA .)
    LOWERCASE       reduce using rule 17 (instruccion -> for_state PTCOMA .)
    TOSTRING        reduce using rule 17 (instruccion -> for_state PTCOMA .)
    TOFLOAT         reduce using rule 17 (instruccion -> for_state PTCOMA .)
    TRUNC           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    TYPEOF          reduce using rule 17 (instruccion -> for_state PTCOMA .)
    PARSE           reduce using rule 17 (instruccion -> for_state PTCOMA .)
    LENGTH          reduce using rule 17 (instruccion -> for_state PTCOMA .)
    PUSH            reduce using rule 17 (instruccion -> for_state PTCOMA .)
    POP             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    STRUCT          reduce using rule 17 (instruccion -> for_state PTCOMA .)
    $end            reduce using rule 17 (instruccion -> for_state PTCOMA .)
    END             reduce using rule 17 (instruccion -> for_state PTCOMA .)
    ELSE            reduce using rule 17 (instruccion -> for_state PTCOMA .)
    ELSEIF          reduce using rule 17 (instruccion -> for_state PTCOMA .)


state 66

    (18) instruccion -> nativas PTCOMA .

    PRINT           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    PRINTLN         reduce using rule 18 (instruccion -> nativas PTCOMA .)
    LOCAL           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    GLOBAL          reduce using rule 18 (instruccion -> nativas PTCOMA .)
    ID              reduce using rule 18 (instruccion -> nativas PTCOMA .)
    FUNCTION        reduce using rule 18 (instruccion -> nativas PTCOMA .)
    RETURN          reduce using rule 18 (instruccion -> nativas PTCOMA .)
    BREAK           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    CONTINUE        reduce using rule 18 (instruccion -> nativas PTCOMA .)
    IF              reduce using rule 18 (instruccion -> nativas PTCOMA .)
    WHILE           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    FOR             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    LOG             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    LOG10           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    COS             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    SIN             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    TAN             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    SQRT            reduce using rule 18 (instruccion -> nativas PTCOMA .)
    UPPERCASE       reduce using rule 18 (instruccion -> nativas PTCOMA .)
    LOWERCASE       reduce using rule 18 (instruccion -> nativas PTCOMA .)
    TOSTRING        reduce using rule 18 (instruccion -> nativas PTCOMA .)
    TOFLOAT         reduce using rule 18 (instruccion -> nativas PTCOMA .)
    TRUNC           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    TYPEOF          reduce using rule 18 (instruccion -> nativas PTCOMA .)
    PARSE           reduce using rule 18 (instruccion -> nativas PTCOMA .)
    LENGTH          reduce using rule 18 (instruccion -> nativas PTCOMA .)
    PUSH            reduce using rule 18 (instruccion -> nativas PTCOMA .)
    POP             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    STRUCT          reduce using rule 18 (instruccion -> nativas PTCOMA .)
    $end            reduce using rule 18 (instruccion -> nativas PTCOMA .)
    END             reduce using rule 18 (instruccion -> nativas PTCOMA .)
    ELSE            reduce using rule 18 (instruccion -> nativas PTCOMA .)
    ELSEIF          reduce using rule 18 (instruccion -> nativas PTCOMA .)


state 67

    (19) instruccion -> create_struct PTCOMA .

    PRINT           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    LOCAL           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    GLOBAL          reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    ID              reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    FUNCTION        reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    IF              reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    LOG             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    LOG10           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    COS             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    SIN             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    TAN             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    SQRT            reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    UPPERCASE       reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    LOWERCASE       reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    TOSTRING        reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    TOFLOAT         reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    TRUNC           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    TYPEOF          reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    PARSE           reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    LENGTH          reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    PUSH            reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    POP             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    STRUCT          reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    $end            reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    END             reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    ELSE            reduce using rule 19 (instruccion -> create_struct PTCOMA .)
    ELSEIF          reduce using rule 19 (instruccion -> create_struct PTCOMA .)


state 68

    (20) instruccion -> declare_struct PTCOMA .

    PRINT           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    PRINTLN         reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    LOCAL           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    GLOBAL          reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    ID              reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    FUNCTION        reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    RETURN          reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    BREAK           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    CONTINUE        reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    IF              reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    WHILE           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    FOR             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    LOG             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    LOG10           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    COS             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    SIN             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    TAN             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    SQRT            reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    UPPERCASE       reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    LOWERCASE       reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    TOSTRING        reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    TOFLOAT         reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    TRUNC           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    TYPEOF          reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    PARSE           reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    LENGTH          reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    PUSH            reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    POP             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    STRUCT          reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    $end            reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    END             reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    ELSE            reduce using rule 20 (instruccion -> declare_struct PTCOMA .)
    ELSEIF          reduce using rule 20 (instruccion -> declare_struct PTCOMA .)


state 69

    (21) instruccion -> assign_access PTCOMA .

    PRINT           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    PRINTLN         reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    LOCAL           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    GLOBAL          reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    ID              reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    FUNCTION        reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    RETURN          reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    BREAK           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    IF              reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    WHILE           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    FOR             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    LOG             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    LOG10           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    COS             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    SIN             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    TAN             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    SQRT            reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    UPPERCASE       reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    LOWERCASE       reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    TOSTRING        reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    TOFLOAT         reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    TRUNC           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    TYPEOF          reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    PARSE           reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    LENGTH          reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    PUSH            reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    POP             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    STRUCT          reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    $end            reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    END             reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    ELSE            reduce using rule 21 (instruccion -> assign_access PTCOMA .)
    ELSEIF          reduce using rule 21 (instruccion -> assign_access PTCOMA .)


state 70

    (69) print_instr -> PRINT PARIZQ . exp_list PARDER
    (89) exp_list -> . exp_list COMA expression
    (90) exp_list -> . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    exp_list                       shift and go to state 117
    expression                     shift and go to state 118
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 71

    (70) println_instr -> PRINTLN PARIZQ . exp_list PARDER
    (89) exp_list -> . exp_list COMA expression
    (90) exp_list -> . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    exp_list                       shift and go to state 119
    expression                     shift and go to state 118
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 72

    (78) definicion_instr -> LOCAL ID .
    (81) asignacion_instr -> LOCAL ID . IGUAL expression
    (84) definicion_asignacion_instr -> LOCAL ID . IGUAL expression DOSP DOSP tipo

    PTCOMA          reduce using rule 78 (definicion_instr -> LOCAL ID .)
    IGUAL           shift and go to state 120


state 73

    (80) asignacion_instr -> ID IGUAL . expression
    (83) definicion_asignacion_instr -> ID IGUAL . expression DOSP DOSP tipo
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 121
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 74

    (86) asignacion_arreglo_instr -> ID index_list . IGUAL expression
    (91) index_list -> index_list . CORCHETEIZQ expression CORCHETEDER

    IGUAL           shift and go to state 122
    CORCHETEIZQ     shift and go to state 123


state 75

    (120) declare_struct -> ID DOSP . DOSP ID

    DOSP            shift and go to state 124


state 76

    (87) call_function -> ID PARIZQ . PARDER
    (88) call_function -> ID PARIZQ . exp_list PARDER
    (89) exp_list -> . exp_list COMA expression
    (90) exp_list -> . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    PARDER          shift and go to state 125
    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    exp_list                       shift and go to state 126
    expression                     shift and go to state 118
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 77

    (121) assign_access -> ID PUNTO . ID IGUAL expression

    ID              shift and go to state 127


state 78

    (92) index_list -> CORCHETEIZQ . expression CORCHETEDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 128
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 79

    (79) definicion_instr -> GLOBAL ID .
    (82) asignacion_instr -> GLOBAL ID . IGUAL expression
    (85) definicion_asignacion_instr -> GLOBAL ID . IGUAL expression DOSP DOSP tipo

    PTCOMA          reduce using rule 79 (definicion_instr -> GLOBAL ID .)
    IGUAL           shift and go to state 129


state 80

    (94) declare_function -> FUNCTION ID . PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> FUNCTION ID . PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> FUNCTION ID . PARIZQ dec_params PARDER statement END
    (97) declare_function -> FUNCTION ID . PARIZQ PARDER statement END

    PARIZQ          shift and go to state 130


state 81

    (116) return_state -> RETURN expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PTCOMA          reduce using rule 116 (return_state -> RETURN expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 82

    (22) expression -> MENOS . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 145
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 83

    (23) expression -> NOT . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 146
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 84

    (38) expression -> final_expression .

    MAS             reduce using rule 38 (expression -> final_expression .)
    MENOS           reduce using rule 38 (expression -> final_expression .)
    POR             reduce using rule 38 (expression -> final_expression .)
    DIVIDIDO        reduce using rule 38 (expression -> final_expression .)
    POTENCIA        reduce using rule 38 (expression -> final_expression .)
    MODULO          reduce using rule 38 (expression -> final_expression .)
    MAYQUE          reduce using rule 38 (expression -> final_expression .)
    MENQUE          reduce using rule 38 (expression -> final_expression .)
    MENIGUALQUE     reduce using rule 38 (expression -> final_expression .)
    MAYIGUALQUE     reduce using rule 38 (expression -> final_expression .)
    IGUALQUE        reduce using rule 38 (expression -> final_expression .)
    NIGUALQUE       reduce using rule 38 (expression -> final_expression .)
    OR              reduce using rule 38 (expression -> final_expression .)
    AND             reduce using rule 38 (expression -> final_expression .)
    PTCOMA          reduce using rule 38 (expression -> final_expression .)
    PRINT           reduce using rule 38 (expression -> final_expression .)
    PRINTLN         reduce using rule 38 (expression -> final_expression .)
    LOCAL           reduce using rule 38 (expression -> final_expression .)
    GLOBAL          reduce using rule 38 (expression -> final_expression .)
    ID              reduce using rule 38 (expression -> final_expression .)
    FUNCTION        reduce using rule 38 (expression -> final_expression .)
    RETURN          reduce using rule 38 (expression -> final_expression .)
    BREAK           reduce using rule 38 (expression -> final_expression .)
    CONTINUE        reduce using rule 38 (expression -> final_expression .)
    IF              reduce using rule 38 (expression -> final_expression .)
    WHILE           reduce using rule 38 (expression -> final_expression .)
    FOR             reduce using rule 38 (expression -> final_expression .)
    LOG             reduce using rule 38 (expression -> final_expression .)
    LOG10           reduce using rule 38 (expression -> final_expression .)
    COS             reduce using rule 38 (expression -> final_expression .)
    SIN             reduce using rule 38 (expression -> final_expression .)
    TAN             reduce using rule 38 (expression -> final_expression .)
    SQRT            reduce using rule 38 (expression -> final_expression .)
    UPPERCASE       reduce using rule 38 (expression -> final_expression .)
    LOWERCASE       reduce using rule 38 (expression -> final_expression .)
    TOSTRING        reduce using rule 38 (expression -> final_expression .)
    TOFLOAT         reduce using rule 38 (expression -> final_expression .)
    TRUNC           reduce using rule 38 (expression -> final_expression .)
    TYPEOF          reduce using rule 38 (expression -> final_expression .)
    PARSE           reduce using rule 38 (expression -> final_expression .)
    LENGTH          reduce using rule 38 (expression -> final_expression .)
    PUSH            reduce using rule 38 (expression -> final_expression .)
    POP             reduce using rule 38 (expression -> final_expression .)
    STRUCT          reduce using rule 38 (expression -> final_expression .)
    PARDER          reduce using rule 38 (expression -> final_expression .)
    COMA            reduce using rule 38 (expression -> final_expression .)
    DOSP            reduce using rule 38 (expression -> final_expression .)
    CORCHETEDER     reduce using rule 38 (expression -> final_expression .)


state 85

    (39) final_expression -> PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 147
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 86

    (40) final_expression -> CORCHETEIZQ . exp_list CORCHETEDER
    (89) exp_list -> . exp_list COMA expression
    (90) exp_list -> . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    exp_list                       shift and go to state 148
    expression                     shift and go to state 118
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 87

    (41) final_expression -> DECIMAL .

    MAS             reduce using rule 41 (final_expression -> DECIMAL .)
    MENOS           reduce using rule 41 (final_expression -> DECIMAL .)
    POR             reduce using rule 41 (final_expression -> DECIMAL .)
    DIVIDIDO        reduce using rule 41 (final_expression -> DECIMAL .)
    POTENCIA        reduce using rule 41 (final_expression -> DECIMAL .)
    MODULO          reduce using rule 41 (final_expression -> DECIMAL .)
    MAYQUE          reduce using rule 41 (final_expression -> DECIMAL .)
    MENQUE          reduce using rule 41 (final_expression -> DECIMAL .)
    MENIGUALQUE     reduce using rule 41 (final_expression -> DECIMAL .)
    MAYIGUALQUE     reduce using rule 41 (final_expression -> DECIMAL .)
    IGUALQUE        reduce using rule 41 (final_expression -> DECIMAL .)
    NIGUALQUE       reduce using rule 41 (final_expression -> DECIMAL .)
    OR              reduce using rule 41 (final_expression -> DECIMAL .)
    AND             reduce using rule 41 (final_expression -> DECIMAL .)
    PTCOMA          reduce using rule 41 (final_expression -> DECIMAL .)
    PRINT           reduce using rule 41 (final_expression -> DECIMAL .)
    PRINTLN         reduce using rule 41 (final_expression -> DECIMAL .)
    LOCAL           reduce using rule 41 (final_expression -> DECIMAL .)
    GLOBAL          reduce using rule 41 (final_expression -> DECIMAL .)
    ID              reduce using rule 41 (final_expression -> DECIMAL .)
    FUNCTION        reduce using rule 41 (final_expression -> DECIMAL .)
    RETURN          reduce using rule 41 (final_expression -> DECIMAL .)
    BREAK           reduce using rule 41 (final_expression -> DECIMAL .)
    CONTINUE        reduce using rule 41 (final_expression -> DECIMAL .)
    IF              reduce using rule 41 (final_expression -> DECIMAL .)
    WHILE           reduce using rule 41 (final_expression -> DECIMAL .)
    FOR             reduce using rule 41 (final_expression -> DECIMAL .)
    LOG             reduce using rule 41 (final_expression -> DECIMAL .)
    LOG10           reduce using rule 41 (final_expression -> DECIMAL .)
    COS             reduce using rule 41 (final_expression -> DECIMAL .)
    SIN             reduce using rule 41 (final_expression -> DECIMAL .)
    TAN             reduce using rule 41 (final_expression -> DECIMAL .)
    SQRT            reduce using rule 41 (final_expression -> DECIMAL .)
    UPPERCASE       reduce using rule 41 (final_expression -> DECIMAL .)
    LOWERCASE       reduce using rule 41 (final_expression -> DECIMAL .)
    TOSTRING        reduce using rule 41 (final_expression -> DECIMAL .)
    TOFLOAT         reduce using rule 41 (final_expression -> DECIMAL .)
    TRUNC           reduce using rule 41 (final_expression -> DECIMAL .)
    TYPEOF          reduce using rule 41 (final_expression -> DECIMAL .)
    PARSE           reduce using rule 41 (final_expression -> DECIMAL .)
    LENGTH          reduce using rule 41 (final_expression -> DECIMAL .)
    PUSH            reduce using rule 41 (final_expression -> DECIMAL .)
    POP             reduce using rule 41 (final_expression -> DECIMAL .)
    STRUCT          reduce using rule 41 (final_expression -> DECIMAL .)
    PARDER          reduce using rule 41 (final_expression -> DECIMAL .)
    COMA            reduce using rule 41 (final_expression -> DECIMAL .)
    DOSP            reduce using rule 41 (final_expression -> DECIMAL .)
    CORCHETEDER     reduce using rule 41 (final_expression -> DECIMAL .)


state 88

    (42) final_expression -> ENTERO .

    MAS             reduce using rule 42 (final_expression -> ENTERO .)
    MENOS           reduce using rule 42 (final_expression -> ENTERO .)
    POR             reduce using rule 42 (final_expression -> ENTERO .)
    DIVIDIDO        reduce using rule 42 (final_expression -> ENTERO .)
    POTENCIA        reduce using rule 42 (final_expression -> ENTERO .)
    MODULO          reduce using rule 42 (final_expression -> ENTERO .)
    MAYQUE          reduce using rule 42 (final_expression -> ENTERO .)
    MENQUE          reduce using rule 42 (final_expression -> ENTERO .)
    MENIGUALQUE     reduce using rule 42 (final_expression -> ENTERO .)
    MAYIGUALQUE     reduce using rule 42 (final_expression -> ENTERO .)
    IGUALQUE        reduce using rule 42 (final_expression -> ENTERO .)
    NIGUALQUE       reduce using rule 42 (final_expression -> ENTERO .)
    OR              reduce using rule 42 (final_expression -> ENTERO .)
    AND             reduce using rule 42 (final_expression -> ENTERO .)
    PTCOMA          reduce using rule 42 (final_expression -> ENTERO .)
    PRINT           reduce using rule 42 (final_expression -> ENTERO .)
    PRINTLN         reduce using rule 42 (final_expression -> ENTERO .)
    LOCAL           reduce using rule 42 (final_expression -> ENTERO .)
    GLOBAL          reduce using rule 42 (final_expression -> ENTERO .)
    ID              reduce using rule 42 (final_expression -> ENTERO .)
    FUNCTION        reduce using rule 42 (final_expression -> ENTERO .)
    RETURN          reduce using rule 42 (final_expression -> ENTERO .)
    BREAK           reduce using rule 42 (final_expression -> ENTERO .)
    CONTINUE        reduce using rule 42 (final_expression -> ENTERO .)
    IF              reduce using rule 42 (final_expression -> ENTERO .)
    WHILE           reduce using rule 42 (final_expression -> ENTERO .)
    FOR             reduce using rule 42 (final_expression -> ENTERO .)
    LOG             reduce using rule 42 (final_expression -> ENTERO .)
    LOG10           reduce using rule 42 (final_expression -> ENTERO .)
    COS             reduce using rule 42 (final_expression -> ENTERO .)
    SIN             reduce using rule 42 (final_expression -> ENTERO .)
    TAN             reduce using rule 42 (final_expression -> ENTERO .)
    SQRT            reduce using rule 42 (final_expression -> ENTERO .)
    UPPERCASE       reduce using rule 42 (final_expression -> ENTERO .)
    LOWERCASE       reduce using rule 42 (final_expression -> ENTERO .)
    TOSTRING        reduce using rule 42 (final_expression -> ENTERO .)
    TOFLOAT         reduce using rule 42 (final_expression -> ENTERO .)
    TRUNC           reduce using rule 42 (final_expression -> ENTERO .)
    TYPEOF          reduce using rule 42 (final_expression -> ENTERO .)
    PARSE           reduce using rule 42 (final_expression -> ENTERO .)
    LENGTH          reduce using rule 42 (final_expression -> ENTERO .)
    PUSH            reduce using rule 42 (final_expression -> ENTERO .)
    POP             reduce using rule 42 (final_expression -> ENTERO .)
    STRUCT          reduce using rule 42 (final_expression -> ENTERO .)
    PARDER          reduce using rule 42 (final_expression -> ENTERO .)
    COMA            reduce using rule 42 (final_expression -> ENTERO .)
    DOSP            reduce using rule 42 (final_expression -> ENTERO .)
    CORCHETEDER     reduce using rule 42 (final_expression -> ENTERO .)


state 89

    (43) final_expression -> CADENA .

    MAS             reduce using rule 43 (final_expression -> CADENA .)
    MENOS           reduce using rule 43 (final_expression -> CADENA .)
    POR             reduce using rule 43 (final_expression -> CADENA .)
    DIVIDIDO        reduce using rule 43 (final_expression -> CADENA .)
    POTENCIA        reduce using rule 43 (final_expression -> CADENA .)
    MODULO          reduce using rule 43 (final_expression -> CADENA .)
    MAYQUE          reduce using rule 43 (final_expression -> CADENA .)
    MENQUE          reduce using rule 43 (final_expression -> CADENA .)
    MENIGUALQUE     reduce using rule 43 (final_expression -> CADENA .)
    MAYIGUALQUE     reduce using rule 43 (final_expression -> CADENA .)
    IGUALQUE        reduce using rule 43 (final_expression -> CADENA .)
    NIGUALQUE       reduce using rule 43 (final_expression -> CADENA .)
    OR              reduce using rule 43 (final_expression -> CADENA .)
    AND             reduce using rule 43 (final_expression -> CADENA .)
    PTCOMA          reduce using rule 43 (final_expression -> CADENA .)
    PRINT           reduce using rule 43 (final_expression -> CADENA .)
    PRINTLN         reduce using rule 43 (final_expression -> CADENA .)
    LOCAL           reduce using rule 43 (final_expression -> CADENA .)
    GLOBAL          reduce using rule 43 (final_expression -> CADENA .)
    ID              reduce using rule 43 (final_expression -> CADENA .)
    FUNCTION        reduce using rule 43 (final_expression -> CADENA .)
    RETURN          reduce using rule 43 (final_expression -> CADENA .)
    BREAK           reduce using rule 43 (final_expression -> CADENA .)
    CONTINUE        reduce using rule 43 (final_expression -> CADENA .)
    IF              reduce using rule 43 (final_expression -> CADENA .)
    WHILE           reduce using rule 43 (final_expression -> CADENA .)
    FOR             reduce using rule 43 (final_expression -> CADENA .)
    LOG             reduce using rule 43 (final_expression -> CADENA .)
    LOG10           reduce using rule 43 (final_expression -> CADENA .)
    COS             reduce using rule 43 (final_expression -> CADENA .)
    SIN             reduce using rule 43 (final_expression -> CADENA .)
    TAN             reduce using rule 43 (final_expression -> CADENA .)
    SQRT            reduce using rule 43 (final_expression -> CADENA .)
    UPPERCASE       reduce using rule 43 (final_expression -> CADENA .)
    LOWERCASE       reduce using rule 43 (final_expression -> CADENA .)
    TOSTRING        reduce using rule 43 (final_expression -> CADENA .)
    TOFLOAT         reduce using rule 43 (final_expression -> CADENA .)
    TRUNC           reduce using rule 43 (final_expression -> CADENA .)
    TYPEOF          reduce using rule 43 (final_expression -> CADENA .)
    PARSE           reduce using rule 43 (final_expression -> CADENA .)
    LENGTH          reduce using rule 43 (final_expression -> CADENA .)
    PUSH            reduce using rule 43 (final_expression -> CADENA .)
    POP             reduce using rule 43 (final_expression -> CADENA .)
    STRUCT          reduce using rule 43 (final_expression -> CADENA .)
    PARDER          reduce using rule 43 (final_expression -> CADENA .)
    COMA            reduce using rule 43 (final_expression -> CADENA .)
    DOSP            reduce using rule 43 (final_expression -> CADENA .)
    CORCHETEDER     reduce using rule 43 (final_expression -> CADENA .)


state 90

    (44) final_expression -> CARACTER .

    MAS             reduce using rule 44 (final_expression -> CARACTER .)
    MENOS           reduce using rule 44 (final_expression -> CARACTER .)
    POR             reduce using rule 44 (final_expression -> CARACTER .)
    DIVIDIDO        reduce using rule 44 (final_expression -> CARACTER .)
    POTENCIA        reduce using rule 44 (final_expression -> CARACTER .)
    MODULO          reduce using rule 44 (final_expression -> CARACTER .)
    MAYQUE          reduce using rule 44 (final_expression -> CARACTER .)
    MENQUE          reduce using rule 44 (final_expression -> CARACTER .)
    MENIGUALQUE     reduce using rule 44 (final_expression -> CARACTER .)
    MAYIGUALQUE     reduce using rule 44 (final_expression -> CARACTER .)
    IGUALQUE        reduce using rule 44 (final_expression -> CARACTER .)
    NIGUALQUE       reduce using rule 44 (final_expression -> CARACTER .)
    OR              reduce using rule 44 (final_expression -> CARACTER .)
    AND             reduce using rule 44 (final_expression -> CARACTER .)
    PTCOMA          reduce using rule 44 (final_expression -> CARACTER .)
    PRINT           reduce using rule 44 (final_expression -> CARACTER .)
    PRINTLN         reduce using rule 44 (final_expression -> CARACTER .)
    LOCAL           reduce using rule 44 (final_expression -> CARACTER .)
    GLOBAL          reduce using rule 44 (final_expression -> CARACTER .)
    ID              reduce using rule 44 (final_expression -> CARACTER .)
    FUNCTION        reduce using rule 44 (final_expression -> CARACTER .)
    RETURN          reduce using rule 44 (final_expression -> CARACTER .)
    BREAK           reduce using rule 44 (final_expression -> CARACTER .)
    CONTINUE        reduce using rule 44 (final_expression -> CARACTER .)
    IF              reduce using rule 44 (final_expression -> CARACTER .)
    WHILE           reduce using rule 44 (final_expression -> CARACTER .)
    FOR             reduce using rule 44 (final_expression -> CARACTER .)
    LOG             reduce using rule 44 (final_expression -> CARACTER .)
    LOG10           reduce using rule 44 (final_expression -> CARACTER .)
    COS             reduce using rule 44 (final_expression -> CARACTER .)
    SIN             reduce using rule 44 (final_expression -> CARACTER .)
    TAN             reduce using rule 44 (final_expression -> CARACTER .)
    SQRT            reduce using rule 44 (final_expression -> CARACTER .)
    UPPERCASE       reduce using rule 44 (final_expression -> CARACTER .)
    LOWERCASE       reduce using rule 44 (final_expression -> CARACTER .)
    TOSTRING        reduce using rule 44 (final_expression -> CARACTER .)
    TOFLOAT         reduce using rule 44 (final_expression -> CARACTER .)
    TRUNC           reduce using rule 44 (final_expression -> CARACTER .)
    TYPEOF          reduce using rule 44 (final_expression -> CARACTER .)
    PARSE           reduce using rule 44 (final_expression -> CARACTER .)
    LENGTH          reduce using rule 44 (final_expression -> CARACTER .)
    PUSH            reduce using rule 44 (final_expression -> CARACTER .)
    POP             reduce using rule 44 (final_expression -> CARACTER .)
    STRUCT          reduce using rule 44 (final_expression -> CARACTER .)
    PARDER          reduce using rule 44 (final_expression -> CARACTER .)
    COMA            reduce using rule 44 (final_expression -> CARACTER .)
    DOSP            reduce using rule 44 (final_expression -> CARACTER .)
    CORCHETEDER     reduce using rule 44 (final_expression -> CARACTER .)


state 91

    (45) final_expression -> ID .
    (46) final_expression -> ID . index_list
    (87) call_function -> ID . PARIZQ PARDER
    (88) call_function -> ID . PARIZQ exp_list PARDER
    (122) access_struct -> ID . PUNTO ID
    (91) index_list -> . index_list CORCHETEIZQ expression CORCHETEDER
    (92) index_list -> . CORCHETEIZQ expression CORCHETEDER

    MAS             reduce using rule 45 (final_expression -> ID .)
    MENOS           reduce using rule 45 (final_expression -> ID .)
    POR             reduce using rule 45 (final_expression -> ID .)
    DIVIDIDO        reduce using rule 45 (final_expression -> ID .)
    POTENCIA        reduce using rule 45 (final_expression -> ID .)
    MODULO          reduce using rule 45 (final_expression -> ID .)
    MAYQUE          reduce using rule 45 (final_expression -> ID .)
    MENQUE          reduce using rule 45 (final_expression -> ID .)
    MENIGUALQUE     reduce using rule 45 (final_expression -> ID .)
    MAYIGUALQUE     reduce using rule 45 (final_expression -> ID .)
    IGUALQUE        reduce using rule 45 (final_expression -> ID .)
    NIGUALQUE       reduce using rule 45 (final_expression -> ID .)
    OR              reduce using rule 45 (final_expression -> ID .)
    AND             reduce using rule 45 (final_expression -> ID .)
    PTCOMA          reduce using rule 45 (final_expression -> ID .)
    PRINT           reduce using rule 45 (final_expression -> ID .)
    PRINTLN         reduce using rule 45 (final_expression -> ID .)
    LOCAL           reduce using rule 45 (final_expression -> ID .)
    GLOBAL          reduce using rule 45 (final_expression -> ID .)
    ID              reduce using rule 45 (final_expression -> ID .)
    FUNCTION        reduce using rule 45 (final_expression -> ID .)
    RETURN          reduce using rule 45 (final_expression -> ID .)
    BREAK           reduce using rule 45 (final_expression -> ID .)
    CONTINUE        reduce using rule 45 (final_expression -> ID .)
    IF              reduce using rule 45 (final_expression -> ID .)
    WHILE           reduce using rule 45 (final_expression -> ID .)
    FOR             reduce using rule 45 (final_expression -> ID .)
    LOG             reduce using rule 45 (final_expression -> ID .)
    LOG10           reduce using rule 45 (final_expression -> ID .)
    COS             reduce using rule 45 (final_expression -> ID .)
    SIN             reduce using rule 45 (final_expression -> ID .)
    TAN             reduce using rule 45 (final_expression -> ID .)
    SQRT            reduce using rule 45 (final_expression -> ID .)
    UPPERCASE       reduce using rule 45 (final_expression -> ID .)
    LOWERCASE       reduce using rule 45 (final_expression -> ID .)
    TOSTRING        reduce using rule 45 (final_expression -> ID .)
    TOFLOAT         reduce using rule 45 (final_expression -> ID .)
    TRUNC           reduce using rule 45 (final_expression -> ID .)
    TYPEOF          reduce using rule 45 (final_expression -> ID .)
    PARSE           reduce using rule 45 (final_expression -> ID .)
    LENGTH          reduce using rule 45 (final_expression -> ID .)
    PUSH            reduce using rule 45 (final_expression -> ID .)
    POP             reduce using rule 45 (final_expression -> ID .)
    STRUCT          reduce using rule 45 (final_expression -> ID .)
    PARDER          reduce using rule 45 (final_expression -> ID .)
    COMA            reduce using rule 45 (final_expression -> ID .)
    DOSP            reduce using rule 45 (final_expression -> ID .)
    CORCHETEDER     reduce using rule 45 (final_expression -> ID .)
    PARIZQ          shift and go to state 76
    PUNTO           shift and go to state 150
    CORCHETEIZQ     shift and go to state 78

    index_list                     shift and go to state 149

state 92

    (47) final_expression -> TRUE .

    MAS             reduce using rule 47 (final_expression -> TRUE .)
    MENOS           reduce using rule 47 (final_expression -> TRUE .)
    POR             reduce using rule 47 (final_expression -> TRUE .)
    DIVIDIDO        reduce using rule 47 (final_expression -> TRUE .)
    POTENCIA        reduce using rule 47 (final_expression -> TRUE .)
    MODULO          reduce using rule 47 (final_expression -> TRUE .)
    MAYQUE          reduce using rule 47 (final_expression -> TRUE .)
    MENQUE          reduce using rule 47 (final_expression -> TRUE .)
    MENIGUALQUE     reduce using rule 47 (final_expression -> TRUE .)
    MAYIGUALQUE     reduce using rule 47 (final_expression -> TRUE .)
    IGUALQUE        reduce using rule 47 (final_expression -> TRUE .)
    NIGUALQUE       reduce using rule 47 (final_expression -> TRUE .)
    OR              reduce using rule 47 (final_expression -> TRUE .)
    AND             reduce using rule 47 (final_expression -> TRUE .)
    PTCOMA          reduce using rule 47 (final_expression -> TRUE .)
    PRINT           reduce using rule 47 (final_expression -> TRUE .)
    PRINTLN         reduce using rule 47 (final_expression -> TRUE .)
    LOCAL           reduce using rule 47 (final_expression -> TRUE .)
    GLOBAL          reduce using rule 47 (final_expression -> TRUE .)
    ID              reduce using rule 47 (final_expression -> TRUE .)
    FUNCTION        reduce using rule 47 (final_expression -> TRUE .)
    RETURN          reduce using rule 47 (final_expression -> TRUE .)
    BREAK           reduce using rule 47 (final_expression -> TRUE .)
    CONTINUE        reduce using rule 47 (final_expression -> TRUE .)
    IF              reduce using rule 47 (final_expression -> TRUE .)
    WHILE           reduce using rule 47 (final_expression -> TRUE .)
    FOR             reduce using rule 47 (final_expression -> TRUE .)
    LOG             reduce using rule 47 (final_expression -> TRUE .)
    LOG10           reduce using rule 47 (final_expression -> TRUE .)
    COS             reduce using rule 47 (final_expression -> TRUE .)
    SIN             reduce using rule 47 (final_expression -> TRUE .)
    TAN             reduce using rule 47 (final_expression -> TRUE .)
    SQRT            reduce using rule 47 (final_expression -> TRUE .)
    UPPERCASE       reduce using rule 47 (final_expression -> TRUE .)
    LOWERCASE       reduce using rule 47 (final_expression -> TRUE .)
    TOSTRING        reduce using rule 47 (final_expression -> TRUE .)
    TOFLOAT         reduce using rule 47 (final_expression -> TRUE .)
    TRUNC           reduce using rule 47 (final_expression -> TRUE .)
    TYPEOF          reduce using rule 47 (final_expression -> TRUE .)
    PARSE           reduce using rule 47 (final_expression -> TRUE .)
    LENGTH          reduce using rule 47 (final_expression -> TRUE .)
    PUSH            reduce using rule 47 (final_expression -> TRUE .)
    POP             reduce using rule 47 (final_expression -> TRUE .)
    STRUCT          reduce using rule 47 (final_expression -> TRUE .)
    PARDER          reduce using rule 47 (final_expression -> TRUE .)
    COMA            reduce using rule 47 (final_expression -> TRUE .)
    DOSP            reduce using rule 47 (final_expression -> TRUE .)
    CORCHETEDER     reduce using rule 47 (final_expression -> TRUE .)


state 93

    (48) final_expression -> FALSE .

    MAS             reduce using rule 48 (final_expression -> FALSE .)
    MENOS           reduce using rule 48 (final_expression -> FALSE .)
    POR             reduce using rule 48 (final_expression -> FALSE .)
    DIVIDIDO        reduce using rule 48 (final_expression -> FALSE .)
    POTENCIA        reduce using rule 48 (final_expression -> FALSE .)
    MODULO          reduce using rule 48 (final_expression -> FALSE .)
    MAYQUE          reduce using rule 48 (final_expression -> FALSE .)
    MENQUE          reduce using rule 48 (final_expression -> FALSE .)
    MENIGUALQUE     reduce using rule 48 (final_expression -> FALSE .)
    MAYIGUALQUE     reduce using rule 48 (final_expression -> FALSE .)
    IGUALQUE        reduce using rule 48 (final_expression -> FALSE .)
    NIGUALQUE       reduce using rule 48 (final_expression -> FALSE .)
    OR              reduce using rule 48 (final_expression -> FALSE .)
    AND             reduce using rule 48 (final_expression -> FALSE .)
    PTCOMA          reduce using rule 48 (final_expression -> FALSE .)
    PRINT           reduce using rule 48 (final_expression -> FALSE .)
    PRINTLN         reduce using rule 48 (final_expression -> FALSE .)
    LOCAL           reduce using rule 48 (final_expression -> FALSE .)
    GLOBAL          reduce using rule 48 (final_expression -> FALSE .)
    ID              reduce using rule 48 (final_expression -> FALSE .)
    FUNCTION        reduce using rule 48 (final_expression -> FALSE .)
    RETURN          reduce using rule 48 (final_expression -> FALSE .)
    BREAK           reduce using rule 48 (final_expression -> FALSE .)
    CONTINUE        reduce using rule 48 (final_expression -> FALSE .)
    IF              reduce using rule 48 (final_expression -> FALSE .)
    WHILE           reduce using rule 48 (final_expression -> FALSE .)
    FOR             reduce using rule 48 (final_expression -> FALSE .)
    LOG             reduce using rule 48 (final_expression -> FALSE .)
    LOG10           reduce using rule 48 (final_expression -> FALSE .)
    COS             reduce using rule 48 (final_expression -> FALSE .)
    SIN             reduce using rule 48 (final_expression -> FALSE .)
    TAN             reduce using rule 48 (final_expression -> FALSE .)
    SQRT            reduce using rule 48 (final_expression -> FALSE .)
    UPPERCASE       reduce using rule 48 (final_expression -> FALSE .)
    LOWERCASE       reduce using rule 48 (final_expression -> FALSE .)
    TOSTRING        reduce using rule 48 (final_expression -> FALSE .)
    TOFLOAT         reduce using rule 48 (final_expression -> FALSE .)
    TRUNC           reduce using rule 48 (final_expression -> FALSE .)
    TYPEOF          reduce using rule 48 (final_expression -> FALSE .)
    PARSE           reduce using rule 48 (final_expression -> FALSE .)
    LENGTH          reduce using rule 48 (final_expression -> FALSE .)
    PUSH            reduce using rule 48 (final_expression -> FALSE .)
    POP             reduce using rule 48 (final_expression -> FALSE .)
    STRUCT          reduce using rule 48 (final_expression -> FALSE .)
    PARDER          reduce using rule 48 (final_expression -> FALSE .)
    COMA            reduce using rule 48 (final_expression -> FALSE .)
    DOSP            reduce using rule 48 (final_expression -> FALSE .)
    CORCHETEDER     reduce using rule 48 (final_expression -> FALSE .)


state 94

    (49) final_expression -> call_function .

    MAS             reduce using rule 49 (final_expression -> call_function .)
    MENOS           reduce using rule 49 (final_expression -> call_function .)
    POR             reduce using rule 49 (final_expression -> call_function .)
    DIVIDIDO        reduce using rule 49 (final_expression -> call_function .)
    POTENCIA        reduce using rule 49 (final_expression -> call_function .)
    MODULO          reduce using rule 49 (final_expression -> call_function .)
    MAYQUE          reduce using rule 49 (final_expression -> call_function .)
    MENQUE          reduce using rule 49 (final_expression -> call_function .)
    MENIGUALQUE     reduce using rule 49 (final_expression -> call_function .)
    MAYIGUALQUE     reduce using rule 49 (final_expression -> call_function .)
    IGUALQUE        reduce using rule 49 (final_expression -> call_function .)
    NIGUALQUE       reduce using rule 49 (final_expression -> call_function .)
    OR              reduce using rule 49 (final_expression -> call_function .)
    AND             reduce using rule 49 (final_expression -> call_function .)
    PTCOMA          reduce using rule 49 (final_expression -> call_function .)
    PRINT           reduce using rule 49 (final_expression -> call_function .)
    PRINTLN         reduce using rule 49 (final_expression -> call_function .)
    LOCAL           reduce using rule 49 (final_expression -> call_function .)
    GLOBAL          reduce using rule 49 (final_expression -> call_function .)
    ID              reduce using rule 49 (final_expression -> call_function .)
    FUNCTION        reduce using rule 49 (final_expression -> call_function .)
    RETURN          reduce using rule 49 (final_expression -> call_function .)
    BREAK           reduce using rule 49 (final_expression -> call_function .)
    CONTINUE        reduce using rule 49 (final_expression -> call_function .)
    IF              reduce using rule 49 (final_expression -> call_function .)
    WHILE           reduce using rule 49 (final_expression -> call_function .)
    FOR             reduce using rule 49 (final_expression -> call_function .)
    LOG             reduce using rule 49 (final_expression -> call_function .)
    LOG10           reduce using rule 49 (final_expression -> call_function .)
    COS             reduce using rule 49 (final_expression -> call_function .)
    SIN             reduce using rule 49 (final_expression -> call_function .)
    TAN             reduce using rule 49 (final_expression -> call_function .)
    SQRT            reduce using rule 49 (final_expression -> call_function .)
    UPPERCASE       reduce using rule 49 (final_expression -> call_function .)
    LOWERCASE       reduce using rule 49 (final_expression -> call_function .)
    TOSTRING        reduce using rule 49 (final_expression -> call_function .)
    TOFLOAT         reduce using rule 49 (final_expression -> call_function .)
    TRUNC           reduce using rule 49 (final_expression -> call_function .)
    TYPEOF          reduce using rule 49 (final_expression -> call_function .)
    PARSE           reduce using rule 49 (final_expression -> call_function .)
    LENGTH          reduce using rule 49 (final_expression -> call_function .)
    PUSH            reduce using rule 49 (final_expression -> call_function .)
    POP             reduce using rule 49 (final_expression -> call_function .)
    STRUCT          reduce using rule 49 (final_expression -> call_function .)
    PARDER          reduce using rule 49 (final_expression -> call_function .)
    COMA            reduce using rule 49 (final_expression -> call_function .)
    DOSP            reduce using rule 49 (final_expression -> call_function .)
    CORCHETEDER     reduce using rule 49 (final_expression -> call_function .)


state 95

    (50) final_expression -> access_struct .

    MAS             reduce using rule 50 (final_expression -> access_struct .)
    MENOS           reduce using rule 50 (final_expression -> access_struct .)
    POR             reduce using rule 50 (final_expression -> access_struct .)
    DIVIDIDO        reduce using rule 50 (final_expression -> access_struct .)
    POTENCIA        reduce using rule 50 (final_expression -> access_struct .)
    MODULO          reduce using rule 50 (final_expression -> access_struct .)
    MAYQUE          reduce using rule 50 (final_expression -> access_struct .)
    MENQUE          reduce using rule 50 (final_expression -> access_struct .)
    MENIGUALQUE     reduce using rule 50 (final_expression -> access_struct .)
    MAYIGUALQUE     reduce using rule 50 (final_expression -> access_struct .)
    IGUALQUE        reduce using rule 50 (final_expression -> access_struct .)
    NIGUALQUE       reduce using rule 50 (final_expression -> access_struct .)
    OR              reduce using rule 50 (final_expression -> access_struct .)
    AND             reduce using rule 50 (final_expression -> access_struct .)
    PTCOMA          reduce using rule 50 (final_expression -> access_struct .)
    PRINT           reduce using rule 50 (final_expression -> access_struct .)
    PRINTLN         reduce using rule 50 (final_expression -> access_struct .)
    LOCAL           reduce using rule 50 (final_expression -> access_struct .)
    GLOBAL          reduce using rule 50 (final_expression -> access_struct .)
    ID              reduce using rule 50 (final_expression -> access_struct .)
    FUNCTION        reduce using rule 50 (final_expression -> access_struct .)
    RETURN          reduce using rule 50 (final_expression -> access_struct .)
    BREAK           reduce using rule 50 (final_expression -> access_struct .)
    CONTINUE        reduce using rule 50 (final_expression -> access_struct .)
    IF              reduce using rule 50 (final_expression -> access_struct .)
    WHILE           reduce using rule 50 (final_expression -> access_struct .)
    FOR             reduce using rule 50 (final_expression -> access_struct .)
    LOG             reduce using rule 50 (final_expression -> access_struct .)
    LOG10           reduce using rule 50 (final_expression -> access_struct .)
    COS             reduce using rule 50 (final_expression -> access_struct .)
    SIN             reduce using rule 50 (final_expression -> access_struct .)
    TAN             reduce using rule 50 (final_expression -> access_struct .)
    SQRT            reduce using rule 50 (final_expression -> access_struct .)
    UPPERCASE       reduce using rule 50 (final_expression -> access_struct .)
    LOWERCASE       reduce using rule 50 (final_expression -> access_struct .)
    TOSTRING        reduce using rule 50 (final_expression -> access_struct .)
    TOFLOAT         reduce using rule 50 (final_expression -> access_struct .)
    TRUNC           reduce using rule 50 (final_expression -> access_struct .)
    TYPEOF          reduce using rule 50 (final_expression -> access_struct .)
    PARSE           reduce using rule 50 (final_expression -> access_struct .)
    LENGTH          reduce using rule 50 (final_expression -> access_struct .)
    PUSH            reduce using rule 50 (final_expression -> access_struct .)
    POP             reduce using rule 50 (final_expression -> access_struct .)
    STRUCT          reduce using rule 50 (final_expression -> access_struct .)
    PARDER          reduce using rule 50 (final_expression -> access_struct .)
    COMA            reduce using rule 50 (final_expression -> access_struct .)
    DOSP            reduce using rule 50 (final_expression -> access_struct .)
    CORCHETEDER     reduce using rule 50 (final_expression -> access_struct .)


state 96

    (51) final_expression -> nativas .

    MAS             reduce using rule 51 (final_expression -> nativas .)
    MENOS           reduce using rule 51 (final_expression -> nativas .)
    POR             reduce using rule 51 (final_expression -> nativas .)
    DIVIDIDO        reduce using rule 51 (final_expression -> nativas .)
    POTENCIA        reduce using rule 51 (final_expression -> nativas .)
    MODULO          reduce using rule 51 (final_expression -> nativas .)
    MAYQUE          reduce using rule 51 (final_expression -> nativas .)
    MENQUE          reduce using rule 51 (final_expression -> nativas .)
    MENIGUALQUE     reduce using rule 51 (final_expression -> nativas .)
    MAYIGUALQUE     reduce using rule 51 (final_expression -> nativas .)
    IGUALQUE        reduce using rule 51 (final_expression -> nativas .)
    NIGUALQUE       reduce using rule 51 (final_expression -> nativas .)
    OR              reduce using rule 51 (final_expression -> nativas .)
    AND             reduce using rule 51 (final_expression -> nativas .)
    PTCOMA          reduce using rule 51 (final_expression -> nativas .)
    PRINT           reduce using rule 51 (final_expression -> nativas .)
    PRINTLN         reduce using rule 51 (final_expression -> nativas .)
    LOCAL           reduce using rule 51 (final_expression -> nativas .)
    GLOBAL          reduce using rule 51 (final_expression -> nativas .)
    ID              reduce using rule 51 (final_expression -> nativas .)
    FUNCTION        reduce using rule 51 (final_expression -> nativas .)
    RETURN          reduce using rule 51 (final_expression -> nativas .)
    BREAK           reduce using rule 51 (final_expression -> nativas .)
    CONTINUE        reduce using rule 51 (final_expression -> nativas .)
    IF              reduce using rule 51 (final_expression -> nativas .)
    WHILE           reduce using rule 51 (final_expression -> nativas .)
    FOR             reduce using rule 51 (final_expression -> nativas .)
    LOG             reduce using rule 51 (final_expression -> nativas .)
    LOG10           reduce using rule 51 (final_expression -> nativas .)
    COS             reduce using rule 51 (final_expression -> nativas .)
    SIN             reduce using rule 51 (final_expression -> nativas .)
    TAN             reduce using rule 51 (final_expression -> nativas .)
    SQRT            reduce using rule 51 (final_expression -> nativas .)
    UPPERCASE       reduce using rule 51 (final_expression -> nativas .)
    LOWERCASE       reduce using rule 51 (final_expression -> nativas .)
    TOSTRING        reduce using rule 51 (final_expression -> nativas .)
    TOFLOAT         reduce using rule 51 (final_expression -> nativas .)
    TRUNC           reduce using rule 51 (final_expression -> nativas .)
    TYPEOF          reduce using rule 51 (final_expression -> nativas .)
    PARSE           reduce using rule 51 (final_expression -> nativas .)
    LENGTH          reduce using rule 51 (final_expression -> nativas .)
    PUSH            reduce using rule 51 (final_expression -> nativas .)
    POP             reduce using rule 51 (final_expression -> nativas .)
    STRUCT          reduce using rule 51 (final_expression -> nativas .)
    PARDER          reduce using rule 51 (final_expression -> nativas .)
    COMA            reduce using rule 51 (final_expression -> nativas .)
    DOSP            reduce using rule 51 (final_expression -> nativas .)
    CORCHETEDER     reduce using rule 51 (final_expression -> nativas .)


state 97

    (104) if_state -> IF expression . statement END
    (105) if_state -> IF expression . statement ELSE statement END
    (106) if_state -> IF expression . statement else_if_list END
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 151
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 98

    (110) while_state -> WHILE expression . statement END
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 153
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 99

    (111) for_state -> FOR ID . IN expression DOSP expression statement END
    (112) for_state -> FOR ID . IN expression statement END

    IN              shift and go to state 154


state 100

    (52) nativas -> LOG PARIZQ . ENTERO COMA expression PARDER

    ENTERO          shift and go to state 155


state 101

    (53) nativas -> LOG10 PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 156
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 102

    (54) nativas -> COS PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 157
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 103

    (55) nativas -> SIN PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 158
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 104

    (56) nativas -> TAN PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 159
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 105

    (57) nativas -> SQRT PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 160
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 106

    (58) nativas -> UPPERCASE PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 161
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 107

    (59) nativas -> LOWERCASE PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 162
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 108

    (60) nativas -> TOSTRING PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 163
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 109

    (61) nativas -> TOFLOAT PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 164
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 110

    (62) nativas -> TRUNC PARIZQ . INT COMA expression PARDER
    (63) nativas -> TRUNC PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    INT             shift and go to state 165
    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 166
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 111

    (64) nativas -> TYPEOF PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 167
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 112

    (65) nativas -> PARSE PARIZQ . tipo COMA expression PARDER
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 168

state 113

    (66) nativas -> LENGTH PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 176
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 114

    (67) nativas -> PUSH PARIZQ . expression COMA expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 177
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 115

    (68) nativas -> POP PARIZQ . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 178
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 116

    (117) create_struct -> STRUCT ID . attList END
    (118) attList -> . attList ID DOSP DOSP tipo PTCOMA
    (119) attList -> . ID DOSP DOSP tipo PTCOMA

    ID              shift and go to state 179

    attList                        shift and go to state 180

state 117

    (69) print_instr -> PRINT PARIZQ exp_list . PARDER
    (89) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 181
    COMA            shift and go to state 182


state 118

    (90) exp_list -> expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          reduce using rule 90 (exp_list -> expression .)
    COMA            reduce using rule 90 (exp_list -> expression .)
    CORCHETEDER     reduce using rule 90 (exp_list -> expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 119

    (70) println_instr -> PRINTLN PARIZQ exp_list . PARDER
    (89) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 183
    COMA            shift and go to state 182


state 120

    (81) asignacion_instr -> LOCAL ID IGUAL . expression
    (84) definicion_asignacion_instr -> LOCAL ID IGUAL . expression DOSP DOSP tipo
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 184
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 121

    (80) asignacion_instr -> ID IGUAL expression .
    (83) definicion_asignacion_instr -> ID IGUAL expression . DOSP DOSP tipo
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PTCOMA          reduce using rule 80 (asignacion_instr -> ID IGUAL expression .)
    DOSP            shift and go to state 185
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 122

    (86) asignacion_arreglo_instr -> ID index_list IGUAL . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 186
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 123

    (91) index_list -> index_list CORCHETEIZQ . expression CORCHETEDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 187
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 124

    (120) declare_struct -> ID DOSP DOSP . ID

    ID              shift and go to state 188


state 125

    (87) call_function -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MAS             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    POR             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MENIGUALQUE     reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    MAYIGUALQUE     reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    OR              reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    AND             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    PRINT           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    PRINTLN         reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    LOCAL           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    GLOBAL          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    ID              reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    IF              reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    FOR             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    LOG             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    LOG10           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    COS             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    SIN             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    TAN             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    SQRT            reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    UPPERCASE       reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    LOWERCASE       reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    TOSTRING        reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    TOFLOAT         reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    TRUNC           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    TYPEOF          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    PARSE           reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    LENGTH          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    PUSH            reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    POP             reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    STRUCT          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    COMA            reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 87 (call_function -> ID PARIZQ PARDER .)
    CORCHETEDER     reduce using rule 87 (call_function -> ID PARIZQ PARDER .)


state 126

    (88) call_function -> ID PARIZQ exp_list . PARDER
    (89) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 189
    COMA            shift and go to state 182


state 127

    (121) assign_access -> ID PUNTO ID . IGUAL expression

    IGUAL           shift and go to state 190


state 128

    (92) index_list -> CORCHETEIZQ expression . CORCHETEDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    CORCHETEDER     shift and go to state 191
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 129

    (82) asignacion_instr -> GLOBAL ID IGUAL . expression
    (85) definicion_asignacion_instr -> GLOBAL ID IGUAL . expression DOSP DOSP tipo
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 192
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 130

    (94) declare_function -> FUNCTION ID PARIZQ . PARDER DOSP DOSP tipo statement END
    (95) declare_function -> FUNCTION ID PARIZQ . dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> FUNCTION ID PARIZQ . dec_params PARDER statement END
    (97) declare_function -> FUNCTION ID PARIZQ . PARDER statement END
    (98) dec_params -> . dec_params COMA ID DOSP DOSP tipo
    (99) dec_params -> . dec_params COMA ID DOSP DOSP ID
    (100) dec_params -> . dec_params COMA ID
    (101) dec_params -> . ID DOSP DOSP tipo
    (102) dec_params -> . ID DOSP DOSP ID
    (103) dec_params -> . ID

    PARDER          shift and go to state 194
    ID              shift and go to state 193

    dec_params                     shift and go to state 195

state 131

    (24) expression -> expression MAS . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 196
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 132

    (25) expression -> expression MENOS . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 197
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 133

    (26) expression -> expression POR . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 198
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 134

    (27) expression -> expression DIVIDIDO . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 199
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 135

    (28) expression -> expression POTENCIA . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 200
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 136

    (29) expression -> expression MODULO . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 201
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 137

    (30) expression -> expression MAYQUE . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 202
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 138

    (31) expression -> expression MENQUE . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 203
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 139

    (32) expression -> expression MENIGUALQUE . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 204
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 140

    (33) expression -> expression MAYIGUALQUE . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 205
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 141

    (34) expression -> expression IGUALQUE . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 206
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 142

    (35) expression -> expression NIGUALQUE . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 207
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 143

    (36) expression -> expression OR . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 208
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 144

    (37) expression -> expression AND . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 209
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 145

    (22) expression -> MENOS expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 22 (expression -> MENOS expression .)
    MENOS           reduce using rule 22 (expression -> MENOS expression .)
    POR             reduce using rule 22 (expression -> MENOS expression .)
    DIVIDIDO        reduce using rule 22 (expression -> MENOS expression .)
    POTENCIA        reduce using rule 22 (expression -> MENOS expression .)
    MODULO          reduce using rule 22 (expression -> MENOS expression .)
    MAYQUE          reduce using rule 22 (expression -> MENOS expression .)
    MENQUE          reduce using rule 22 (expression -> MENOS expression .)
    MENIGUALQUE     reduce using rule 22 (expression -> MENOS expression .)
    MAYIGUALQUE     reduce using rule 22 (expression -> MENOS expression .)
    IGUALQUE        reduce using rule 22 (expression -> MENOS expression .)
    NIGUALQUE       reduce using rule 22 (expression -> MENOS expression .)
    OR              reduce using rule 22 (expression -> MENOS expression .)
    AND             reduce using rule 22 (expression -> MENOS expression .)
    PTCOMA          reduce using rule 22 (expression -> MENOS expression .)
    PRINT           reduce using rule 22 (expression -> MENOS expression .)
    PRINTLN         reduce using rule 22 (expression -> MENOS expression .)
    LOCAL           reduce using rule 22 (expression -> MENOS expression .)
    GLOBAL          reduce using rule 22 (expression -> MENOS expression .)
    ID              reduce using rule 22 (expression -> MENOS expression .)
    FUNCTION        reduce using rule 22 (expression -> MENOS expression .)
    RETURN          reduce using rule 22 (expression -> MENOS expression .)
    BREAK           reduce using rule 22 (expression -> MENOS expression .)
    CONTINUE        reduce using rule 22 (expression -> MENOS expression .)
    IF              reduce using rule 22 (expression -> MENOS expression .)
    WHILE           reduce using rule 22 (expression -> MENOS expression .)
    FOR             reduce using rule 22 (expression -> MENOS expression .)
    LOG             reduce using rule 22 (expression -> MENOS expression .)
    LOG10           reduce using rule 22 (expression -> MENOS expression .)
    COS             reduce using rule 22 (expression -> MENOS expression .)
    SIN             reduce using rule 22 (expression -> MENOS expression .)
    TAN             reduce using rule 22 (expression -> MENOS expression .)
    SQRT            reduce using rule 22 (expression -> MENOS expression .)
    UPPERCASE       reduce using rule 22 (expression -> MENOS expression .)
    LOWERCASE       reduce using rule 22 (expression -> MENOS expression .)
    TOSTRING        reduce using rule 22 (expression -> MENOS expression .)
    TOFLOAT         reduce using rule 22 (expression -> MENOS expression .)
    TRUNC           reduce using rule 22 (expression -> MENOS expression .)
    TYPEOF          reduce using rule 22 (expression -> MENOS expression .)
    PARSE           reduce using rule 22 (expression -> MENOS expression .)
    LENGTH          reduce using rule 22 (expression -> MENOS expression .)
    PUSH            reduce using rule 22 (expression -> MENOS expression .)
    POP             reduce using rule 22 (expression -> MENOS expression .)
    STRUCT          reduce using rule 22 (expression -> MENOS expression .)
    PARDER          reduce using rule 22 (expression -> MENOS expression .)
    COMA            reduce using rule 22 (expression -> MENOS expression .)
    DOSP            reduce using rule 22 (expression -> MENOS expression .)
    CORCHETEDER     reduce using rule 22 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! POTENCIA        [ shift and go to state 135 ]
  ! MODULO          [ shift and go to state 136 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 146

    (23) expression -> NOT expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 23 (expression -> NOT expression .)
    MENOS           reduce using rule 23 (expression -> NOT expression .)
    POR             reduce using rule 23 (expression -> NOT expression .)
    DIVIDIDO        reduce using rule 23 (expression -> NOT expression .)
    POTENCIA        reduce using rule 23 (expression -> NOT expression .)
    MODULO          reduce using rule 23 (expression -> NOT expression .)
    MAYQUE          reduce using rule 23 (expression -> NOT expression .)
    MENQUE          reduce using rule 23 (expression -> NOT expression .)
    MENIGUALQUE     reduce using rule 23 (expression -> NOT expression .)
    MAYIGUALQUE     reduce using rule 23 (expression -> NOT expression .)
    IGUALQUE        reduce using rule 23 (expression -> NOT expression .)
    NIGUALQUE       reduce using rule 23 (expression -> NOT expression .)
    OR              reduce using rule 23 (expression -> NOT expression .)
    AND             reduce using rule 23 (expression -> NOT expression .)
    PTCOMA          reduce using rule 23 (expression -> NOT expression .)
    PRINT           reduce using rule 23 (expression -> NOT expression .)
    PRINTLN         reduce using rule 23 (expression -> NOT expression .)
    LOCAL           reduce using rule 23 (expression -> NOT expression .)
    GLOBAL          reduce using rule 23 (expression -> NOT expression .)
    ID              reduce using rule 23 (expression -> NOT expression .)
    FUNCTION        reduce using rule 23 (expression -> NOT expression .)
    RETURN          reduce using rule 23 (expression -> NOT expression .)
    BREAK           reduce using rule 23 (expression -> NOT expression .)
    CONTINUE        reduce using rule 23 (expression -> NOT expression .)
    IF              reduce using rule 23 (expression -> NOT expression .)
    WHILE           reduce using rule 23 (expression -> NOT expression .)
    FOR             reduce using rule 23 (expression -> NOT expression .)
    LOG             reduce using rule 23 (expression -> NOT expression .)
    LOG10           reduce using rule 23 (expression -> NOT expression .)
    COS             reduce using rule 23 (expression -> NOT expression .)
    SIN             reduce using rule 23 (expression -> NOT expression .)
    TAN             reduce using rule 23 (expression -> NOT expression .)
    SQRT            reduce using rule 23 (expression -> NOT expression .)
    UPPERCASE       reduce using rule 23 (expression -> NOT expression .)
    LOWERCASE       reduce using rule 23 (expression -> NOT expression .)
    TOSTRING        reduce using rule 23 (expression -> NOT expression .)
    TOFLOAT         reduce using rule 23 (expression -> NOT expression .)
    TRUNC           reduce using rule 23 (expression -> NOT expression .)
    TYPEOF          reduce using rule 23 (expression -> NOT expression .)
    PARSE           reduce using rule 23 (expression -> NOT expression .)
    LENGTH          reduce using rule 23 (expression -> NOT expression .)
    PUSH            reduce using rule 23 (expression -> NOT expression .)
    POP             reduce using rule 23 (expression -> NOT expression .)
    STRUCT          reduce using rule 23 (expression -> NOT expression .)
    PARDER          reduce using rule 23 (expression -> NOT expression .)
    COMA            reduce using rule 23 (expression -> NOT expression .)
    DOSP            reduce using rule 23 (expression -> NOT expression .)
    CORCHETEDER     reduce using rule 23 (expression -> NOT expression .)

  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! POTENCIA        [ shift and go to state 135 ]
  ! MODULO          [ shift and go to state 136 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 147

    (39) final_expression -> PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 210
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 148

    (40) final_expression -> CORCHETEIZQ exp_list . CORCHETEDER
    (89) exp_list -> exp_list . COMA expression

    CORCHETEDER     shift and go to state 211
    COMA            shift and go to state 182


state 149

    (46) final_expression -> ID index_list .
    (91) index_list -> index_list . CORCHETEIZQ expression CORCHETEDER

    MAS             reduce using rule 46 (final_expression -> ID index_list .)
    MENOS           reduce using rule 46 (final_expression -> ID index_list .)
    POR             reduce using rule 46 (final_expression -> ID index_list .)
    DIVIDIDO        reduce using rule 46 (final_expression -> ID index_list .)
    POTENCIA        reduce using rule 46 (final_expression -> ID index_list .)
    MODULO          reduce using rule 46 (final_expression -> ID index_list .)
    MAYQUE          reduce using rule 46 (final_expression -> ID index_list .)
    MENQUE          reduce using rule 46 (final_expression -> ID index_list .)
    MENIGUALQUE     reduce using rule 46 (final_expression -> ID index_list .)
    MAYIGUALQUE     reduce using rule 46 (final_expression -> ID index_list .)
    IGUALQUE        reduce using rule 46 (final_expression -> ID index_list .)
    NIGUALQUE       reduce using rule 46 (final_expression -> ID index_list .)
    OR              reduce using rule 46 (final_expression -> ID index_list .)
    AND             reduce using rule 46 (final_expression -> ID index_list .)
    PTCOMA          reduce using rule 46 (final_expression -> ID index_list .)
    PRINT           reduce using rule 46 (final_expression -> ID index_list .)
    PRINTLN         reduce using rule 46 (final_expression -> ID index_list .)
    LOCAL           reduce using rule 46 (final_expression -> ID index_list .)
    GLOBAL          reduce using rule 46 (final_expression -> ID index_list .)
    ID              reduce using rule 46 (final_expression -> ID index_list .)
    FUNCTION        reduce using rule 46 (final_expression -> ID index_list .)
    RETURN          reduce using rule 46 (final_expression -> ID index_list .)
    BREAK           reduce using rule 46 (final_expression -> ID index_list .)
    CONTINUE        reduce using rule 46 (final_expression -> ID index_list .)
    IF              reduce using rule 46 (final_expression -> ID index_list .)
    WHILE           reduce using rule 46 (final_expression -> ID index_list .)
    FOR             reduce using rule 46 (final_expression -> ID index_list .)
    LOG             reduce using rule 46 (final_expression -> ID index_list .)
    LOG10           reduce using rule 46 (final_expression -> ID index_list .)
    COS             reduce using rule 46 (final_expression -> ID index_list .)
    SIN             reduce using rule 46 (final_expression -> ID index_list .)
    TAN             reduce using rule 46 (final_expression -> ID index_list .)
    SQRT            reduce using rule 46 (final_expression -> ID index_list .)
    UPPERCASE       reduce using rule 46 (final_expression -> ID index_list .)
    LOWERCASE       reduce using rule 46 (final_expression -> ID index_list .)
    TOSTRING        reduce using rule 46 (final_expression -> ID index_list .)
    TOFLOAT         reduce using rule 46 (final_expression -> ID index_list .)
    TRUNC           reduce using rule 46 (final_expression -> ID index_list .)
    TYPEOF          reduce using rule 46 (final_expression -> ID index_list .)
    PARSE           reduce using rule 46 (final_expression -> ID index_list .)
    LENGTH          reduce using rule 46 (final_expression -> ID index_list .)
    PUSH            reduce using rule 46 (final_expression -> ID index_list .)
    POP             reduce using rule 46 (final_expression -> ID index_list .)
    STRUCT          reduce using rule 46 (final_expression -> ID index_list .)
    PARDER          reduce using rule 46 (final_expression -> ID index_list .)
    COMA            reduce using rule 46 (final_expression -> ID index_list .)
    DOSP            reduce using rule 46 (final_expression -> ID index_list .)
    CORCHETEDER     reduce using rule 46 (final_expression -> ID index_list .)
    CORCHETEIZQ     shift and go to state 123


state 150

    (122) access_struct -> ID PUNTO . ID

    ID              shift and go to state 212


state 151

    (104) if_state -> IF expression statement . END
    (105) if_state -> IF expression statement . ELSE statement END
    (106) if_state -> IF expression statement . else_if_list END
    (107) else_if_list -> . ELSEIF expression statement
    (108) else_if_list -> . ELSEIF expression statement ELSE statement
    (109) else_if_list -> . ELSEIF expression statement else_if_list

    END             shift and go to state 213
    ELSE            shift and go to state 214
    ELSEIF          shift and go to state 216

    else_if_list                   shift and go to state 215

state 152

    (93) statement -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    END             reduce using rule 93 (statement -> instrucciones .)
    ELSE            reduce using rule 93 (statement -> instrucciones .)
    ELSEIF          reduce using rule 93 (statement -> instrucciones .)
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    instruccion                    shift and go to state 51
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 153

    (110) while_state -> WHILE expression statement . END

    END             shift and go to state 217


state 154

    (111) for_state -> FOR ID IN . expression DOSP expression statement END
    (112) for_state -> FOR ID IN . expression statement END
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 218
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 155

    (52) nativas -> LOG PARIZQ ENTERO . COMA expression PARDER

    COMA            shift and go to state 219


state 156

    (53) nativas -> LOG10 PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 220
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 157

    (54) nativas -> COS PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 221
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 158

    (55) nativas -> SIN PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 222
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 159

    (56) nativas -> TAN PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 223
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 160

    (57) nativas -> SQRT PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 224
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 161

    (58) nativas -> UPPERCASE PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 225
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 162

    (59) nativas -> LOWERCASE PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 226
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 163

    (60) nativas -> TOSTRING PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 227
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 164

    (61) nativas -> TOFLOAT PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 228
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 165

    (62) nativas -> TRUNC PARIZQ INT . COMA expression PARDER

    COMA            shift and go to state 229


state 166

    (63) nativas -> TRUNC PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 230
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 167

    (64) nativas -> TYPEOF PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 231
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 168

    (65) nativas -> PARSE PARIZQ tipo . COMA expression PARDER

    COMA            shift and go to state 232


state 169

    (71) tipo -> INT .

    COMA            reduce using rule 71 (tipo -> INT .)
    PTCOMA          reduce using rule 71 (tipo -> INT .)
    PARDER          reduce using rule 71 (tipo -> INT .)
    PRINT           reduce using rule 71 (tipo -> INT .)
    PRINTLN         reduce using rule 71 (tipo -> INT .)
    LOCAL           reduce using rule 71 (tipo -> INT .)
    GLOBAL          reduce using rule 71 (tipo -> INT .)
    ID              reduce using rule 71 (tipo -> INT .)
    FUNCTION        reduce using rule 71 (tipo -> INT .)
    RETURN          reduce using rule 71 (tipo -> INT .)
    BREAK           reduce using rule 71 (tipo -> INT .)
    CONTINUE        reduce using rule 71 (tipo -> INT .)
    IF              reduce using rule 71 (tipo -> INT .)
    WHILE           reduce using rule 71 (tipo -> INT .)
    FOR             reduce using rule 71 (tipo -> INT .)
    LOG             reduce using rule 71 (tipo -> INT .)
    LOG10           reduce using rule 71 (tipo -> INT .)
    COS             reduce using rule 71 (tipo -> INT .)
    SIN             reduce using rule 71 (tipo -> INT .)
    TAN             reduce using rule 71 (tipo -> INT .)
    SQRT            reduce using rule 71 (tipo -> INT .)
    UPPERCASE       reduce using rule 71 (tipo -> INT .)
    LOWERCASE       reduce using rule 71 (tipo -> INT .)
    TOSTRING        reduce using rule 71 (tipo -> INT .)
    TOFLOAT         reduce using rule 71 (tipo -> INT .)
    TRUNC           reduce using rule 71 (tipo -> INT .)
    TYPEOF          reduce using rule 71 (tipo -> INT .)
    PARSE           reduce using rule 71 (tipo -> INT .)
    LENGTH          reduce using rule 71 (tipo -> INT .)
    PUSH            reduce using rule 71 (tipo -> INT .)
    POP             reduce using rule 71 (tipo -> INT .)
    STRUCT          reduce using rule 71 (tipo -> INT .)


state 170

    (72) tipo -> FLOAT .

    COMA            reduce using rule 72 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 72 (tipo -> FLOAT .)
    PARDER          reduce using rule 72 (tipo -> FLOAT .)
    PRINT           reduce using rule 72 (tipo -> FLOAT .)
    PRINTLN         reduce using rule 72 (tipo -> FLOAT .)
    LOCAL           reduce using rule 72 (tipo -> FLOAT .)
    GLOBAL          reduce using rule 72 (tipo -> FLOAT .)
    ID              reduce using rule 72 (tipo -> FLOAT .)
    FUNCTION        reduce using rule 72 (tipo -> FLOAT .)
    RETURN          reduce using rule 72 (tipo -> FLOAT .)
    BREAK           reduce using rule 72 (tipo -> FLOAT .)
    CONTINUE        reduce using rule 72 (tipo -> FLOAT .)
    IF              reduce using rule 72 (tipo -> FLOAT .)
    WHILE           reduce using rule 72 (tipo -> FLOAT .)
    FOR             reduce using rule 72 (tipo -> FLOAT .)
    LOG             reduce using rule 72 (tipo -> FLOAT .)
    LOG10           reduce using rule 72 (tipo -> FLOAT .)
    COS             reduce using rule 72 (tipo -> FLOAT .)
    SIN             reduce using rule 72 (tipo -> FLOAT .)
    TAN             reduce using rule 72 (tipo -> FLOAT .)
    SQRT            reduce using rule 72 (tipo -> FLOAT .)
    UPPERCASE       reduce using rule 72 (tipo -> FLOAT .)
    LOWERCASE       reduce using rule 72 (tipo -> FLOAT .)
    TOSTRING        reduce using rule 72 (tipo -> FLOAT .)
    TOFLOAT         reduce using rule 72 (tipo -> FLOAT .)
    TRUNC           reduce using rule 72 (tipo -> FLOAT .)
    TYPEOF          reduce using rule 72 (tipo -> FLOAT .)
    PARSE           reduce using rule 72 (tipo -> FLOAT .)
    LENGTH          reduce using rule 72 (tipo -> FLOAT .)
    PUSH            reduce using rule 72 (tipo -> FLOAT .)
    POP             reduce using rule 72 (tipo -> FLOAT .)
    STRUCT          reduce using rule 72 (tipo -> FLOAT .)


state 171

    (73) tipo -> BOOL .

    COMA            reduce using rule 73 (tipo -> BOOL .)
    PTCOMA          reduce using rule 73 (tipo -> BOOL .)
    PARDER          reduce using rule 73 (tipo -> BOOL .)
    PRINT           reduce using rule 73 (tipo -> BOOL .)
    PRINTLN         reduce using rule 73 (tipo -> BOOL .)
    LOCAL           reduce using rule 73 (tipo -> BOOL .)
    GLOBAL          reduce using rule 73 (tipo -> BOOL .)
    ID              reduce using rule 73 (tipo -> BOOL .)
    FUNCTION        reduce using rule 73 (tipo -> BOOL .)
    RETURN          reduce using rule 73 (tipo -> BOOL .)
    BREAK           reduce using rule 73 (tipo -> BOOL .)
    CONTINUE        reduce using rule 73 (tipo -> BOOL .)
    IF              reduce using rule 73 (tipo -> BOOL .)
    WHILE           reduce using rule 73 (tipo -> BOOL .)
    FOR             reduce using rule 73 (tipo -> BOOL .)
    LOG             reduce using rule 73 (tipo -> BOOL .)
    LOG10           reduce using rule 73 (tipo -> BOOL .)
    COS             reduce using rule 73 (tipo -> BOOL .)
    SIN             reduce using rule 73 (tipo -> BOOL .)
    TAN             reduce using rule 73 (tipo -> BOOL .)
    SQRT            reduce using rule 73 (tipo -> BOOL .)
    UPPERCASE       reduce using rule 73 (tipo -> BOOL .)
    LOWERCASE       reduce using rule 73 (tipo -> BOOL .)
    TOSTRING        reduce using rule 73 (tipo -> BOOL .)
    TOFLOAT         reduce using rule 73 (tipo -> BOOL .)
    TRUNC           reduce using rule 73 (tipo -> BOOL .)
    TYPEOF          reduce using rule 73 (tipo -> BOOL .)
    PARSE           reduce using rule 73 (tipo -> BOOL .)
    LENGTH          reduce using rule 73 (tipo -> BOOL .)
    PUSH            reduce using rule 73 (tipo -> BOOL .)
    POP             reduce using rule 73 (tipo -> BOOL .)
    STRUCT          reduce using rule 73 (tipo -> BOOL .)


state 172

    (74) tipo -> CHAR .

    COMA            reduce using rule 74 (tipo -> CHAR .)
    PTCOMA          reduce using rule 74 (tipo -> CHAR .)
    PARDER          reduce using rule 74 (tipo -> CHAR .)
    PRINT           reduce using rule 74 (tipo -> CHAR .)
    PRINTLN         reduce using rule 74 (tipo -> CHAR .)
    LOCAL           reduce using rule 74 (tipo -> CHAR .)
    GLOBAL          reduce using rule 74 (tipo -> CHAR .)
    ID              reduce using rule 74 (tipo -> CHAR .)
    FUNCTION        reduce using rule 74 (tipo -> CHAR .)
    RETURN          reduce using rule 74 (tipo -> CHAR .)
    BREAK           reduce using rule 74 (tipo -> CHAR .)
    CONTINUE        reduce using rule 74 (tipo -> CHAR .)
    IF              reduce using rule 74 (tipo -> CHAR .)
    WHILE           reduce using rule 74 (tipo -> CHAR .)
    FOR             reduce using rule 74 (tipo -> CHAR .)
    LOG             reduce using rule 74 (tipo -> CHAR .)
    LOG10           reduce using rule 74 (tipo -> CHAR .)
    COS             reduce using rule 74 (tipo -> CHAR .)
    SIN             reduce using rule 74 (tipo -> CHAR .)
    TAN             reduce using rule 74 (tipo -> CHAR .)
    SQRT            reduce using rule 74 (tipo -> CHAR .)
    UPPERCASE       reduce using rule 74 (tipo -> CHAR .)
    LOWERCASE       reduce using rule 74 (tipo -> CHAR .)
    TOSTRING        reduce using rule 74 (tipo -> CHAR .)
    TOFLOAT         reduce using rule 74 (tipo -> CHAR .)
    TRUNC           reduce using rule 74 (tipo -> CHAR .)
    TYPEOF          reduce using rule 74 (tipo -> CHAR .)
    PARSE           reduce using rule 74 (tipo -> CHAR .)
    LENGTH          reduce using rule 74 (tipo -> CHAR .)
    PUSH            reduce using rule 74 (tipo -> CHAR .)
    POP             reduce using rule 74 (tipo -> CHAR .)
    STRUCT          reduce using rule 74 (tipo -> CHAR .)


state 173

    (75) tipo -> STRING .

    COMA            reduce using rule 75 (tipo -> STRING .)
    PTCOMA          reduce using rule 75 (tipo -> STRING .)
    PARDER          reduce using rule 75 (tipo -> STRING .)
    PRINT           reduce using rule 75 (tipo -> STRING .)
    PRINTLN         reduce using rule 75 (tipo -> STRING .)
    LOCAL           reduce using rule 75 (tipo -> STRING .)
    GLOBAL          reduce using rule 75 (tipo -> STRING .)
    ID              reduce using rule 75 (tipo -> STRING .)
    FUNCTION        reduce using rule 75 (tipo -> STRING .)
    RETURN          reduce using rule 75 (tipo -> STRING .)
    BREAK           reduce using rule 75 (tipo -> STRING .)
    CONTINUE        reduce using rule 75 (tipo -> STRING .)
    IF              reduce using rule 75 (tipo -> STRING .)
    WHILE           reduce using rule 75 (tipo -> STRING .)
    FOR             reduce using rule 75 (tipo -> STRING .)
    LOG             reduce using rule 75 (tipo -> STRING .)
    LOG10           reduce using rule 75 (tipo -> STRING .)
    COS             reduce using rule 75 (tipo -> STRING .)
    SIN             reduce using rule 75 (tipo -> STRING .)
    TAN             reduce using rule 75 (tipo -> STRING .)
    SQRT            reduce using rule 75 (tipo -> STRING .)
    UPPERCASE       reduce using rule 75 (tipo -> STRING .)
    LOWERCASE       reduce using rule 75 (tipo -> STRING .)
    TOSTRING        reduce using rule 75 (tipo -> STRING .)
    TOFLOAT         reduce using rule 75 (tipo -> STRING .)
    TRUNC           reduce using rule 75 (tipo -> STRING .)
    TYPEOF          reduce using rule 75 (tipo -> STRING .)
    PARSE           reduce using rule 75 (tipo -> STRING .)
    LENGTH          reduce using rule 75 (tipo -> STRING .)
    PUSH            reduce using rule 75 (tipo -> STRING .)
    POP             reduce using rule 75 (tipo -> STRING .)
    STRUCT          reduce using rule 75 (tipo -> STRING .)


state 174

    (76) tipo -> ARRAY .

    COMA            reduce using rule 76 (tipo -> ARRAY .)
    PTCOMA          reduce using rule 76 (tipo -> ARRAY .)
    PARDER          reduce using rule 76 (tipo -> ARRAY .)
    PRINT           reduce using rule 76 (tipo -> ARRAY .)
    PRINTLN         reduce using rule 76 (tipo -> ARRAY .)
    LOCAL           reduce using rule 76 (tipo -> ARRAY .)
    GLOBAL          reduce using rule 76 (tipo -> ARRAY .)
    ID              reduce using rule 76 (tipo -> ARRAY .)
    FUNCTION        reduce using rule 76 (tipo -> ARRAY .)
    RETURN          reduce using rule 76 (tipo -> ARRAY .)
    BREAK           reduce using rule 76 (tipo -> ARRAY .)
    CONTINUE        reduce using rule 76 (tipo -> ARRAY .)
    IF              reduce using rule 76 (tipo -> ARRAY .)
    WHILE           reduce using rule 76 (tipo -> ARRAY .)
    FOR             reduce using rule 76 (tipo -> ARRAY .)
    LOG             reduce using rule 76 (tipo -> ARRAY .)
    LOG10           reduce using rule 76 (tipo -> ARRAY .)
    COS             reduce using rule 76 (tipo -> ARRAY .)
    SIN             reduce using rule 76 (tipo -> ARRAY .)
    TAN             reduce using rule 76 (tipo -> ARRAY .)
    SQRT            reduce using rule 76 (tipo -> ARRAY .)
    UPPERCASE       reduce using rule 76 (tipo -> ARRAY .)
    LOWERCASE       reduce using rule 76 (tipo -> ARRAY .)
    TOSTRING        reduce using rule 76 (tipo -> ARRAY .)
    TOFLOAT         reduce using rule 76 (tipo -> ARRAY .)
    TRUNC           reduce using rule 76 (tipo -> ARRAY .)
    TYPEOF          reduce using rule 76 (tipo -> ARRAY .)
    PARSE           reduce using rule 76 (tipo -> ARRAY .)
    LENGTH          reduce using rule 76 (tipo -> ARRAY .)
    PUSH            reduce using rule 76 (tipo -> ARRAY .)
    POP             reduce using rule 76 (tipo -> ARRAY .)
    STRUCT          reduce using rule 76 (tipo -> ARRAY .)


state 175

    (77) tipo -> NOTHING .

    COMA            reduce using rule 77 (tipo -> NOTHING .)
    PTCOMA          reduce using rule 77 (tipo -> NOTHING .)
    PARDER          reduce using rule 77 (tipo -> NOTHING .)
    PRINT           reduce using rule 77 (tipo -> NOTHING .)
    PRINTLN         reduce using rule 77 (tipo -> NOTHING .)
    LOCAL           reduce using rule 77 (tipo -> NOTHING .)
    GLOBAL          reduce using rule 77 (tipo -> NOTHING .)
    ID              reduce using rule 77 (tipo -> NOTHING .)
    FUNCTION        reduce using rule 77 (tipo -> NOTHING .)
    RETURN          reduce using rule 77 (tipo -> NOTHING .)
    BREAK           reduce using rule 77 (tipo -> NOTHING .)
    CONTINUE        reduce using rule 77 (tipo -> NOTHING .)
    IF              reduce using rule 77 (tipo -> NOTHING .)
    WHILE           reduce using rule 77 (tipo -> NOTHING .)
    FOR             reduce using rule 77 (tipo -> NOTHING .)
    LOG             reduce using rule 77 (tipo -> NOTHING .)
    LOG10           reduce using rule 77 (tipo -> NOTHING .)
    COS             reduce using rule 77 (tipo -> NOTHING .)
    SIN             reduce using rule 77 (tipo -> NOTHING .)
    TAN             reduce using rule 77 (tipo -> NOTHING .)
    SQRT            reduce using rule 77 (tipo -> NOTHING .)
    UPPERCASE       reduce using rule 77 (tipo -> NOTHING .)
    LOWERCASE       reduce using rule 77 (tipo -> NOTHING .)
    TOSTRING        reduce using rule 77 (tipo -> NOTHING .)
    TOFLOAT         reduce using rule 77 (tipo -> NOTHING .)
    TRUNC           reduce using rule 77 (tipo -> NOTHING .)
    TYPEOF          reduce using rule 77 (tipo -> NOTHING .)
    PARSE           reduce using rule 77 (tipo -> NOTHING .)
    LENGTH          reduce using rule 77 (tipo -> NOTHING .)
    PUSH            reduce using rule 77 (tipo -> NOTHING .)
    POP             reduce using rule 77 (tipo -> NOTHING .)
    STRUCT          reduce using rule 77 (tipo -> NOTHING .)


state 176

    (66) nativas -> LENGTH PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 233
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 177

    (67) nativas -> PUSH PARIZQ expression . COMA expression PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    COMA            shift and go to state 234
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 178

    (68) nativas -> POP PARIZQ expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 235
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 179

    (119) attList -> ID . DOSP DOSP tipo PTCOMA

    DOSP            shift and go to state 236


state 180

    (117) create_struct -> STRUCT ID attList . END
    (118) attList -> attList . ID DOSP DOSP tipo PTCOMA

    END             shift and go to state 238
    ID              shift and go to state 237


state 181

    (69) print_instr -> PRINT PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 69 (print_instr -> PRINT PARIZQ exp_list PARDER .)


state 182

    (89) exp_list -> exp_list COMA . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 239
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 183

    (70) println_instr -> PRINTLN PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 70 (println_instr -> PRINTLN PARIZQ exp_list PARDER .)


state 184

    (81) asignacion_instr -> LOCAL ID IGUAL expression .
    (84) definicion_asignacion_instr -> LOCAL ID IGUAL expression . DOSP DOSP tipo
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PTCOMA          reduce using rule 81 (asignacion_instr -> LOCAL ID IGUAL expression .)
    DOSP            shift and go to state 240
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 185

    (83) definicion_asignacion_instr -> ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 241


state 186

    (86) asignacion_arreglo_instr -> ID index_list IGUAL expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PTCOMA          reduce using rule 86 (asignacion_arreglo_instr -> ID index_list IGUAL expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 187

    (91) index_list -> index_list CORCHETEIZQ expression . CORCHETEDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    CORCHETEDER     shift and go to state 242
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 188

    (120) declare_struct -> ID DOSP DOSP ID .

    PTCOMA          reduce using rule 120 (declare_struct -> ID DOSP DOSP ID .)


state 189

    (88) call_function -> ID PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MAS             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MENOS           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    POR             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    DIVIDIDO        reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    POTENCIA        reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MODULO          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MAYQUE          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MENQUE          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MENIGUALQUE     reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    MAYIGUALQUE     reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    IGUALQUE        reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    NIGUALQUE       reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    OR              reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    AND             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    PRINT           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    PRINTLN         reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    LOCAL           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    GLOBAL          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    ID              reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    FUNCTION        reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    RETURN          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    BREAK           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    CONTINUE        reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    IF              reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    WHILE           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    FOR             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    LOG             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    LOG10           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    COS             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    SIN             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    TAN             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    SQRT            reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    UPPERCASE       reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    LOWERCASE       reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    TOSTRING        reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    TOFLOAT         reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    TRUNC           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    TYPEOF          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    PARSE           reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    LENGTH          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    PUSH            reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    POP             reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    STRUCT          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    PARDER          reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    COMA            reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    DOSP            reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)
    CORCHETEDER     reduce using rule 88 (call_function -> ID PARIZQ exp_list PARDER .)


state 190

    (121) assign_access -> ID PUNTO ID IGUAL . expression
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 243
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 191

    (92) index_list -> CORCHETEIZQ expression CORCHETEDER .

    IGUAL           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEIZQ     reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MAS             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MENOS           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    POR             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    DIVIDIDO        reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    POTENCIA        reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MODULO          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MAYQUE          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MENQUE          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MENIGUALQUE     reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    MAYIGUALQUE     reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    IGUALQUE        reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    NIGUALQUE       reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    OR              reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    AND             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PTCOMA          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PRINT           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PRINTLN         reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    LOCAL           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    GLOBAL          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    ID              reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    FUNCTION        reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    RETURN          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    BREAK           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    CONTINUE        reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    IF              reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    WHILE           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    FOR             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    LOG             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    LOG10           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    COS             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    SIN             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    TAN             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    SQRT            reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    UPPERCASE       reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    LOWERCASE       reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    TOSTRING        reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    TOFLOAT         reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    TRUNC           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    TYPEOF          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PARSE           reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    LENGTH          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PUSH            reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    POP             reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    STRUCT          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    PARDER          reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    COMA            reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    DOSP            reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEDER     reduce using rule 92 (index_list -> CORCHETEIZQ expression CORCHETEDER .)


state 192

    (82) asignacion_instr -> GLOBAL ID IGUAL expression .
    (85) definicion_asignacion_instr -> GLOBAL ID IGUAL expression . DOSP DOSP tipo
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PTCOMA          reduce using rule 82 (asignacion_instr -> GLOBAL ID IGUAL expression .)
    DOSP            shift and go to state 244
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 193

    (101) dec_params -> ID . DOSP DOSP tipo
    (102) dec_params -> ID . DOSP DOSP ID
    (103) dec_params -> ID .

    DOSP            shift and go to state 245
    PARDER          reduce using rule 103 (dec_params -> ID .)
    COMA            reduce using rule 103 (dec_params -> ID .)


state 194

    (94) declare_function -> FUNCTION ID PARIZQ PARDER . DOSP DOSP tipo statement END
    (97) declare_function -> FUNCTION ID PARIZQ PARDER . statement END
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    DOSP            shift and go to state 246
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 247
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 195

    (95) declare_function -> FUNCTION ID PARIZQ dec_params . PARDER DOSP DOSP tipo statement END
    (96) declare_function -> FUNCTION ID PARIZQ dec_params . PARDER statement END
    (98) dec_params -> dec_params . COMA ID DOSP DOSP tipo
    (99) dec_params -> dec_params . COMA ID DOSP DOSP ID
    (100) dec_params -> dec_params . COMA ID

    PARDER          shift and go to state 248
    COMA            shift and go to state 249


state 196

    (24) expression -> expression MAS expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 24 (expression -> expression MAS expression .)
    MENOS           reduce using rule 24 (expression -> expression MAS expression .)
    MAYQUE          reduce using rule 24 (expression -> expression MAS expression .)
    MENQUE          reduce using rule 24 (expression -> expression MAS expression .)
    MENIGUALQUE     reduce using rule 24 (expression -> expression MAS expression .)
    MAYIGUALQUE     reduce using rule 24 (expression -> expression MAS expression .)
    IGUALQUE        reduce using rule 24 (expression -> expression MAS expression .)
    NIGUALQUE       reduce using rule 24 (expression -> expression MAS expression .)
    OR              reduce using rule 24 (expression -> expression MAS expression .)
    AND             reduce using rule 24 (expression -> expression MAS expression .)
    PTCOMA          reduce using rule 24 (expression -> expression MAS expression .)
    PRINT           reduce using rule 24 (expression -> expression MAS expression .)
    PRINTLN         reduce using rule 24 (expression -> expression MAS expression .)
    LOCAL           reduce using rule 24 (expression -> expression MAS expression .)
    GLOBAL          reduce using rule 24 (expression -> expression MAS expression .)
    ID              reduce using rule 24 (expression -> expression MAS expression .)
    FUNCTION        reduce using rule 24 (expression -> expression MAS expression .)
    RETURN          reduce using rule 24 (expression -> expression MAS expression .)
    BREAK           reduce using rule 24 (expression -> expression MAS expression .)
    CONTINUE        reduce using rule 24 (expression -> expression MAS expression .)
    IF              reduce using rule 24 (expression -> expression MAS expression .)
    WHILE           reduce using rule 24 (expression -> expression MAS expression .)
    FOR             reduce using rule 24 (expression -> expression MAS expression .)
    LOG             reduce using rule 24 (expression -> expression MAS expression .)
    LOG10           reduce using rule 24 (expression -> expression MAS expression .)
    COS             reduce using rule 24 (expression -> expression MAS expression .)
    SIN             reduce using rule 24 (expression -> expression MAS expression .)
    TAN             reduce using rule 24 (expression -> expression MAS expression .)
    SQRT            reduce using rule 24 (expression -> expression MAS expression .)
    UPPERCASE       reduce using rule 24 (expression -> expression MAS expression .)
    LOWERCASE       reduce using rule 24 (expression -> expression MAS expression .)
    TOSTRING        reduce using rule 24 (expression -> expression MAS expression .)
    TOFLOAT         reduce using rule 24 (expression -> expression MAS expression .)
    TRUNC           reduce using rule 24 (expression -> expression MAS expression .)
    TYPEOF          reduce using rule 24 (expression -> expression MAS expression .)
    PARSE           reduce using rule 24 (expression -> expression MAS expression .)
    LENGTH          reduce using rule 24 (expression -> expression MAS expression .)
    PUSH            reduce using rule 24 (expression -> expression MAS expression .)
    POP             reduce using rule 24 (expression -> expression MAS expression .)
    STRUCT          reduce using rule 24 (expression -> expression MAS expression .)
    PARDER          reduce using rule 24 (expression -> expression MAS expression .)
    COMA            reduce using rule 24 (expression -> expression MAS expression .)
    DOSP            reduce using rule 24 (expression -> expression MAS expression .)
    CORCHETEDER     reduce using rule 24 (expression -> expression MAS expression .)
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136

  ! POR             [ reduce using rule 24 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expression -> expression MAS expression .) ]
  ! POTENCIA        [ reduce using rule 24 (expression -> expression MAS expression .) ]
  ! MODULO          [ reduce using rule 24 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 197

    (25) expression -> expression MENOS expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 25 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 25 (expression -> expression MENOS expression .)
    MAYQUE          reduce using rule 25 (expression -> expression MENOS expression .)
    MENQUE          reduce using rule 25 (expression -> expression MENOS expression .)
    MENIGUALQUE     reduce using rule 25 (expression -> expression MENOS expression .)
    MAYIGUALQUE     reduce using rule 25 (expression -> expression MENOS expression .)
    IGUALQUE        reduce using rule 25 (expression -> expression MENOS expression .)
    NIGUALQUE       reduce using rule 25 (expression -> expression MENOS expression .)
    OR              reduce using rule 25 (expression -> expression MENOS expression .)
    AND             reduce using rule 25 (expression -> expression MENOS expression .)
    PTCOMA          reduce using rule 25 (expression -> expression MENOS expression .)
    PRINT           reduce using rule 25 (expression -> expression MENOS expression .)
    PRINTLN         reduce using rule 25 (expression -> expression MENOS expression .)
    LOCAL           reduce using rule 25 (expression -> expression MENOS expression .)
    GLOBAL          reduce using rule 25 (expression -> expression MENOS expression .)
    ID              reduce using rule 25 (expression -> expression MENOS expression .)
    FUNCTION        reduce using rule 25 (expression -> expression MENOS expression .)
    RETURN          reduce using rule 25 (expression -> expression MENOS expression .)
    BREAK           reduce using rule 25 (expression -> expression MENOS expression .)
    CONTINUE        reduce using rule 25 (expression -> expression MENOS expression .)
    IF              reduce using rule 25 (expression -> expression MENOS expression .)
    WHILE           reduce using rule 25 (expression -> expression MENOS expression .)
    FOR             reduce using rule 25 (expression -> expression MENOS expression .)
    LOG             reduce using rule 25 (expression -> expression MENOS expression .)
    LOG10           reduce using rule 25 (expression -> expression MENOS expression .)
    COS             reduce using rule 25 (expression -> expression MENOS expression .)
    SIN             reduce using rule 25 (expression -> expression MENOS expression .)
    TAN             reduce using rule 25 (expression -> expression MENOS expression .)
    SQRT            reduce using rule 25 (expression -> expression MENOS expression .)
    UPPERCASE       reduce using rule 25 (expression -> expression MENOS expression .)
    LOWERCASE       reduce using rule 25 (expression -> expression MENOS expression .)
    TOSTRING        reduce using rule 25 (expression -> expression MENOS expression .)
    TOFLOAT         reduce using rule 25 (expression -> expression MENOS expression .)
    TRUNC           reduce using rule 25 (expression -> expression MENOS expression .)
    TYPEOF          reduce using rule 25 (expression -> expression MENOS expression .)
    PARSE           reduce using rule 25 (expression -> expression MENOS expression .)
    LENGTH          reduce using rule 25 (expression -> expression MENOS expression .)
    PUSH            reduce using rule 25 (expression -> expression MENOS expression .)
    POP             reduce using rule 25 (expression -> expression MENOS expression .)
    STRUCT          reduce using rule 25 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 25 (expression -> expression MENOS expression .)
    COMA            reduce using rule 25 (expression -> expression MENOS expression .)
    DOSP            reduce using rule 25 (expression -> expression MENOS expression .)
    CORCHETEDER     reduce using rule 25 (expression -> expression MENOS expression .)
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136

  ! POR             [ reduce using rule 25 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expression -> expression MENOS expression .) ]
  ! POTENCIA        [ reduce using rule 25 (expression -> expression MENOS expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 198

    (26) expression -> expression POR expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 26 (expression -> expression POR expression .)
    MENOS           reduce using rule 26 (expression -> expression POR expression .)
    POR             reduce using rule 26 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 26 (expression -> expression POR expression .)
    MODULO          reduce using rule 26 (expression -> expression POR expression .)
    MAYQUE          reduce using rule 26 (expression -> expression POR expression .)
    MENQUE          reduce using rule 26 (expression -> expression POR expression .)
    MENIGUALQUE     reduce using rule 26 (expression -> expression POR expression .)
    MAYIGUALQUE     reduce using rule 26 (expression -> expression POR expression .)
    IGUALQUE        reduce using rule 26 (expression -> expression POR expression .)
    NIGUALQUE       reduce using rule 26 (expression -> expression POR expression .)
    OR              reduce using rule 26 (expression -> expression POR expression .)
    AND             reduce using rule 26 (expression -> expression POR expression .)
    PTCOMA          reduce using rule 26 (expression -> expression POR expression .)
    PRINT           reduce using rule 26 (expression -> expression POR expression .)
    PRINTLN         reduce using rule 26 (expression -> expression POR expression .)
    LOCAL           reduce using rule 26 (expression -> expression POR expression .)
    GLOBAL          reduce using rule 26 (expression -> expression POR expression .)
    ID              reduce using rule 26 (expression -> expression POR expression .)
    FUNCTION        reduce using rule 26 (expression -> expression POR expression .)
    RETURN          reduce using rule 26 (expression -> expression POR expression .)
    BREAK           reduce using rule 26 (expression -> expression POR expression .)
    CONTINUE        reduce using rule 26 (expression -> expression POR expression .)
    IF              reduce using rule 26 (expression -> expression POR expression .)
    WHILE           reduce using rule 26 (expression -> expression POR expression .)
    FOR             reduce using rule 26 (expression -> expression POR expression .)
    LOG             reduce using rule 26 (expression -> expression POR expression .)
    LOG10           reduce using rule 26 (expression -> expression POR expression .)
    COS             reduce using rule 26 (expression -> expression POR expression .)
    SIN             reduce using rule 26 (expression -> expression POR expression .)
    TAN             reduce using rule 26 (expression -> expression POR expression .)
    SQRT            reduce using rule 26 (expression -> expression POR expression .)
    UPPERCASE       reduce using rule 26 (expression -> expression POR expression .)
    LOWERCASE       reduce using rule 26 (expression -> expression POR expression .)
    TOSTRING        reduce using rule 26 (expression -> expression POR expression .)
    TOFLOAT         reduce using rule 26 (expression -> expression POR expression .)
    TRUNC           reduce using rule 26 (expression -> expression POR expression .)
    TYPEOF          reduce using rule 26 (expression -> expression POR expression .)
    PARSE           reduce using rule 26 (expression -> expression POR expression .)
    LENGTH          reduce using rule 26 (expression -> expression POR expression .)
    PUSH            reduce using rule 26 (expression -> expression POR expression .)
    POP             reduce using rule 26 (expression -> expression POR expression .)
    STRUCT          reduce using rule 26 (expression -> expression POR expression .)
    PARDER          reduce using rule 26 (expression -> expression POR expression .)
    COMA            reduce using rule 26 (expression -> expression POR expression .)
    DOSP            reduce using rule 26 (expression -> expression POR expression .)
    CORCHETEDER     reduce using rule 26 (expression -> expression POR expression .)
    POTENCIA        shift and go to state 135

  ! POTENCIA        [ reduce using rule 26 (expression -> expression POR expression .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! MODULO          [ shift and go to state 136 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 199

    (27) expression -> expression DIVIDIDO expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    MODULO          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    MAYQUE          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    MENQUE          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    MENIGUALQUE     reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    MAYIGUALQUE     reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    IGUALQUE        reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    NIGUALQUE       reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    PTCOMA          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    PRINT           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    PRINTLN         reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    LOCAL           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    GLOBAL          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    ID              reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    FUNCTION        reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    RETURN          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    BREAK           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    CONTINUE        reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    IF              reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    WHILE           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    FOR             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    LOG             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    LOG10           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    COS             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    SIN             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    TAN             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    SQRT            reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    UPPERCASE       reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    LOWERCASE       reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    TOSTRING        reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    TOFLOAT         reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    TRUNC           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    TYPEOF          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    PARSE           reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    LENGTH          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    PUSH            reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    POP             reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    STRUCT          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    DOSP            reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    CORCHETEDER     reduce using rule 27 (expression -> expression DIVIDIDO expression .)
    POTENCIA        shift and go to state 135

  ! POTENCIA        [ reduce using rule 27 (expression -> expression DIVIDIDO expression .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! MODULO          [ shift and go to state 136 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 200

    (28) expression -> expression POTENCIA expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 28 (expression -> expression POTENCIA expression .)
    MENOS           reduce using rule 28 (expression -> expression POTENCIA expression .)
    POR             reduce using rule 28 (expression -> expression POTENCIA expression .)
    DIVIDIDO        reduce using rule 28 (expression -> expression POTENCIA expression .)
    POTENCIA        reduce using rule 28 (expression -> expression POTENCIA expression .)
    MODULO          reduce using rule 28 (expression -> expression POTENCIA expression .)
    MAYQUE          reduce using rule 28 (expression -> expression POTENCIA expression .)
    MENQUE          reduce using rule 28 (expression -> expression POTENCIA expression .)
    MENIGUALQUE     reduce using rule 28 (expression -> expression POTENCIA expression .)
    MAYIGUALQUE     reduce using rule 28 (expression -> expression POTENCIA expression .)
    IGUALQUE        reduce using rule 28 (expression -> expression POTENCIA expression .)
    NIGUALQUE       reduce using rule 28 (expression -> expression POTENCIA expression .)
    OR              reduce using rule 28 (expression -> expression POTENCIA expression .)
    AND             reduce using rule 28 (expression -> expression POTENCIA expression .)
    PTCOMA          reduce using rule 28 (expression -> expression POTENCIA expression .)
    PRINT           reduce using rule 28 (expression -> expression POTENCIA expression .)
    PRINTLN         reduce using rule 28 (expression -> expression POTENCIA expression .)
    LOCAL           reduce using rule 28 (expression -> expression POTENCIA expression .)
    GLOBAL          reduce using rule 28 (expression -> expression POTENCIA expression .)
    ID              reduce using rule 28 (expression -> expression POTENCIA expression .)
    FUNCTION        reduce using rule 28 (expression -> expression POTENCIA expression .)
    RETURN          reduce using rule 28 (expression -> expression POTENCIA expression .)
    BREAK           reduce using rule 28 (expression -> expression POTENCIA expression .)
    CONTINUE        reduce using rule 28 (expression -> expression POTENCIA expression .)
    IF              reduce using rule 28 (expression -> expression POTENCIA expression .)
    WHILE           reduce using rule 28 (expression -> expression POTENCIA expression .)
    FOR             reduce using rule 28 (expression -> expression POTENCIA expression .)
    LOG             reduce using rule 28 (expression -> expression POTENCIA expression .)
    LOG10           reduce using rule 28 (expression -> expression POTENCIA expression .)
    COS             reduce using rule 28 (expression -> expression POTENCIA expression .)
    SIN             reduce using rule 28 (expression -> expression POTENCIA expression .)
    TAN             reduce using rule 28 (expression -> expression POTENCIA expression .)
    SQRT            reduce using rule 28 (expression -> expression POTENCIA expression .)
    UPPERCASE       reduce using rule 28 (expression -> expression POTENCIA expression .)
    LOWERCASE       reduce using rule 28 (expression -> expression POTENCIA expression .)
    TOSTRING        reduce using rule 28 (expression -> expression POTENCIA expression .)
    TOFLOAT         reduce using rule 28 (expression -> expression POTENCIA expression .)
    TRUNC           reduce using rule 28 (expression -> expression POTENCIA expression .)
    TYPEOF          reduce using rule 28 (expression -> expression POTENCIA expression .)
    PARSE           reduce using rule 28 (expression -> expression POTENCIA expression .)
    LENGTH          reduce using rule 28 (expression -> expression POTENCIA expression .)
    PUSH            reduce using rule 28 (expression -> expression POTENCIA expression .)
    POP             reduce using rule 28 (expression -> expression POTENCIA expression .)
    STRUCT          reduce using rule 28 (expression -> expression POTENCIA expression .)
    PARDER          reduce using rule 28 (expression -> expression POTENCIA expression .)
    COMA            reduce using rule 28 (expression -> expression POTENCIA expression .)
    DOSP            reduce using rule 28 (expression -> expression POTENCIA expression .)
    CORCHETEDER     reduce using rule 28 (expression -> expression POTENCIA expression .)

  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! POTENCIA        [ shift and go to state 135 ]
  ! MODULO          [ shift and go to state 136 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 201

    (29) expression -> expression MODULO expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAS             reduce using rule 29 (expression -> expression MODULO expression .)
    MENOS           reduce using rule 29 (expression -> expression MODULO expression .)
    POR             reduce using rule 29 (expression -> expression MODULO expression .)
    DIVIDIDO        reduce using rule 29 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 29 (expression -> expression MODULO expression .)
    MAYQUE          reduce using rule 29 (expression -> expression MODULO expression .)
    MENQUE          reduce using rule 29 (expression -> expression MODULO expression .)
    MENIGUALQUE     reduce using rule 29 (expression -> expression MODULO expression .)
    MAYIGUALQUE     reduce using rule 29 (expression -> expression MODULO expression .)
    IGUALQUE        reduce using rule 29 (expression -> expression MODULO expression .)
    NIGUALQUE       reduce using rule 29 (expression -> expression MODULO expression .)
    OR              reduce using rule 29 (expression -> expression MODULO expression .)
    AND             reduce using rule 29 (expression -> expression MODULO expression .)
    PTCOMA          reduce using rule 29 (expression -> expression MODULO expression .)
    PRINT           reduce using rule 29 (expression -> expression MODULO expression .)
    PRINTLN         reduce using rule 29 (expression -> expression MODULO expression .)
    LOCAL           reduce using rule 29 (expression -> expression MODULO expression .)
    GLOBAL          reduce using rule 29 (expression -> expression MODULO expression .)
    ID              reduce using rule 29 (expression -> expression MODULO expression .)
    FUNCTION        reduce using rule 29 (expression -> expression MODULO expression .)
    RETURN          reduce using rule 29 (expression -> expression MODULO expression .)
    BREAK           reduce using rule 29 (expression -> expression MODULO expression .)
    CONTINUE        reduce using rule 29 (expression -> expression MODULO expression .)
    IF              reduce using rule 29 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 29 (expression -> expression MODULO expression .)
    FOR             reduce using rule 29 (expression -> expression MODULO expression .)
    LOG             reduce using rule 29 (expression -> expression MODULO expression .)
    LOG10           reduce using rule 29 (expression -> expression MODULO expression .)
    COS             reduce using rule 29 (expression -> expression MODULO expression .)
    SIN             reduce using rule 29 (expression -> expression MODULO expression .)
    TAN             reduce using rule 29 (expression -> expression MODULO expression .)
    SQRT            reduce using rule 29 (expression -> expression MODULO expression .)
    UPPERCASE       reduce using rule 29 (expression -> expression MODULO expression .)
    LOWERCASE       reduce using rule 29 (expression -> expression MODULO expression .)
    TOSTRING        reduce using rule 29 (expression -> expression MODULO expression .)
    TOFLOAT         reduce using rule 29 (expression -> expression MODULO expression .)
    TRUNC           reduce using rule 29 (expression -> expression MODULO expression .)
    TYPEOF          reduce using rule 29 (expression -> expression MODULO expression .)
    PARSE           reduce using rule 29 (expression -> expression MODULO expression .)
    LENGTH          reduce using rule 29 (expression -> expression MODULO expression .)
    PUSH            reduce using rule 29 (expression -> expression MODULO expression .)
    POP             reduce using rule 29 (expression -> expression MODULO expression .)
    STRUCT          reduce using rule 29 (expression -> expression MODULO expression .)
    PARDER          reduce using rule 29 (expression -> expression MODULO expression .)
    COMA            reduce using rule 29 (expression -> expression MODULO expression .)
    DOSP            reduce using rule 29 (expression -> expression MODULO expression .)
    CORCHETEDER     reduce using rule 29 (expression -> expression MODULO expression .)
    POTENCIA        shift and go to state 135

  ! POTENCIA        [ reduce using rule 29 (expression -> expression MODULO expression .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! MODULO          [ shift and go to state 136 ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 202

    (30) expression -> expression MAYQUE expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAYQUE          reduce using rule 30 (expression -> expression MAYQUE expression .)
    MENQUE          reduce using rule 30 (expression -> expression MAYQUE expression .)
    MENIGUALQUE     reduce using rule 30 (expression -> expression MAYQUE expression .)
    MAYIGUALQUE     reduce using rule 30 (expression -> expression MAYQUE expression .)
    IGUALQUE        reduce using rule 30 (expression -> expression MAYQUE expression .)
    NIGUALQUE       reduce using rule 30 (expression -> expression MAYQUE expression .)
    OR              reduce using rule 30 (expression -> expression MAYQUE expression .)
    AND             reduce using rule 30 (expression -> expression MAYQUE expression .)
    PTCOMA          reduce using rule 30 (expression -> expression MAYQUE expression .)
    PRINT           reduce using rule 30 (expression -> expression MAYQUE expression .)
    PRINTLN         reduce using rule 30 (expression -> expression MAYQUE expression .)
    LOCAL           reduce using rule 30 (expression -> expression MAYQUE expression .)
    GLOBAL          reduce using rule 30 (expression -> expression MAYQUE expression .)
    ID              reduce using rule 30 (expression -> expression MAYQUE expression .)
    FUNCTION        reduce using rule 30 (expression -> expression MAYQUE expression .)
    RETURN          reduce using rule 30 (expression -> expression MAYQUE expression .)
    BREAK           reduce using rule 30 (expression -> expression MAYQUE expression .)
    CONTINUE        reduce using rule 30 (expression -> expression MAYQUE expression .)
    IF              reduce using rule 30 (expression -> expression MAYQUE expression .)
    WHILE           reduce using rule 30 (expression -> expression MAYQUE expression .)
    FOR             reduce using rule 30 (expression -> expression MAYQUE expression .)
    LOG             reduce using rule 30 (expression -> expression MAYQUE expression .)
    LOG10           reduce using rule 30 (expression -> expression MAYQUE expression .)
    COS             reduce using rule 30 (expression -> expression MAYQUE expression .)
    SIN             reduce using rule 30 (expression -> expression MAYQUE expression .)
    TAN             reduce using rule 30 (expression -> expression MAYQUE expression .)
    SQRT            reduce using rule 30 (expression -> expression MAYQUE expression .)
    UPPERCASE       reduce using rule 30 (expression -> expression MAYQUE expression .)
    LOWERCASE       reduce using rule 30 (expression -> expression MAYQUE expression .)
    TOSTRING        reduce using rule 30 (expression -> expression MAYQUE expression .)
    TOFLOAT         reduce using rule 30 (expression -> expression MAYQUE expression .)
    TRUNC           reduce using rule 30 (expression -> expression MAYQUE expression .)
    TYPEOF          reduce using rule 30 (expression -> expression MAYQUE expression .)
    PARSE           reduce using rule 30 (expression -> expression MAYQUE expression .)
    LENGTH          reduce using rule 30 (expression -> expression MAYQUE expression .)
    PUSH            reduce using rule 30 (expression -> expression MAYQUE expression .)
    POP             reduce using rule 30 (expression -> expression MAYQUE expression .)
    STRUCT          reduce using rule 30 (expression -> expression MAYQUE expression .)
    PARDER          reduce using rule 30 (expression -> expression MAYQUE expression .)
    COMA            reduce using rule 30 (expression -> expression MAYQUE expression .)
    DOSP            reduce using rule 30 (expression -> expression MAYQUE expression .)
    CORCHETEDER     reduce using rule 30 (expression -> expression MAYQUE expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136

  ! MAS             [ reduce using rule 30 (expression -> expression MAYQUE expression .) ]
  ! MENOS           [ reduce using rule 30 (expression -> expression MAYQUE expression .) ]
  ! POR             [ reduce using rule 30 (expression -> expression MAYQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 30 (expression -> expression MAYQUE expression .) ]
  ! POTENCIA        [ reduce using rule 30 (expression -> expression MAYQUE expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression MAYQUE expression .) ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 203

    (31) expression -> expression MENQUE expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAYQUE          reduce using rule 31 (expression -> expression MENQUE expression .)
    MENQUE          reduce using rule 31 (expression -> expression MENQUE expression .)
    MENIGUALQUE     reduce using rule 31 (expression -> expression MENQUE expression .)
    MAYIGUALQUE     reduce using rule 31 (expression -> expression MENQUE expression .)
    IGUALQUE        reduce using rule 31 (expression -> expression MENQUE expression .)
    NIGUALQUE       reduce using rule 31 (expression -> expression MENQUE expression .)
    OR              reduce using rule 31 (expression -> expression MENQUE expression .)
    AND             reduce using rule 31 (expression -> expression MENQUE expression .)
    PTCOMA          reduce using rule 31 (expression -> expression MENQUE expression .)
    PRINT           reduce using rule 31 (expression -> expression MENQUE expression .)
    PRINTLN         reduce using rule 31 (expression -> expression MENQUE expression .)
    LOCAL           reduce using rule 31 (expression -> expression MENQUE expression .)
    GLOBAL          reduce using rule 31 (expression -> expression MENQUE expression .)
    ID              reduce using rule 31 (expression -> expression MENQUE expression .)
    FUNCTION        reduce using rule 31 (expression -> expression MENQUE expression .)
    RETURN          reduce using rule 31 (expression -> expression MENQUE expression .)
    BREAK           reduce using rule 31 (expression -> expression MENQUE expression .)
    CONTINUE        reduce using rule 31 (expression -> expression MENQUE expression .)
    IF              reduce using rule 31 (expression -> expression MENQUE expression .)
    WHILE           reduce using rule 31 (expression -> expression MENQUE expression .)
    FOR             reduce using rule 31 (expression -> expression MENQUE expression .)
    LOG             reduce using rule 31 (expression -> expression MENQUE expression .)
    LOG10           reduce using rule 31 (expression -> expression MENQUE expression .)
    COS             reduce using rule 31 (expression -> expression MENQUE expression .)
    SIN             reduce using rule 31 (expression -> expression MENQUE expression .)
    TAN             reduce using rule 31 (expression -> expression MENQUE expression .)
    SQRT            reduce using rule 31 (expression -> expression MENQUE expression .)
    UPPERCASE       reduce using rule 31 (expression -> expression MENQUE expression .)
    LOWERCASE       reduce using rule 31 (expression -> expression MENQUE expression .)
    TOSTRING        reduce using rule 31 (expression -> expression MENQUE expression .)
    TOFLOAT         reduce using rule 31 (expression -> expression MENQUE expression .)
    TRUNC           reduce using rule 31 (expression -> expression MENQUE expression .)
    TYPEOF          reduce using rule 31 (expression -> expression MENQUE expression .)
    PARSE           reduce using rule 31 (expression -> expression MENQUE expression .)
    LENGTH          reduce using rule 31 (expression -> expression MENQUE expression .)
    PUSH            reduce using rule 31 (expression -> expression MENQUE expression .)
    POP             reduce using rule 31 (expression -> expression MENQUE expression .)
    STRUCT          reduce using rule 31 (expression -> expression MENQUE expression .)
    PARDER          reduce using rule 31 (expression -> expression MENQUE expression .)
    COMA            reduce using rule 31 (expression -> expression MENQUE expression .)
    DOSP            reduce using rule 31 (expression -> expression MENQUE expression .)
    CORCHETEDER     reduce using rule 31 (expression -> expression MENQUE expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136

  ! MAS             [ reduce using rule 31 (expression -> expression MENQUE expression .) ]
  ! MENOS           [ reduce using rule 31 (expression -> expression MENQUE expression .) ]
  ! POR             [ reduce using rule 31 (expression -> expression MENQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expression -> expression MENQUE expression .) ]
  ! POTENCIA        [ reduce using rule 31 (expression -> expression MENQUE expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression MENQUE expression .) ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 204

    (32) expression -> expression MENIGUALQUE expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAYQUE          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    MENQUE          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    IGUALQUE        reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    NIGUALQUE       reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    OR              reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    AND             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    PTCOMA          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    PRINT           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    PRINTLN         reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    LOCAL           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    GLOBAL          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    ID              reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    FUNCTION        reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    RETURN          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    BREAK           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    CONTINUE        reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    IF              reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    WHILE           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    FOR             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    LOG             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    LOG10           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    COS             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    SIN             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    TAN             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    SQRT            reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    UPPERCASE       reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    LOWERCASE       reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    TOSTRING        reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    TOFLOAT         reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    TRUNC           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    TYPEOF          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    PARSE           reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    LENGTH          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    PUSH            reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    POP             reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    STRUCT          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    PARDER          reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    COMA            reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    DOSP            reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    CORCHETEDER     reduce using rule 32 (expression -> expression MENIGUALQUE expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136

  ! MAS             [ reduce using rule 32 (expression -> expression MENIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 32 (expression -> expression MENIGUALQUE expression .) ]
  ! POR             [ reduce using rule 32 (expression -> expression MENIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 32 (expression -> expression MENIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 32 (expression -> expression MENIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 32 (expression -> expression MENIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 205

    (33) expression -> expression MAYIGUALQUE expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    MAYQUE          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    MENQUE          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    IGUALQUE        reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    NIGUALQUE       reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    OR              reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    AND             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    PTCOMA          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    PRINT           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    PRINTLN         reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    LOCAL           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    GLOBAL          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    ID              reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    FUNCTION        reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    RETURN          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    BREAK           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    CONTINUE        reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    IF              reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    WHILE           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    FOR             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    LOG             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    LOG10           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    COS             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    SIN             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    TAN             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    SQRT            reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    UPPERCASE       reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    LOWERCASE       reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    TOSTRING        reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    TOFLOAT         reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    TRUNC           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    TYPEOF          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    PARSE           reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    LENGTH          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    PUSH            reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    POP             reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    STRUCT          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    PARDER          reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    COMA            reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    DOSP            reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    CORCHETEDER     reduce using rule 33 (expression -> expression MAYIGUALQUE expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136

  ! MAS             [ reduce using rule 33 (expression -> expression MAYIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 33 (expression -> expression MAYIGUALQUE expression .) ]
  ! POR             [ reduce using rule 33 (expression -> expression MAYIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expression -> expression MAYIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 33 (expression -> expression MAYIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 33 (expression -> expression MAYIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 137 ]
  ! MENQUE          [ shift and go to state 138 ]
  ! MENIGUALQUE     [ shift and go to state 139 ]
  ! MAYIGUALQUE     [ shift and go to state 140 ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 206

    (34) expression -> expression IGUALQUE expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    IGUALQUE        reduce using rule 34 (expression -> expression IGUALQUE expression .)
    NIGUALQUE       reduce using rule 34 (expression -> expression IGUALQUE expression .)
    OR              reduce using rule 34 (expression -> expression IGUALQUE expression .)
    AND             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    PTCOMA          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    PRINT           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    PRINTLN         reduce using rule 34 (expression -> expression IGUALQUE expression .)
    LOCAL           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    GLOBAL          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    ID              reduce using rule 34 (expression -> expression IGUALQUE expression .)
    FUNCTION        reduce using rule 34 (expression -> expression IGUALQUE expression .)
    RETURN          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    BREAK           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    CONTINUE        reduce using rule 34 (expression -> expression IGUALQUE expression .)
    IF              reduce using rule 34 (expression -> expression IGUALQUE expression .)
    WHILE           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    FOR             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    LOG             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    LOG10           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    COS             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    SIN             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    TAN             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    SQRT            reduce using rule 34 (expression -> expression IGUALQUE expression .)
    UPPERCASE       reduce using rule 34 (expression -> expression IGUALQUE expression .)
    LOWERCASE       reduce using rule 34 (expression -> expression IGUALQUE expression .)
    TOSTRING        reduce using rule 34 (expression -> expression IGUALQUE expression .)
    TOFLOAT         reduce using rule 34 (expression -> expression IGUALQUE expression .)
    TRUNC           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    TYPEOF          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    PARSE           reduce using rule 34 (expression -> expression IGUALQUE expression .)
    LENGTH          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    PUSH            reduce using rule 34 (expression -> expression IGUALQUE expression .)
    POP             reduce using rule 34 (expression -> expression IGUALQUE expression .)
    STRUCT          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    PARDER          reduce using rule 34 (expression -> expression IGUALQUE expression .)
    COMA            reduce using rule 34 (expression -> expression IGUALQUE expression .)
    DOSP            reduce using rule 34 (expression -> expression IGUALQUE expression .)
    CORCHETEDER     reduce using rule 34 (expression -> expression IGUALQUE expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140

  ! MAS             [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! POR             [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 34 (expression -> expression IGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 207

    (35) expression -> expression NIGUALQUE expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    IGUALQUE        reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    NIGUALQUE       reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    OR              reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    AND             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    PTCOMA          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    PRINT           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    PRINTLN         reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    LOCAL           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    GLOBAL          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    ID              reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    FUNCTION        reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    RETURN          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    BREAK           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    CONTINUE        reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    IF              reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    WHILE           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    FOR             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    LOG             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    LOG10           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    COS             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    SIN             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    TAN             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    SQRT            reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    UPPERCASE       reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    LOWERCASE       reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    TOSTRING        reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    TOFLOAT         reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    TRUNC           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    TYPEOF          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    PARSE           reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    LENGTH          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    PUSH            reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    POP             reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    STRUCT          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    PARDER          reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    COMA            reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    DOSP            reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    CORCHETEDER     reduce using rule 35 (expression -> expression NIGUALQUE expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140

  ! MAS             [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! POR             [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 35 (expression -> expression NIGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 141 ]
  ! NIGUALQUE       [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 208

    (36) expression -> expression OR expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    OR              reduce using rule 36 (expression -> expression OR expression .)
    PTCOMA          reduce using rule 36 (expression -> expression OR expression .)
    PRINT           reduce using rule 36 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 36 (expression -> expression OR expression .)
    LOCAL           reduce using rule 36 (expression -> expression OR expression .)
    GLOBAL          reduce using rule 36 (expression -> expression OR expression .)
    ID              reduce using rule 36 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 36 (expression -> expression OR expression .)
    RETURN          reduce using rule 36 (expression -> expression OR expression .)
    BREAK           reduce using rule 36 (expression -> expression OR expression .)
    CONTINUE        reduce using rule 36 (expression -> expression OR expression .)
    IF              reduce using rule 36 (expression -> expression OR expression .)
    WHILE           reduce using rule 36 (expression -> expression OR expression .)
    FOR             reduce using rule 36 (expression -> expression OR expression .)
    LOG             reduce using rule 36 (expression -> expression OR expression .)
    LOG10           reduce using rule 36 (expression -> expression OR expression .)
    COS             reduce using rule 36 (expression -> expression OR expression .)
    SIN             reduce using rule 36 (expression -> expression OR expression .)
    TAN             reduce using rule 36 (expression -> expression OR expression .)
    SQRT            reduce using rule 36 (expression -> expression OR expression .)
    UPPERCASE       reduce using rule 36 (expression -> expression OR expression .)
    LOWERCASE       reduce using rule 36 (expression -> expression OR expression .)
    TOSTRING        reduce using rule 36 (expression -> expression OR expression .)
    TOFLOAT         reduce using rule 36 (expression -> expression OR expression .)
    TRUNC           reduce using rule 36 (expression -> expression OR expression .)
    TYPEOF          reduce using rule 36 (expression -> expression OR expression .)
    PARSE           reduce using rule 36 (expression -> expression OR expression .)
    LENGTH          reduce using rule 36 (expression -> expression OR expression .)
    PUSH            reduce using rule 36 (expression -> expression OR expression .)
    POP             reduce using rule 36 (expression -> expression OR expression .)
    STRUCT          reduce using rule 36 (expression -> expression OR expression .)
    PARDER          reduce using rule 36 (expression -> expression OR expression .)
    COMA            reduce using rule 36 (expression -> expression OR expression .)
    DOSP            reduce using rule 36 (expression -> expression OR expression .)
    CORCHETEDER     reduce using rule 36 (expression -> expression OR expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    AND             shift and go to state 144

  ! MAS             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! POTENCIA        [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MAYQUE          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MENQUE          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MENIGUALQUE     [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! IGUALQUE        [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! NIGUALQUE       [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 143 ]


state 209

    (37) expression -> expression AND expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    OR              reduce using rule 37 (expression -> expression AND expression .)
    AND             reduce using rule 37 (expression -> expression AND expression .)
    PTCOMA          reduce using rule 37 (expression -> expression AND expression .)
    PRINT           reduce using rule 37 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 37 (expression -> expression AND expression .)
    LOCAL           reduce using rule 37 (expression -> expression AND expression .)
    GLOBAL          reduce using rule 37 (expression -> expression AND expression .)
    ID              reduce using rule 37 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 37 (expression -> expression AND expression .)
    RETURN          reduce using rule 37 (expression -> expression AND expression .)
    BREAK           reduce using rule 37 (expression -> expression AND expression .)
    CONTINUE        reduce using rule 37 (expression -> expression AND expression .)
    IF              reduce using rule 37 (expression -> expression AND expression .)
    WHILE           reduce using rule 37 (expression -> expression AND expression .)
    FOR             reduce using rule 37 (expression -> expression AND expression .)
    LOG             reduce using rule 37 (expression -> expression AND expression .)
    LOG10           reduce using rule 37 (expression -> expression AND expression .)
    COS             reduce using rule 37 (expression -> expression AND expression .)
    SIN             reduce using rule 37 (expression -> expression AND expression .)
    TAN             reduce using rule 37 (expression -> expression AND expression .)
    SQRT            reduce using rule 37 (expression -> expression AND expression .)
    UPPERCASE       reduce using rule 37 (expression -> expression AND expression .)
    LOWERCASE       reduce using rule 37 (expression -> expression AND expression .)
    TOSTRING        reduce using rule 37 (expression -> expression AND expression .)
    TOFLOAT         reduce using rule 37 (expression -> expression AND expression .)
    TRUNC           reduce using rule 37 (expression -> expression AND expression .)
    TYPEOF          reduce using rule 37 (expression -> expression AND expression .)
    PARSE           reduce using rule 37 (expression -> expression AND expression .)
    LENGTH          reduce using rule 37 (expression -> expression AND expression .)
    PUSH            reduce using rule 37 (expression -> expression AND expression .)
    POP             reduce using rule 37 (expression -> expression AND expression .)
    STRUCT          reduce using rule 37 (expression -> expression AND expression .)
    PARDER          reduce using rule 37 (expression -> expression AND expression .)
    COMA            reduce using rule 37 (expression -> expression AND expression .)
    DOSP            reduce using rule 37 (expression -> expression AND expression .)
    CORCHETEDER     reduce using rule 37 (expression -> expression AND expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142

  ! MAS             [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! POTENCIA        [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MAYQUE          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MENQUE          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MENIGUALQUE     [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! IGUALQUE        [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! NIGUALQUE       [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]


state 210

    (39) final_expression -> PARIZQ expression PARDER .

    MAS             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    MODULO          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    MENQUE          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    PRINT           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    LOCAL           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    ID              reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    RETURN          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    BREAK           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    IF              reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    WHILE           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    FOR             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    LOG             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    LOG10           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    COS             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    SIN             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    TAN             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    SQRT            reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    TRUNC           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    PARSE           reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    LENGTH          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    PUSH            reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    POP             reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    STRUCT          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    DOSP            reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 39 (final_expression -> PARIZQ expression PARDER .)


state 211

    (40) final_expression -> CORCHETEIZQ exp_list CORCHETEDER .

    MAS             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MENOS           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    POR             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    DIVIDIDO        reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    POTENCIA        reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MODULO          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MAYQUE          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MENQUE          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MENIGUALQUE     reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    MAYIGUALQUE     reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    IGUALQUE        reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    NIGUALQUE       reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    OR              reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    AND             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PTCOMA          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PRINT           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PRINTLN         reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    LOCAL           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    GLOBAL          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    ID              reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    FUNCTION        reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    RETURN          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    BREAK           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    CONTINUE        reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    IF              reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    WHILE           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    FOR             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    LOG             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    LOG10           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    COS             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    SIN             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    TAN             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    SQRT            reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    UPPERCASE       reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    LOWERCASE       reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    TOSTRING        reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    TOFLOAT         reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    TRUNC           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    TYPEOF          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PARSE           reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    LENGTH          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PUSH            reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    POP             reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    STRUCT          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    PARDER          reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    COMA            reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    DOSP            reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)
    CORCHETEDER     reduce using rule 40 (final_expression -> CORCHETEIZQ exp_list CORCHETEDER .)


state 212

    (122) access_struct -> ID PUNTO ID .

    MAS             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    MENOS           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    POR             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 122 (access_struct -> ID PUNTO ID .)
    POTENCIA        reduce using rule 122 (access_struct -> ID PUNTO ID .)
    MODULO          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    MAYQUE          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    MENQUE          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    MENIGUALQUE     reduce using rule 122 (access_struct -> ID PUNTO ID .)
    MAYIGUALQUE     reduce using rule 122 (access_struct -> ID PUNTO ID .)
    IGUALQUE        reduce using rule 122 (access_struct -> ID PUNTO ID .)
    NIGUALQUE       reduce using rule 122 (access_struct -> ID PUNTO ID .)
    OR              reduce using rule 122 (access_struct -> ID PUNTO ID .)
    AND             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    PTCOMA          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    PRINT           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    PRINTLN         reduce using rule 122 (access_struct -> ID PUNTO ID .)
    LOCAL           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    GLOBAL          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    ID              reduce using rule 122 (access_struct -> ID PUNTO ID .)
    FUNCTION        reduce using rule 122 (access_struct -> ID PUNTO ID .)
    RETURN          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    BREAK           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    CONTINUE        reduce using rule 122 (access_struct -> ID PUNTO ID .)
    IF              reduce using rule 122 (access_struct -> ID PUNTO ID .)
    WHILE           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    FOR             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    LOG             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    LOG10           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    COS             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    SIN             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    TAN             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    SQRT            reduce using rule 122 (access_struct -> ID PUNTO ID .)
    UPPERCASE       reduce using rule 122 (access_struct -> ID PUNTO ID .)
    LOWERCASE       reduce using rule 122 (access_struct -> ID PUNTO ID .)
    TOSTRING        reduce using rule 122 (access_struct -> ID PUNTO ID .)
    TOFLOAT         reduce using rule 122 (access_struct -> ID PUNTO ID .)
    TRUNC           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    TYPEOF          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    PARSE           reduce using rule 122 (access_struct -> ID PUNTO ID .)
    LENGTH          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    PUSH            reduce using rule 122 (access_struct -> ID PUNTO ID .)
    POP             reduce using rule 122 (access_struct -> ID PUNTO ID .)
    STRUCT          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    PARDER          reduce using rule 122 (access_struct -> ID PUNTO ID .)
    COMA            reduce using rule 122 (access_struct -> ID PUNTO ID .)
    DOSP            reduce using rule 122 (access_struct -> ID PUNTO ID .)
    CORCHETEDER     reduce using rule 122 (access_struct -> ID PUNTO ID .)


state 213

    (104) if_state -> IF expression statement END .

    PTCOMA          reduce using rule 104 (if_state -> IF expression statement END .)


state 214

    (105) if_state -> IF expression statement ELSE . statement END
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 250
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 215

    (106) if_state -> IF expression statement else_if_list . END

    END             shift and go to state 251


state 216

    (107) else_if_list -> ELSEIF . expression statement
    (108) else_if_list -> ELSEIF . expression statement ELSE statement
    (109) else_if_list -> ELSEIF . expression statement else_if_list
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 252
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 217

    (110) while_state -> WHILE expression statement END .

    PTCOMA          reduce using rule 110 (while_state -> WHILE expression statement END .)


state 218

    (111) for_state -> FOR ID IN expression . DOSP expression statement END
    (112) for_state -> FOR ID IN expression . statement END
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    DOSP            shift and go to state 253
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 254
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 219

    (52) nativas -> LOG PARIZQ ENTERO COMA . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 255
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 220

    (53) nativas -> LOG10 PARIZQ expression PARDER .

    PTCOMA          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAS             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENOS           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    POR             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MODULO          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENQUE          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    OR              reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    AND             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    PRINT           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    LOCAL           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    ID              reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    RETURN          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    BREAK           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    IF              reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    WHILE           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    FOR             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    LOG             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    LOG10           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    COS             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    SIN             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    TAN             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    SQRT            reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    TRUNC           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    PARSE           reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    LENGTH          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    PUSH            reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    POP             reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    STRUCT          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    PARDER          reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    COMA            reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    DOSP            reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 53 (nativas -> LOG10 PARIZQ expression PARDER .)


state 221

    (54) nativas -> COS PARIZQ expression PARDER .

    PTCOMA          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MAS             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MENOS           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    POR             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MODULO          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MENQUE          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    OR              reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    AND             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    PRINT           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    LOCAL           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    ID              reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    RETURN          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    BREAK           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    IF              reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    WHILE           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    FOR             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    LOG             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    LOG10           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    COS             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    SIN             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    TAN             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    SQRT            reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    TRUNC           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    PARSE           reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    LENGTH          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    PUSH            reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    POP             reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    STRUCT          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    PARDER          reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    COMA            reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    DOSP            reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 54 (nativas -> COS PARIZQ expression PARDER .)


state 222

    (55) nativas -> SIN PARIZQ expression PARDER .

    PTCOMA          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MAS             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MENOS           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    POR             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MODULO          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    OR              reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    AND             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    PRINT           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    LOCAL           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    ID              reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    RETURN          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    BREAK           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    IF              reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    WHILE           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    FOR             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    LOG             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    LOG10           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    COS             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    SIN             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    TAN             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    SQRT            reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    TRUNC           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    PARSE           reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    LENGTH          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    PUSH            reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    POP             reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    STRUCT          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    PARDER          reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    COMA            reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    DOSP            reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 55 (nativas -> SIN PARIZQ expression PARDER .)


state 223

    (56) nativas -> TAN PARIZQ expression PARDER .

    PTCOMA          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MAS             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MENOS           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    POR             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MODULO          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    OR              reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    AND             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    PRINT           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    LOCAL           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    ID              reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    RETURN          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    BREAK           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    IF              reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    WHILE           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    FOR             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    LOG             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    LOG10           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    COS             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    SIN             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    TAN             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    SQRT            reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    TRUNC           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    PARSE           reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    LENGTH          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    PUSH            reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    POP             reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    STRUCT          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    PARDER          reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    COMA            reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    DOSP            reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 56 (nativas -> TAN PARIZQ expression PARDER .)


state 224

    (57) nativas -> SQRT PARIZQ expression PARDER .

    PTCOMA          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MAS             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MENOS           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    POR             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MODULO          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    OR              reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    AND             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    PRINT           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    LOCAL           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    ID              reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    RETURN          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    BREAK           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    IF              reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    WHILE           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    FOR             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    LOG             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    LOG10           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    COS             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    SIN             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    TAN             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    SQRT            reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    TRUNC           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    PARSE           reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    LENGTH          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    PUSH            reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    POP             reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    STRUCT          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    PARDER          reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    COMA            reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    DOSP            reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 57 (nativas -> SQRT PARIZQ expression PARDER .)


state 225

    (58) nativas -> UPPERCASE PARIZQ expression PARDER .

    PTCOMA          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAS             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENOS           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POR             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MODULO          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENQUE          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    OR              reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    AND             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PRINT           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LOCAL           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    ID              reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    RETURN          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    BREAK           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    IF              reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    WHILE           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    FOR             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LOG             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LOG10           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    COS             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    SIN             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    TAN             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    SQRT            reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    TRUNC           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PARSE           reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LENGTH          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PUSH            reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POP             reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    STRUCT          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PARDER          reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    COMA            reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    DOSP            reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 58 (nativas -> UPPERCASE PARIZQ expression PARDER .)


state 226

    (59) nativas -> LOWERCASE PARIZQ expression PARDER .

    PTCOMA          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAS             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENOS           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POR             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MODULO          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENQUE          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    OR              reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    AND             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PRINT           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LOCAL           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    ID              reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    RETURN          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    BREAK           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    IF              reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    WHILE           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    FOR             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LOG             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LOG10           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    COS             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    SIN             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    TAN             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    SQRT            reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    TRUNC           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PARSE           reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LENGTH          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PUSH            reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POP             reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    STRUCT          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PARDER          reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    COMA            reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    DOSP            reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 59 (nativas -> LOWERCASE PARIZQ expression PARDER .)


state 227

    (60) nativas -> TOSTRING PARIZQ expression PARDER .

    PTCOMA          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAS             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENOS           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POR             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MODULO          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENQUE          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    OR              reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    AND             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PRINT           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LOCAL           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    ID              reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    RETURN          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    BREAK           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    IF              reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    WHILE           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    FOR             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LOG             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LOG10           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    COS             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    SIN             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    TAN             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    SQRT            reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    TRUNC           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PARSE           reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LENGTH          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PUSH            reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POP             reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    STRUCT          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PARDER          reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    COMA            reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    DOSP            reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 60 (nativas -> TOSTRING PARIZQ expression PARDER .)


state 228

    (61) nativas -> TOFLOAT PARIZQ expression PARDER .

    PTCOMA          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAS             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENOS           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POR             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MODULO          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    OR              reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    AND             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PRINT           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LOCAL           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    ID              reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    RETURN          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    BREAK           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    IF              reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    WHILE           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    FOR             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LOG             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LOG10           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    COS             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    SIN             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    TAN             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    SQRT            reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    TRUNC           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PARSE           reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LENGTH          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PUSH            reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POP             reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    STRUCT          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PARDER          reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    COMA            reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    DOSP            reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 61 (nativas -> TOFLOAT PARIZQ expression PARDER .)


state 229

    (62) nativas -> TRUNC PARIZQ INT COMA . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 256
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 230

    (63) nativas -> TRUNC PARIZQ expression PARDER .

    PTCOMA          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MAS             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MENOS           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    POR             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MODULO          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MENQUE          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    OR              reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    AND             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    PRINT           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    LOCAL           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    ID              reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    RETURN          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    BREAK           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    IF              reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    WHILE           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    FOR             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    LOG             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    LOG10           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    COS             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    SIN             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    TAN             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    SQRT            reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    TRUNC           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    PARSE           reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    LENGTH          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    PUSH            reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    POP             reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    STRUCT          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    PARDER          reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    COMA            reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    DOSP            reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 63 (nativas -> TRUNC PARIZQ expression PARDER .)


state 231

    (64) nativas -> TYPEOF PARIZQ expression PARDER .

    PTCOMA          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAS             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENOS           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POR             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MODULO          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENQUE          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    OR              reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    AND             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PRINT           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LOCAL           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    ID              reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    RETURN          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    BREAK           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    IF              reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    WHILE           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    FOR             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LOG             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LOG10           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    COS             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    SIN             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    TAN             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    SQRT            reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    TRUNC           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PARSE           reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LENGTH          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PUSH            reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POP             reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    STRUCT          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PARDER          reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    COMA            reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    DOSP            reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 64 (nativas -> TYPEOF PARIZQ expression PARDER .)


state 232

    (65) nativas -> PARSE PARIZQ tipo COMA . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 257
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 233

    (66) nativas -> LENGTH PARIZQ expression PARDER .

    PTCOMA          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MAS             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MENOS           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    POR             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MODULO          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MENQUE          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    OR              reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    AND             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    PRINT           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    LOCAL           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    ID              reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    RETURN          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    BREAK           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    IF              reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    WHILE           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    FOR             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    LOG             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    LOG10           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    COS             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    SIN             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    TAN             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    SQRT            reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    TRUNC           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    PARSE           reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    LENGTH          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    PUSH            reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    POP             reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    STRUCT          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    PARDER          reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    COMA            reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    DOSP            reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 66 (nativas -> LENGTH PARIZQ expression PARDER .)


state 234

    (67) nativas -> PUSH PARIZQ expression COMA . expression PARDER
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 258
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 235

    (68) nativas -> POP PARIZQ expression PARDER .

    PTCOMA          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MAS             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MENOS           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    POR             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MODULO          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MENQUE          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    OR              reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    AND             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    PRINT           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    LOCAL           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    ID              reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    RETURN          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    BREAK           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    IF              reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    WHILE           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    FOR             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    LOG             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    LOG10           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    COS             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    SIN             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    TAN             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    SQRT            reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    UPPERCASE       reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    LOWERCASE       reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    TOSTRING        reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    TOFLOAT         reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    TRUNC           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    TYPEOF          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    PARSE           reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    LENGTH          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    PUSH            reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    POP             reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    STRUCT          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    PARDER          reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    COMA            reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    DOSP            reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)
    CORCHETEDER     reduce using rule 68 (nativas -> POP PARIZQ expression PARDER .)


state 236

    (119) attList -> ID DOSP . DOSP tipo PTCOMA

    DOSP            shift and go to state 259


state 237

    (118) attList -> attList ID . DOSP DOSP tipo PTCOMA

    DOSP            shift and go to state 260


state 238

    (117) create_struct -> STRUCT ID attList END .

    PTCOMA          reduce using rule 117 (create_struct -> STRUCT ID attList END .)


state 239

    (89) exp_list -> exp_list COMA expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          reduce using rule 89 (exp_list -> exp_list COMA expression .)
    COMA            reduce using rule 89 (exp_list -> exp_list COMA expression .)
    CORCHETEDER     reduce using rule 89 (exp_list -> exp_list COMA expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 240

    (84) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 261


state 241

    (83) definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP . tipo
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 262

state 242

    (91) index_list -> index_list CORCHETEIZQ expression CORCHETEDER .

    IGUAL           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEIZQ     reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MAS             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MENOS           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    POR             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    DIVIDIDO        reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    POTENCIA        reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MODULO          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MAYQUE          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MENQUE          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MENIGUALQUE     reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    MAYIGUALQUE     reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    IGUALQUE        reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    NIGUALQUE       reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    OR              reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    AND             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PTCOMA          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PRINT           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PRINTLN         reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    LOCAL           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    GLOBAL          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    ID              reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    FUNCTION        reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    RETURN          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    BREAK           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    CONTINUE        reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    IF              reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    WHILE           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    FOR             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    LOG             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    LOG10           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    COS             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    SIN             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    TAN             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    SQRT            reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    UPPERCASE       reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    LOWERCASE       reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    TOSTRING        reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    TOFLOAT         reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    TRUNC           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    TYPEOF          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PARSE           reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    LENGTH          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PUSH            reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    POP             reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    STRUCT          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    PARDER          reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    COMA            reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    DOSP            reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)
    CORCHETEDER     reduce using rule 91 (index_list -> index_list CORCHETEIZQ expression CORCHETEDER .)


state 243

    (121) assign_access -> ID PUNTO ID IGUAL expression .
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PTCOMA          reduce using rule 121 (assign_access -> ID PUNTO ID IGUAL expression .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 244

    (85) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 263


state 245

    (101) dec_params -> ID DOSP . DOSP tipo
    (102) dec_params -> ID DOSP . DOSP ID

    DOSP            shift and go to state 264


state 246

    (94) declare_function -> FUNCTION ID PARIZQ PARDER DOSP . DOSP tipo statement END

    DOSP            shift and go to state 265


state 247

    (97) declare_function -> FUNCTION ID PARIZQ PARDER statement . END

    END             shift and go to state 266


state 248

    (95) declare_function -> FUNCTION ID PARIZQ dec_params PARDER . DOSP DOSP tipo statement END
    (96) declare_function -> FUNCTION ID PARIZQ dec_params PARDER . statement END
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    DOSP            shift and go to state 267
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 268
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 249

    (98) dec_params -> dec_params COMA . ID DOSP DOSP tipo
    (99) dec_params -> dec_params COMA . ID DOSP DOSP ID
    (100) dec_params -> dec_params COMA . ID

    ID              shift and go to state 269


state 250

    (105) if_state -> IF expression statement ELSE statement . END

    END             shift and go to state 270


state 251

    (106) if_state -> IF expression statement else_if_list END .

    PTCOMA          reduce using rule 106 (if_state -> IF expression statement else_if_list END .)


state 252

    (107) else_if_list -> ELSEIF expression . statement
    (108) else_if_list -> ELSEIF expression . statement ELSE statement
    (109) else_if_list -> ELSEIF expression . statement else_if_list
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 271
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 253

    (111) for_state -> FOR ID IN expression DOSP . expression statement END
    (22) expression -> . MENOS expression
    (23) expression -> . NOT expression
    (24) expression -> . expression MAS expression
    (25) expression -> . expression MENOS expression
    (26) expression -> . expression POR expression
    (27) expression -> . expression DIVIDIDO expression
    (28) expression -> . expression POTENCIA expression
    (29) expression -> . expression MODULO expression
    (30) expression -> . expression MAYQUE expression
    (31) expression -> . expression MENQUE expression
    (32) expression -> . expression MENIGUALQUE expression
    (33) expression -> . expression MAYIGUALQUE expression
    (34) expression -> . expression IGUALQUE expression
    (35) expression -> . expression NIGUALQUE expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . final_expression
    (39) final_expression -> . PARIZQ expression PARDER
    (40) final_expression -> . CORCHETEIZQ exp_list CORCHETEDER
    (41) final_expression -> . DECIMAL
    (42) final_expression -> . ENTERO
    (43) final_expression -> . CADENA
    (44) final_expression -> . CARACTER
    (45) final_expression -> . ID
    (46) final_expression -> . ID index_list
    (47) final_expression -> . TRUE
    (48) final_expression -> . FALSE
    (49) final_expression -> . call_function
    (50) final_expression -> . access_struct
    (51) final_expression -> . nativas
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (122) access_struct -> . ID PUNTO ID
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER

    MENOS           shift and go to state 82
    NOT             shift and go to state 83
    PARIZQ          shift and go to state 85
    CORCHETEIZQ     shift and go to state 86
    DECIMAL         shift and go to state 87
    ENTERO          shift and go to state 88
    CADENA          shift and go to state 89
    CARACTER        shift and go to state 90
    ID              shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49

    expression                     shift and go to state 272
    final_expression               shift and go to state 84
    call_function                  shift and go to state 94
    access_struct                  shift and go to state 95
    nativas                        shift and go to state 96

state 254

    (112) for_state -> FOR ID IN expression statement . END

    END             shift and go to state 273


state 255

    (52) nativas -> LOG PARIZQ ENTERO COMA expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 274
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 256

    (62) nativas -> TRUNC PARIZQ INT COMA expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 275
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 257

    (65) nativas -> PARSE PARIZQ tipo COMA expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 276
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 258

    (67) nativas -> PUSH PARIZQ expression COMA expression . PARDER
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    PARDER          shift and go to state 277
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 259

    (119) attList -> ID DOSP DOSP . tipo PTCOMA
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 278

state 260

    (118) attList -> attList ID DOSP . DOSP tipo PTCOMA

    DOSP            shift and go to state 279


state 261

    (84) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP . tipo
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 280

state 262

    (83) definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 83 (definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo .)


state 263

    (85) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP . tipo
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 281

state 264

    (101) dec_params -> ID DOSP DOSP . tipo
    (102) dec_params -> ID DOSP DOSP . ID
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    ID              shift and go to state 282
    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 283

state 265

    (94) declare_function -> FUNCTION ID PARIZQ PARDER DOSP DOSP . tipo statement END
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 284

state 266

    (97) declare_function -> FUNCTION ID PARIZQ PARDER statement END .

    PTCOMA          reduce using rule 97 (declare_function -> FUNCTION ID PARIZQ PARDER statement END .)


state 267

    (95) declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP . DOSP tipo statement END

    DOSP            shift and go to state 285


state 268

    (96) declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement . END

    END             shift and go to state 286


state 269

    (98) dec_params -> dec_params COMA ID . DOSP DOSP tipo
    (99) dec_params -> dec_params COMA ID . DOSP DOSP ID
    (100) dec_params -> dec_params COMA ID .

    DOSP            shift and go to state 287
    PARDER          reduce using rule 100 (dec_params -> dec_params COMA ID .)
    COMA            reduce using rule 100 (dec_params -> dec_params COMA ID .)


state 270

    (105) if_state -> IF expression statement ELSE statement END .

    PTCOMA          reduce using rule 105 (if_state -> IF expression statement ELSE statement END .)


state 271

    (107) else_if_list -> ELSEIF expression statement .
    (108) else_if_list -> ELSEIF expression statement . ELSE statement
    (109) else_if_list -> ELSEIF expression statement . else_if_list
    (107) else_if_list -> . ELSEIF expression statement
    (108) else_if_list -> . ELSEIF expression statement ELSE statement
    (109) else_if_list -> . ELSEIF expression statement else_if_list

    END             reduce using rule 107 (else_if_list -> ELSEIF expression statement .)
    ELSE            shift and go to state 288
    ELSEIF          shift and go to state 216

    else_if_list                   shift and go to state 289

state 272

    (111) for_state -> FOR ID IN expression DOSP expression . statement END
    (24) expression -> expression . MAS expression
    (25) expression -> expression . MENOS expression
    (26) expression -> expression . POR expression
    (27) expression -> expression . DIVIDIDO expression
    (28) expression -> expression . POTENCIA expression
    (29) expression -> expression . MODULO expression
    (30) expression -> expression . MAYQUE expression
    (31) expression -> expression . MENQUE expression
    (32) expression -> expression . MENIGUALQUE expression
    (33) expression -> expression . MAYIGUALQUE expression
    (34) expression -> expression . IGUALQUE expression
    (35) expression -> expression . NIGUALQUE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    MODULO          shift and go to state 136
    MAYQUE          shift and go to state 137
    MENQUE          shift and go to state 138
    MENIGUALQUE     shift and go to state 139
    MAYIGUALQUE     shift and go to state 140
    IGUALQUE        shift and go to state 141
    NIGUALQUE       shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 290
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 273

    (112) for_state -> FOR ID IN expression statement END .

    PTCOMA          reduce using rule 112 (for_state -> FOR ID IN expression statement END .)


state 274

    (52) nativas -> LOG PARIZQ ENTERO COMA expression PARDER .

    PTCOMA          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAS             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENOS           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POR             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    DIVIDIDO        reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POTENCIA        reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MODULO          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAYQUE          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENQUE          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    IGUALQUE        reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    NIGUALQUE       reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    OR              reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    AND             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PRINT           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PRINTLN         reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LOCAL           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    GLOBAL          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    ID              reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    FUNCTION        reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    RETURN          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    BREAK           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    CONTINUE        reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    IF              reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    WHILE           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    FOR             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LOG             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LOG10           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    COS             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    SIN             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    TAN             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    SQRT            reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    UPPERCASE       reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LOWERCASE       reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    TOSTRING        reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    TOFLOAT         reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    TRUNC           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    TYPEOF          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PARSE           reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LENGTH          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PUSH            reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POP             reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    STRUCT          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PARDER          reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    COMA            reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    DOSP            reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    CORCHETEDER     reduce using rule 52 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)


state 275

    (62) nativas -> TRUNC PARIZQ INT COMA expression PARDER .

    PTCOMA          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAS             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENOS           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POR             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    DIVIDIDO        reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POTENCIA        reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MODULO          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAYQUE          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENQUE          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    IGUALQUE        reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    NIGUALQUE       reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    OR              reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    AND             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PRINT           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PRINTLN         reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LOCAL           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    GLOBAL          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    ID              reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    FUNCTION        reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    RETURN          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    BREAK           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    CONTINUE        reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    IF              reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    WHILE           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    FOR             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LOG             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LOG10           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    COS             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    SIN             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    TAN             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    SQRT            reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    UPPERCASE       reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LOWERCASE       reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    TOSTRING        reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    TOFLOAT         reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    TRUNC           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    TYPEOF          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PARSE           reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LENGTH          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PUSH            reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POP             reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    STRUCT          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PARDER          reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    COMA            reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    DOSP            reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    CORCHETEDER     reduce using rule 62 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)


state 276

    (65) nativas -> PARSE PARIZQ tipo COMA expression PARDER .

    PTCOMA          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAS             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENOS           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POR             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    DIVIDIDO        reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POTENCIA        reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MODULO          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAYQUE          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENQUE          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    IGUALQUE        reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    NIGUALQUE       reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    OR              reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    AND             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PRINT           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PRINTLN         reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LOCAL           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    GLOBAL          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    ID              reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    FUNCTION        reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    RETURN          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    BREAK           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    CONTINUE        reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    IF              reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    WHILE           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    FOR             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LOG             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LOG10           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    COS             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    SIN             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    TAN             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    SQRT            reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    UPPERCASE       reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LOWERCASE       reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    TOSTRING        reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    TOFLOAT         reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    TRUNC           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    TYPEOF          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PARSE           reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LENGTH          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PUSH            reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POP             reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    STRUCT          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PARDER          reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    COMA            reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    DOSP            reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    CORCHETEDER     reduce using rule 65 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)


state 277

    (67) nativas -> PUSH PARIZQ expression COMA expression PARDER .

    PTCOMA          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MAS             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MENOS           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    POR             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    DIVIDIDO        reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    POTENCIA        reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MODULO          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MAYQUE          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MENQUE          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    IGUALQUE        reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    NIGUALQUE       reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    OR              reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    AND             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    PRINT           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    PRINTLN         reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    LOCAL           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    GLOBAL          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    ID              reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    FUNCTION        reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    RETURN          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    BREAK           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    CONTINUE        reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    IF              reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    WHILE           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    FOR             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    LOG             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    LOG10           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    COS             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    SIN             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    TAN             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    SQRT            reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    UPPERCASE       reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    LOWERCASE       reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    TOSTRING        reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    TOFLOAT         reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    TRUNC           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    TYPEOF          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    PARSE           reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    LENGTH          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    PUSH            reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    POP             reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    STRUCT          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    PARDER          reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    COMA            reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    DOSP            reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)
    CORCHETEDER     reduce using rule 67 (nativas -> PUSH PARIZQ expression COMA expression PARDER .)


state 278

    (119) attList -> ID DOSP DOSP tipo . PTCOMA

    PTCOMA          shift and go to state 291


state 279

    (118) attList -> attList ID DOSP DOSP . tipo PTCOMA
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 292

state 280

    (84) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 84 (definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo .)


state 281

    (85) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 85 (definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo .)


state 282

    (102) dec_params -> ID DOSP DOSP ID .

    PARDER          reduce using rule 102 (dec_params -> ID DOSP DOSP ID .)
    COMA            reduce using rule 102 (dec_params -> ID DOSP DOSP ID .)


state 283

    (101) dec_params -> ID DOSP DOSP tipo .

    PARDER          reduce using rule 101 (dec_params -> ID DOSP DOSP tipo .)
    COMA            reduce using rule 101 (dec_params -> ID DOSP DOSP tipo .)


state 284

    (94) declare_function -> FUNCTION ID PARIZQ PARDER DOSP DOSP tipo . statement END
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 293
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 285

    (95) declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP . tipo statement END
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 294

state 286

    (96) declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END .

    PTCOMA          reduce using rule 96 (declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END .)


state 287

    (98) dec_params -> dec_params COMA ID DOSP . DOSP tipo
    (99) dec_params -> dec_params COMA ID DOSP . DOSP ID

    DOSP            shift and go to state 295


state 288

    (108) else_if_list -> ELSEIF expression statement ELSE . statement
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 296
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 289

    (109) else_if_list -> ELSEIF expression statement else_if_list .

    END             reduce using rule 109 (else_if_list -> ELSEIF expression statement else_if_list .)


state 290

    (111) for_state -> FOR ID IN expression DOSP expression statement . END

    END             shift and go to state 297


state 291

    (119) attList -> ID DOSP DOSP tipo PTCOMA .

    END             reduce using rule 119 (attList -> ID DOSP DOSP tipo PTCOMA .)
    ID              reduce using rule 119 (attList -> ID DOSP DOSP tipo PTCOMA .)


state 292

    (118) attList -> attList ID DOSP DOSP tipo . PTCOMA

    PTCOMA          shift and go to state 298


state 293

    (94) declare_function -> FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement . END

    END             shift and go to state 299


state 294

    (95) declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo . statement END
    (93) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . asignacion_arreglo_instr PTCOMA
    (9) instruccion -> . definicion_asignacion_instr PTCOMA
    (10) instruccion -> . call_function PTCOMA
    (11) instruccion -> . declare_function PTCOMA
    (12) instruccion -> . return_state PTCOMA
    (13) instruccion -> . break_state PTCOMA
    (14) instruccion -> . continue_state PTCOMA
    (15) instruccion -> . if_state PTCOMA
    (16) instruccion -> . while_state PTCOMA
    (17) instruccion -> . for_state PTCOMA
    (18) instruccion -> . nativas PTCOMA
    (19) instruccion -> . create_struct PTCOMA
    (20) instruccion -> . declare_struct PTCOMA
    (21) instruccion -> . assign_access PTCOMA
    (69) print_instr -> . PRINT PARIZQ exp_list PARDER
    (70) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (78) definicion_instr -> . LOCAL ID
    (79) definicion_instr -> . GLOBAL ID
    (80) asignacion_instr -> . ID IGUAL expression
    (81) asignacion_instr -> . LOCAL ID IGUAL expression
    (82) asignacion_instr -> . GLOBAL ID IGUAL expression
    (86) asignacion_arreglo_instr -> . ID index_list IGUAL expression
    (83) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (84) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (85) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (87) call_function -> . ID PARIZQ PARDER
    (88) call_function -> . ID PARIZQ exp_list PARDER
    (94) declare_function -> . FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END
    (95) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END
    (96) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (97) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (115) return_state -> . RETURN
    (116) return_state -> . RETURN expression
    (113) break_state -> . BREAK
    (114) continue_state -> . CONTINUE
    (104) if_state -> . IF expression statement END
    (105) if_state -> . IF expression statement ELSE statement END
    (106) if_state -> . IF expression statement else_if_list END
    (110) while_state -> . WHILE expression statement END
    (111) for_state -> . FOR ID IN expression DOSP expression statement END
    (112) for_state -> . FOR ID IN expression statement END
    (52) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (53) nativas -> . LOG10 PARIZQ expression PARDER
    (54) nativas -> . COS PARIZQ expression PARDER
    (55) nativas -> . SIN PARIZQ expression PARDER
    (56) nativas -> . TAN PARIZQ expression PARDER
    (57) nativas -> . SQRT PARIZQ expression PARDER
    (58) nativas -> . UPPERCASE PARIZQ expression PARDER
    (59) nativas -> . LOWERCASE PARIZQ expression PARDER
    (60) nativas -> . TOSTRING PARIZQ expression PARDER
    (61) nativas -> . TOFLOAT PARIZQ expression PARDER
    (62) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (63) nativas -> . TRUNC PARIZQ expression PARDER
    (64) nativas -> . TYPEOF PARIZQ expression PARDER
    (65) nativas -> . PARSE PARIZQ tipo COMA expression PARDER
    (66) nativas -> . LENGTH PARIZQ expression PARDER
    (67) nativas -> . PUSH PARIZQ expression COMA expression PARDER
    (68) nativas -> . POP PARIZQ expression PARDER
    (117) create_struct -> . STRUCT ID attList END
    (120) declare_struct -> . ID DOSP DOSP ID
    (121) assign_access -> . ID PUNTO ID IGUAL expression

    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOCAL           shift and go to state 24
    GLOBAL          shift and go to state 26
    ID              shift and go to state 25
    FUNCTION        shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    COS             shift and go to state 36
    SIN             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 41
    TOSTRING        shift and go to state 42
    TOFLOAT         shift and go to state 43
    TRUNC           shift and go to state 44
    TYPEOF          shift and go to state 45
    PARSE           shift and go to state 46
    LENGTH          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    STRUCT          shift and go to state 50

    statement                      shift and go to state 300
    instrucciones                  shift and go to state 152
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    asignacion_arreglo_instr       shift and go to state 8
    definicion_asignacion_instr    shift and go to state 9
    call_function                  shift and go to state 10
    declare_function               shift and go to state 11
    return_state                   shift and go to state 12
    break_state                    shift and go to state 13
    continue_state                 shift and go to state 14
    if_state                       shift and go to state 15
    while_state                    shift and go to state 16
    for_state                      shift and go to state 17
    nativas                        shift and go to state 18
    create_struct                  shift and go to state 19
    declare_struct                 shift and go to state 20
    assign_access                  shift and go to state 21

state 295

    (98) dec_params -> dec_params COMA ID DOSP DOSP . tipo
    (99) dec_params -> dec_params COMA ID DOSP DOSP . ID
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . ARRAY
    (77) tipo -> . NOTHING

    ID              shift and go to state 301
    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    BOOL            shift and go to state 171
    CHAR            shift and go to state 172
    STRING          shift and go to state 173
    ARRAY           shift and go to state 174
    NOTHING         shift and go to state 175

    tipo                           shift and go to state 302

state 296

    (108) else_if_list -> ELSEIF expression statement ELSE statement .

    END             reduce using rule 108 (else_if_list -> ELSEIF expression statement ELSE statement .)


state 297

    (111) for_state -> FOR ID IN expression DOSP expression statement END .

    PTCOMA          reduce using rule 111 (for_state -> FOR ID IN expression DOSP expression statement END .)


state 298

    (118) attList -> attList ID DOSP DOSP tipo PTCOMA .

    END             reduce using rule 118 (attList -> attList ID DOSP DOSP tipo PTCOMA .)
    ID              reduce using rule 118 (attList -> attList ID DOSP DOSP tipo PTCOMA .)


state 299

    (94) declare_function -> FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END .

    PTCOMA          reduce using rule 94 (declare_function -> FUNCTION ID PARIZQ PARDER DOSP DOSP tipo statement END .)


state 300

    (95) declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement . END

    END             shift and go to state 303


state 301

    (99) dec_params -> dec_params COMA ID DOSP DOSP ID .

    PARDER          reduce using rule 99 (dec_params -> dec_params COMA ID DOSP DOSP ID .)
    COMA            reduce using rule 99 (dec_params -> dec_params COMA ID DOSP DOSP ID .)


state 302

    (98) dec_params -> dec_params COMA ID DOSP DOSP tipo .

    PARDER          reduce using rule 98 (dec_params -> dec_params COMA ID DOSP DOSP tipo .)
    COMA            reduce using rule 98 (dec_params -> dec_params COMA ID DOSP DOSP tipo .)


state 303

    (95) declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END .

    PTCOMA          reduce using rule 95 (declare_function -> FUNCTION ID PARIZQ dec_params PARDER DOSP DOSP tipo statement END .)

